@using ODMSCommon.Resources
@using ODMSModel.SupplierDispatchPart
@{
    ViewBag.Title = MessageResource.Delivery_PageTitle_Update;
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
}
<script id="complete-confirmation" type="text/x-kendo-template">
    <p class="complete-message">@Html.Raw(MessageResource.Global_Display_DeliveryDateQuestion)</p>
    <p style="text-align:right">
        <button class="complete-confirm k-button">@MessageResource.Global_Display_Yes</button>
        <button class="complete-cancel k-button">@MessageResource.Global_Display_No</button>
    </p>
</script>
<script id="complete-confirmation2" type="text/x-kendo-template">
    <p class="complete-message2">@Html.Raw(MessageResource.Global_Display_CompleteConfirmQuestion)</p>
    <p style="text-align:right">
        <button class="complete-confirm2 k-button2">@MessageResource.Global_Display_Yes</button>
        <button class="complete-cancel2 k-button2">@MessageResource.Global_Display_No</button>
    </p>
</script>
<style type="text/css">
    body {
        overflow: hidden;
    }
</style>




 
@model ODMSModel.Delivery.DeliveryCreateModel
<script src="~/Scripts/odms.objectsearch.js"></script>
<div class="container panel-group" style="float: left; width: 100%;">
    <div class="panel panel-default panel-collapse">
        <div class="panel-heading">
            <a data-toggle="collapse" data-parent="#gradDeliveryInfo" href="#collapseDeliveryInfo">
                <strong style="font-size: 12px;">@MessageResource.Delivery_PageTitle_Update</strong>
            </a>
        </div>
        <div id="collapseDeliveryInfo">

            @using (Html.BeginForm("DeliveryUpdate", "Delivery", FormMethod.Post, new { id = "frmDeliveryUpdate" }))
            {  <br />
                @Html.AntiForgeryToken()
                @Html.HiddenFor(c => c.DeliveryId)
                @Html.HiddenFor(c => c.PurchaseNo)
                @Html.HiddenFor(c => c.StatusId)
                <div class="labelDiv">@Html.LabelFor(c => c.SupplierId)</div>
                <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c => c.SupplierId).Events(e => e.Change("onChange")).BindTo(ViewBag.SupplierList as List<SelectListItem>).DataTextField("Text").DataValueField("Value").Placeholder(MessageResource.Global_Display_Select).Enable(false)  @Html.ValidationMessageFor(c => c.SupplierId)  </div>
                if (Model.StatusId == -1)
                {
                    <div class="clearDiv"></div>
                    <div class="labelDiv">&nbsp;</div>
                    <div class="shortTxtDiv">
                        <a class="k-button" onclick=" OpenPurchaseOrderSelectWindow(); ">
                            <i class="glyphicon glyphicon-search"></i>@MessageResource.ObjectSearch_PageTitle_PurchaseOrder
                        </a>
                        <i id="ok" class="glyphicon glyphicon-remove text-danger"></i>
                        @Html.ValidationMessageFor(c => c.PurchaseNo)
                    </div>
                }
                <div class="clearDiv"></div>
                <div class="labelDiv">@Html.LabelFor(c => c.WayBillNo)</div>
                <div class="shortTxtDiv">@Html.TextBoxFor(c => c.WayBillNo) @Html.ValidationMessageFor(c => c.WayBillNo) </div>

                <div class="labelDiv">@Html.LabelFor(c => c.WayBillDate)</div>
                <div class="shortTxtDiv">
                    @Html.Kendo().DatePickerFor(c => c.WayBillDate).Events(e => e.Change("onChange")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).Max(DateTime.Now).Min(DateTime.Now.AddYears(-1)).HtmlAttributes(new { type = "text" })  @Html.ValidationMessageFor(c => c.WayBillDate)
                </div>
                <div class="clearDiv"></div>

                <div class="labelDiv">@Html.LabelFor(c => c.InvoiceSerialNo)</div>
                <div class="shortTxtDiv">@Html.TextBoxFor(c => c.InvoiceSerialNo) @Html.ValidationMessageFor(c => c.InvoiceSerialNo)</div>

                <div class="labelDiv">@Html.LabelFor(c => c.InvoiceNo)</div>
                <div class="shortTxtDiv">@Html.TextBoxFor(c => c.InvoiceNo)   @Html.ValidationMessageFor(c => c.InvoiceNo)</div>
                <div class="clearDiv"></div>
                <div class="labelDiv">@Html.LabelFor(c => c.InvoiceDate)</div>
                <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.InvoiceDate).Format("dd/MM/yyyy").Value(Model == null || Model.InvoiceDate == default(DateTime) ? DateTime.Now : Model.InvoiceDate).ParseFormats(new string[] { "dd.MM.yyyy" }).Max(DateTime.Now).Min(DateTime.Now.AddYears(-1)).HtmlAttributes(new { type = "text" }) @Html.ValidationMessageFor(v => v.InvoiceDate) </div>
                <div class="clearDiv"></div>
                <br />
                @ODMSHelpers.Button("Update", CommonUtility.GetResourceValue("Global_Display_Update"), CommonValues.PermissionCodes.Delivery.DeliveryUpdate, "DeliveryUpdate")
            }

            <div id="PurchaseOrderSelectWindow" class="hide" style="background-color: #EDF1F4 !important">
            </div>

        </div>
    </div>
</div>
@if (Model.StatusId == -1)
{
    <div class="container panel-group" style="float: left; width: 100%;">
        <div class="panel panel-default panel-collapse" style="margin-top: 2px;">
            <div class="panel-heading">
                <a data-toggle="collapse" data-parent="#gradPartsInfo" href="#collapsePartsInfo">
                    <strong style="font-size: 12px;">@CommonUtility.GetResourceValue("SupplierDispatchPart_PageTitle_NewCreate")</strong>
                </a>
            </div>
            <div id="collapsePartsInfo">
                @using (Html.BeginForm("SupplierDispatchPartExternalCreate", "Delivery", FormMethod.Post))
                {
                    <br />
                    @Html.HiddenFor(c => c.DeliveryId)
                    <div class="labelDiv">@Html.Label(MessageResource.SupplierDispatchPart_Display_PartName)</div>
                    <div class="shortTxtDiv">
                        @{
                    Html.RenderAction("AutocompleteSearch", "AutocompleteSearch", new { SearchType = "NotOrginalSparePart", ControlId = "PartId", Title1 = "", Title2 = "", DefaultText = "", DefaultValue = "", CallbackFunction = "GetValues" });
                        }

                    </div>
                    <div class="clearDiv"></div>
                    <div class="labelDiv">@Html.Label(MessageResource.SupplierDispatchPart_Display_Qty)</div>
                    <div class="shortTxtDiv">
                        @Html.Kendo().NumericTextBox().Name("Qty").Min(1).HtmlAttributes(new { data_val_min = "0", style = "width:200px" }).Spinners(false)

                    </div>
                    <div class="labelDiv">@Html.Label(MessageResource.SupplierDispatchPart_Display_InvoicePrice)</div>
                    <div class="shortTxtDiv">
                        @Html.Kendo().NumericTextBox().Name("InvoicePrice").Decimals(2).Spinners(false).Culture(System.Threading.Thread.CurrentThread.CurrentUICulture.ToString()).HtmlAttributes(new { style = "width:200px" })

                    </div>
                    <div class="clearDiv"></div>
                    <br />
                    @ODMSHelpers.Button("Save", CommonUtility.GetResourceValue("Global_Display_Save"), CommonValues.PermissionCodes.SupplierDispatchPart.SupplierDispatchPartCreate, "SupplierDispatchPartCreate","return partControl();")
                }
            </div>
        </div>
    </div>
}
<div class="kendoGridDiv" style="margin-left: 15px; margin-top: 15px;" id="grd2">
    @(Html.Kendo().Grid<SupplierDispatchPartListModel>()
                      .Name("SupplierDispatchPartGrid")
                      .Columns(columns =>
                      {
                          columns.Bound(o => o.DeliverySeqNo).Width("10%").ClientTemplate("<center><a href='javascript:void(0);' id='#=DeliverySeqNo#' frameTitle='" + CommonUtility.GetResourceValue("Supplier_PageTitle_Delete") + "' onclick='Delete(#=DeliverySeqNo#,#=StatusId#)' ><img class=iconLink src='" + @Url.Content("~/Images/delete.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Sortable(false).Visible(@Model.StatusId == -1);
                          columns.Bound(p => p.PartCode).Width("30%").Sortable(true);
                          columns.Bound(p => p.PartName).Width("30%").Sortable(true);
                          columns.Bound(p => p.Qty).Width("15%").Sortable(true).ClientTemplate("#= OnDatabound(Qty)#").EditorTemplateName("NewDecimalNumericTextbox").Format("{0:N2}");
                          columns.Bound(p => p.InvoiceP).Width("15%").Sortable(true).ClientTemplate("#= OnDatabound(InvoiceP)#").EditorTemplateName("NewDecimalNumericTextbox").Format("{0:N2}");
                      })
                      .Sortable()
                      //.Editable(editable => editable.Mode(GridEditMode.InCell))
                      .DataSource(dataSource => dataSource
                          .Ajax()
                          .Batch(true)
                          .Read(read => read.Action("Read", "SupplierDispatchPart", Model))
                          .Model(
                              model =>
                              {
                                  model.Id(p => p.DeliverySeqNo);
                                  model.Field(p => p.DeliverySeqNo).Editable(false);
                                  model.Field(p => p.InvoiceP).Editable(Model.StatusId == -1);
                                  model.Field(p => p.PartCode).Editable(false);
                                  model.Field(p => p.Qty).Editable(Model.StatusId == -1);
                              }).Update(update => update.Action("SupplierDispatchPartSave", "SupplierDispatchPart").Type(HttpVerbs.Post)))
                      .HtmlAttributes(new { style = "width:100%;margin-top:15px;" })
    )
    @if (Model.StatusId == -1)
    {
        @ODMSHelpers.Button("Save", CommonUtility.GetResourceValue("Global_Display_Save"), CommonValues.PermissionCodes.SupplierDispatchPart.SupplierDispatchPartCreate, "SupplierDispatchPart", "SaveChanges();")
        @ODMSHelpers.Button("btnComp", CommonUtility.GetResourceValue("Global_Display_Complete"), CommonValues.PermissionCodes.SupplierDispatchPart.SupplierDispatchPartCreate, "CompleteSupplierDispatchPart", "CompleteDelivery();")
    }
</div>
<script src="~/Scripts/custom.js"></script>
<script>
    function partControl()
    {
        
        var invoicePrice = $("#InvoicePrice").data("kendoNumericTextBox");
        var qty = $("#Qty").data("kendoNumericTextBox");
        var partId = $('#PartId').val();
        if(invoicePrice.value() == null || invoicePrice.value() == 0 || qty.value() == null || qty.value() == 0 || partId == "")
        {
            SetErrorMessage("@MessageResource.DeliveryUpdate_Part_IsRequired");
            return false;
        }
    }

    function CompleteConfirm2(completeFunction) {
        var confirm = false;
        var kendoWindow = $("<div />").kendoWindow({
            title: "@MessageResource.Gloabl_Display_Approve",
            resizable: false,
            modal: true
        });

        kendoWindow.data("kendoWindow")
            .content($("#complete-confirmation2").html())
            .center().open();

        kendoWindow
            .find(".complete-confirm2, .complete-cancel2")
            .click(function() {
                if ($(this).hasClass("complete-confirm2")) {
                    confirm = true;
                    if (completeFunction) {
                        completeFunction();
                    }
                }
                kendoWindow.data("kendoWindow").close();
            })
            .end();
        return confirm;
    }
    function CompleteDelivery() {
        CompleteConfirm2(function() {
            $.ajax({
                type: "POST",
                url: "@Url.Action("CompleteSupplierDispatchPart", "SupplierDispatchPart")",
                data: { id: @Model.DeliveryId },
                traditional: true,
                success: function(result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#SupplierDispatchPartGrid').data('kendoGrid');
                        grid.dataSource.read();
                        SetSuccessMessage(result.Message);
                        parent.CloseModelWindow();
                    }
                },
                dataType: "json"
            });
        });
    }
    function SaveChanges() {
       
        var isValid = true;
        var grid = $("#SupplierDispatchPartGrid").data("kendoGrid");
        if (grid.dataSource.hasChanges()) {
            var list = grid.dataSource.data();
            for (var i = 0; i < list.length; i++) {
                if (list[i].Qty == null || list[i].Qty < 0)
                    isValid = false;
                if (list[i].Qty != null && list[i].Qty >= 0) {
                    var truncValue = Math.floor(list[i].Qty);
                    if (truncValue.toString().length > 5) {
                        @{
                            string message = string.Format(MessageResource.Validation_IntegerLength, 5);
                        }
                        SetErrorMessage('@message');
                        return false;
                    }
                }
            }
            if (isValid) {
                grid.saveChanges();
                SetSuccessMessage('@MessageResource.Global_Display_Success');

                var grid = $("#SupplierDispatchPartGrid").data("kendoGrid");
                grid.dataSource.read();


            } else {
                SetErrorMessage('@MessageResource.SupplierDispatchPart_Warning_EmptyQuantity');
            }
        } else {
            SetErrorMessage('@MessageResource.CycleCountResult_Warning_NoChange');
        }
    }
    function Delete(id, statusId) {
        var token = $('input[name="__RequestVerificationToken"]').val();

        DeleteConfirm(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("SupplierDispatchPartDelete", "SupplierDispatchPart")",
                data: { id: id, statusId: statusId, "__RequestVerificationToken": token },
                traditional: true,
                success: function (result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#SupplierDispatchPartGrid').data('kendoGrid');
                        grid.dataSource.read();
                        SetSuccessMessage(result.Message);
                    }
                },
                dataType: "json"
            });
        });
    }
    function GetValues() {
        var token = $('input[name="__RequestVerificationToken"]').val();

        $.post("@Url.Action("GetOrderPrice", "PurchaseOrderDetail")", {
                partId: $('#PartId').val(), "__RequestVerificationToken": token
            }, function (json) {
                if (json) {
                    $("#InvoicePrice").kendoNumericTextBox({
                        value: json.OrderPrice,
                        spinners: false
                    });
                }
            }, "JSON");
    }
    function OnDatabound(aQty) {
        if ('@Model.StatusId' == '-1') {
            if (aQty == null || aQty < 0) {
                return "<div style='background: lightgray'>" + '@MessageResource.Global_Display_Enter' + " </div>";
            } else {
                var culture = "@System.Threading.Thread.CurrentThread.CurrentUICulture.ToString()";
                if (culture == "tr-TR") aQty = aQty.toString().replace(".", ",");
                return "<div style='background: lightgray'>" + aQty + "</div>";
            }
        } else
            return aQty;
    }
    function CompleteConfirm(completeFunction) {
        var confirm = false;
        var kendoWindow = $("<div />").kendoWindow({
            title: "@MessageResource.Global_Display_Approve",
            resizable: false,
            modal: true
        });

        kendoWindow.data("kendoWindow")
            .content($("#complete-confirmation").html())
            .center().open();

        kendoWindow
            .find(".complete-confirm, .complete-cancel")
            .click(function () {
                if ($(this).hasClass("complete-confirm")) {
                    confirm = true;
                    if (completeFunction)
                        completeFunction();
                }
                else if ($(this).hasClass("complete-cancel")) {
                    $("#WayBillDate").data("kendoDatePicker").value('');
                }
                kendoWindow.data("kendoWindow").close();
            })
            .end();
        return confirm;
    }

    function onChange() {
        var date = $("#WayBillDate").data("kendoDatePicker");
        if (date.value() > new Date($.now())) {
            CompleteConfirm(function () {

            });

        }
    }
    function OpenPurchaseOrderSelectWindow() {
        if ($('#SupplierId').val() == '') {
            SetErrorMessage("@MessageResource.Delivery_Warning_SelectSupplier");
            return;
        }
        window.parent.ResizeWindow(1400, 800);

        $('#PurchaseOrderSelectWindow').kwnd('@Url.Action("PurchaseSelect")' + '/' + $('#SupplierId').val(), '@Html.Raw(MessageResource.ObjectSearch_PageTitle_PurchaseOrder)',
            {
                iframe: true,
                width: 1300,
                height: 700,
                onClose: function () {
                    $("#PurchaseOrderSelectWindow").html('');
                    window.parent.ResizeWindow(1000, 600);
                },
            });
        $('#PurchaseOrderSelectWindow').removeClass("hide");
        OpenWindow($('#PurchaseOrderSelectWindow'));

    }

    function CloseSearch(items) {
        var wnd = $('#PurchaseOrderSelectWindow').data("kendoWindow");
        wnd.close();
        if (items.length == 0) {
            $("#ok").removeClass("glyphicon-ok").removeClass("text-success").addClass("glyphicon-remove").addClass("text*danger");
        } else {
            $("#ok").removeClass("glyphicon-remove").removeClass("text*danger").addClass("glyphicon-ok").addClass("text-success");
            var val = "";
            $(items).each(function (i, e) {
                val += e + ';';
            });
            $('#PurchaseNo').val(val);
        }
    }

    $(document).ready(function () {
        // yeni kayıt

        var idatepicker = $("#WayBillDate").data("kendoDatePicker");
        if ('@Model.StatusId' != '-1') {
            $('#WayBillNo').prop("readonly", true);
            idatepicker.readonly();
        } else {
            $('#WayBillNo').prop("readonly", false);
            idatepicker.readonly(false);
        }

        var wdatepicker = $("#WayBillDate").data("kendoDatePicker");
        wdatepicker.readonly();

        $("#SupplierDispatchPartGrid").find(".k-grid-toolbar").insertAfter($(".kendoGridDiv .k-grid > table"));
        window.parent.ResizeWindow(1000, 750);
        $(".k-window").css("height", "750");
        $(".k-window").css("width", "1000");
        $('form').each(function () {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                try {
                    validator.settings.ignore = "";
                } catch (e) { }
            }
        });
    });
</script>

