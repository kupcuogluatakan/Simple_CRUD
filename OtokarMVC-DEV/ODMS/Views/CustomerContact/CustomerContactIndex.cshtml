@model ODMSModel.CustomerContact.CustomerContactListModel
@if (Model.CustomerId != 0)
{
    @ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClickCustomerContact createNewCustomerContact", CommonUtility.GetResourceValue("CustomerContact_PageTitle_Create"), CommonValues.PermissionCodes.CustomerContact.CustomerContactCreate)
}
<br />
@Html.AntiForgeryToken()
<div id="CustomerContactModelWindowDiv">
    @(Html.Kendo().Window()
        .Name("CustomerContactModelWindow")
     .Draggable()
    .Resizable()
    .Width(950)
    .Height(350)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#CustomerContactGrid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
    )
</div>
<script>

    $(document).ready(function () {

        $("body").delegate(".modalClickCustomerContact", "click", function (e) {
            $('#CustomerContactModelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("details") == true) {
                link = "@Url.Action("CustomerContactDetails", "CustomerContact", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("edit")) {
                link = "@Url.Action("CustomerContactUpdate", "CustomerContact", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("createNewCustomerContact")) {
                link = "@Url.Action("CustomerContactCreate", "CustomerContact", new { customerId = Model.CustomerId, customerName = Model.CustomerName })";
            }
            $("#CustomerContactModelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#CustomerContactModelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
           
        });

    });
    function DeleteCustomerContact(cId) {
        var token = $('input[name="__RequestVerificationToken"]').val();
        
    DeleteConfirm(function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("DeleteCustomerContact", "CustomerContact")",
            data: { contactId: cId, "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                if (result.Status == 0)
                    SetErrorMessage(result.Message);
                else {
                    var grid = $('#CustomerContactGrid').data('kendoGrid');
                    grid.dataSource.read();
                    SetSuccessMessage(result.Message);
                }
            },
            dataType: "json"
        });
    });
}
</script>
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.CustomerContact.CustomerContactListModel>()
          .Name("CustomerContactGrid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.ContactId).ClientTemplate("<center><a class='details modalClickCustomerContact' id='#=ContactId#' frameTitle='" + @CommonUtility.GetResourceValue("CustomerContact_PageTitle_Details") + "' href='/CustomerContact/CustomerContactDetails/#=ContactId#'><img class=iconLink src='" + Url.Content("~/Images/view.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.CustomerContact.CustomerContactDetails));
                  columns.Bound(p => p.ContactId).ClientTemplate("<center><a class='edit modalClickCustomerContact' id='#=ContactId#' frameTitle='" + @CommonUtility.GetResourceValue("CustomerContact_PageTitle_Update") + "' href='/CustomerContact/CustomerContactUpdate/#=ContactId#'><img class=iconLink src='" + Url.Content("~/Images/edit.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.CustomerContact.CustomerContactUpdate));
                  columns.Bound(o => o.ContactId).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + CommonUtility.GetResourceValue("CustomerContact_PageTitle_Delete") + "' onclick='DeleteCustomerContact(#=ContactId#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.CustomerContact.CustomerContactDelete));
                  columns.Bound(p => p.ContactTypeName).Width(100).Sortable(true);
                  columns.Bound(p => p.ContactTypeValue).Width(100).Sortable(true);
                  columns.Bound(p => p.Name).Width(100).Sortable(true);
                  columns.Bound(p => p.Surname).Width(100).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()
           
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListCustomerContact", "CustomerContact", Model))
                                        .Model(model => model.Field(o => o.CustomerId).DefaultValue(-1)))

          )
</div>
