@model ODMSModel.DealerClass.DealerClassViewModel
@{
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
}

@{
    ViewBag.Title = ODMSCommon.Resources.MessageResource.DealerClass_PageTitle_Create;
}


@using (Html.BeginForm("DealerClassCreate", "DealerClass", FormMethod.Post))
{
           
    <div class="labelDiv">@Html.LabelFor(v => v.DealerClassCode)</div>
    <div class="shortTxtDiv">@Html.TextBoxFor(v => v.DealerClassCode, new {style=" text-transform : uppercase;" }) @Html.ValidationMessageFor(v => v.DealerClassCode) </div>

    <div class="labelDiv">@Html.LabelFor(v => v.SSIdDealerClass)</div>
    <div class="shortTxtDiv">@Html.TextBoxFor(v => v.SSIdDealerClass, new {style=" text-transform : uppercase;" }) @Html.ValidationMessageFor(v => v.SSIdDealerClass) </div>
    <div class="clearDiv">&nbsp;</div>
    <div class="labelDiv">@Html.LabelFor(v => v.DealerClassName)</div>
    <div class="shortTxtDiv">@Html.TextBoxFor(v => v.DealerClassName) @Html.ValidationMessageFor(v => v.DealerClassName) </div>@*
   
    <div class="labelDiv">@Html.LabelFor(v => v.IsActiveName)</div>
    <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.IsActive).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StatusList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) 
    @Html.ValidationMessageFor(v => v.IsActive)
    </div>*@
    
    <div class="labelDiv">@Html.LabelFor(w => w.IsActiveName)</div>
    <div class="shortTxtDiv">@Html.CheckBoxFor(w => w.IsActive)</div>
    
     <div class="clearDiv">&nbsp;</div>
  
    @ODMSHelpers.Button("Create", CommonUtility.GetResourceValue("Global_Display_Save"), CommonValues.PermissionCodes.DealerClass.DealerClassCreate, "DealerClassCreate")          

}
<script src="~/Scripts/jquery.maskedinput.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $('form').each(function () {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                validator.settings.ignore = "";
            }
        });

    $('#DealerClassCode').bind('keypress', function (event) {
        var regex = new RegExp("^[a-zA-Z0-9]+$");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
    });

    });

</script>


