@model ODMSModel.CampaignRequestApprove.CampaignRequestApproveViewModel
@using ODMSCommon.Resources

@{
    ViewBag.Title = CommonUtility.GetResourceValue("CampaignRequestApprove_PageTitle_Update");
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
}
@using (Html.BeginForm("CampaignRequestApproveUpdate", "CampaignRequestApprove", FormMethod.Post))
{
    <div class="labelDiv">@Html.LabelFor(v => v.CampaignRequestId)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(v => v.CampaignRequestId)</div>
    <div class="clearDiv">&nbsp;</div>
    <div class="labelDiv">@Html.LabelFor(v => v.ModelKod)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(v => v.ModelKod)</div>
    <div class="labelDiv">@Html.LabelFor(v => v.RequestDealerName)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(v => v.RequestDealerName)</div>
    <div class="clearDiv">&nbsp;</div>
    <div class="labelDiv">@Html.LabelFor(v => v.CampaignCode)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(v => v.CampaignCode)</div>
    <div class="labelDiv">@Html.LabelFor(v => v.CampaignName)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(v => v.CampaignName)</div>
    <div class="clearDiv">&nbsp;</div>
    <div class="labelDiv">@Html.LabelFor(v => v.SupplierTypeName)</div>
    if (Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.WaitingForApproval)
    {
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(v => v.SupplierTypeId).DataTextField("Text").DataValueField("Value").Events(ev => ev.Change(@"function(e){HideShowSupplierDealer();}")).BindTo(ViewBag.SupplierTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))
            @Html.ValidationMessageFor(v => v.SupplierTypeId)
        </div>
    }
    else
    {
        <div class="shortTxtDiv">@Html.DisplayFor(v => v.SupplierTypeName)</div>
    }
    <div class="labelDiv">@Html.LabelFor(v => v.RequestStatusName)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(v => v.RequestStatusName) @(Model.UpdateDate != DateTime.MinValue ? ("("+Model.UpdateDate)+")": "") </div>
    <div class="clearDiv">&nbsp;</div>
    <div id="divSupplierDealer">
        <div class="labelDiv">@Html.LabelFor(v => v.SupplierDealerName)</div>
        @if (Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.WaitingForApproval)
        {
            <div class="shortTxtDiv">
                @Html.Kendo().ComboBoxFor(v => v.SupplierDealerId).DataValueField("Value").DataTextField("Text").Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose).DataSource(source => source.Read(read => read.Action("ListSupplierDealers", "CampaignRequestApprove")
    .Data("GetSupplierFilterDetails"))
    .ServerFiltering(true)).Enable(false).AutoBind(false).Events(e=>e.DataBound("OnSupplierDealerBound")).CascadeFrom("SupplierTypeId").Template("<span class='clsSupplierDealer'>#: data.Text#</span>")
                
                @Html.ValidationMessageFor(v => v.SupplierDealerId)
            </div>
        }
        else
        {
            <div class="shortTxtDiv">@Html.DisplayFor(v => v.SupplierDealerName)</div>
        }
        <div class="labelDiv">@Html.LabelFor(v => v.Quantity)</div>

        @if (Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.WaitingForApproval && !Model.IsWorkOrderRelated)
        {
            <div class="shortTxtDiv">
                @*@Html.Kendo().NumericTextBoxFor(v => v.Quantity).Decimals(0).Format("{0:N}").Min(1).Max(999).Spinners(false).HtmlAttributes(new { type = "text", style = "width:204px" }).Events(ev => ev.Change("RefreshSupplierDealerList"))*@
                @Html.TextBoxFor(v => v.Quantity, new { @min = 1, @maxlength = 999, @onchange = "RefreshSupplierDealerList();", onkeypress = "return isNumberKey(event);", onkeydown = "return checkSelectedvin(event);" })
                @Html.ValidationMessageFor(v => v.Quantity)
            </div>
        }
        else
        {
            <div class="shortTxtDiv">@Html.DisplayFor(v => v.Quantity)</div>

            //Bunu açtım çünkü Quantity db'de null olamaz. bunu bir if koşuluna bağladığımızda güncelleme hata veriyor.
            <input id="Quantity" type="hidden" name="Quantity" value="@Model.Quantity" />


            //Bu önceden var olan  ama if bloğundaki kontrole iş kartı bağlantısıda sokulmuş. bir eksik olabilir.
            @*if (Model.RequestStatusId != (int)CommonValues.CampaignRequestStatus.WaitingForApproval)
                {
                    @Html.HiddenFor(v => v.Quantity)
                }*@



        }

        <div class="clearDiv">&nbsp;</div>
    </div>
    <div class="labelDiv">@Html.LabelFor(v => v.RequestNote)</div>
    if (Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.WaitingForApproval)
    {
        <div class="shortTxtDiv">@Html.TextAreaFor(v => v.RequestNote) @Html.ValidationMessageFor(v => v.RequestNote)</div>
    }
    else
    {
        <div class="shortTxtDiv">@Html.DisplayFor(v => v.RequestNote)</div>
    }

    if (Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.Cancelled)
    {
        <div class="labelDiv">
            Red Nedeni
        </div>
        <div class="shortTxtDiv">


            <textarea id="RejectionNote" name="RejectionNote" rows="3">
                @Model.RejectionNote
            </textarea>

        </div>
    }
    else
    {
        @Html.HiddenFor(v => v.RejectionNote)
    }


    <style>
        .clearVinBtn, .orderVinBtn {
            display: none;
            width: 100px;
        }

        .vinSearches {
            display: none;
        }

        .vinNumbers {
            border-bottom: 1px solid #dfd6d6;
            padding: 3px;
            margin: 3px;
        }

            .vinNumbers label {
                font-size: 11.9px !important;
                line-height: 12px !important;
                font-weight: bold;
                cursor: pointer;
            }

            .vinNumbers:hover {
                background-color: #eeebeb;
            }

        .vinNumbersHovered {
            background-color: #eeebeb;
        }

        .campVin {
            background-color: white;
            max-height: 150px !important;
            overflow-y: scroll !important;
            width: 200px;
            padding-top: 0px;
            text-align: center;
        }
    </style>


    <link href="~/Content/others/css/tipso.css" rel="stylesheet" />
    <script src="~/Content/others/js/tipso.js"></script>

    <script>


        function checkSelectedvin(event)
        {
            if ($("#VinCodes").val() != "") {
                event.preventDefault();
                event.stopPropagation();
                return false;
            }
            else {
                return true;
            }

        }

        $(document).ready(documentInit());

        function documentInit() {
            $("#campVinSearch").bind('paste', function (event) {
                setTimeout(function () {
                    searchVinNo($("#campVinSearch").val());
                }, 250);
            });


            LoadCampVins(@Model.CampaignCode);
        }

        function clearSelectedVins()
        {
            $('.vinNumbers input[type="checkbox"]:checked').prop('checked',false);
            $("#VinCodes").val('');
            $(".clearVinBtn").hide();
            $(".orderVinBtn").hide();
            $(".vinNumbers").removeClass("vinNumbersHovered");
            $(".vinNumbers").attr("order", "2");

            $("#Quantity").val(''); //bu sonradan kapandı.
            $("#campVinSearch").val('');
            searchVinNo('');
        }

        function selectVin(elem,vinNo)
        {
            var selectedChecks = $('.vinNumbers input[type="checkbox"]:checked');
            var map = selectedChecks.map(function () { return this.value; }).get().join(',');

            $("#VinCodes").val(map);
            $(".clearVinBtn").show();
            $(".orderVinBtn").show();

            var closesVin = $(elem).closest(".vinNumbers");
            var order = (closesVin.attr("order") == "2" ? "1" : "2");
            closesVin.attr("order", order);

            closesVin.toggleClass("vinNumbersHovered");

            $("#Quantity").val(selectedChecks.length=="0"?"":selectedChecks.length);
            RefreshSupplierDealerList();
        }

        function ReOrderVinList() {

            var vinNumberList = $(".vinNumbers").sort(function (a, b) {

                var sortA = parseInt($(a).attr("order"));
                var sortB = parseInt($(b).attr("order"));
                return (sortA < sortB) ? -1 : (sortA > sortB) ? 1 : 0;
            });

            $("#campVinSearch").val('');
            searchVinNo('');
            $(".campVin").html(vinNumberList);
            $(".campVin").scrollTop(0);
        }

        function LoadCampVins(CampCode)
        {

            $.post('@Url.Action("GetCampaignVinNumbers", "CampaignRequestApprove")',
            {
                CampaignCode: CampCode

            }, function (data) {

                var html = "";

                if (data.Data.length>0) {
                    $(".vinSearches").show();
                }

                var selectedVins = '@Model.VinCodes';


                var forApproval = '@(Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.WaitingForApproval)';
                var isWorkOrderRelated = parseInt(@Model.WodCampaignRequestId) > 0;
                var isApproved = '@(Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.Approved)';
                var isDeclined = '@(Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.Cancelled)';

                if (isWorkOrderRelated)
                {
                    html += "<div  class='vinNumbers vinNumbersHovered' vin='" + selectedVins + "' order='1'>";
                    html += "<b style='display:inline-block;width:18px;'></b>";
                    html += "<label>"+selectedVins+"</label>";
                    html += "</div>";
                }
                else
                {

                    $.each(data.Data, function () {

                        var dex = selectedVins.indexOf(this.VinNo);

                        var currentDexhtml = "";

                        currentDexhtml += "<div  class='vinNumbers " + (dex > -1 ? "vinNumbersHovered" : "") + "' vin='" + this.VinNo + "' order='" + (dex > -1 ? "1" : "2") + "'>";
                        currentDexhtml += "<b style='display:inline-block;width:18px;'></b>";
                        currentDexhtml += "<label>";
                        currentDexhtml += "<input type='checkbox' class='" + (forApproval == "False" ? " hide " : "") + "' value='" + this.VinNo + "' " + (dex > -1 ? " checked='checked' " : "") + "  onclick=\"selectVin(this,'" + this.VinNo + "')\"/>";
                        currentDexhtml += this.VinNo;
                        currentDexhtml += "</label>";
                        currentDexhtml += "</div>";

                        if ((isApproved == "True" || isDeclined == "True") && dex < 0) { // Eğer onaylı ve seçili değilse basma
                            currentDexhtml = "";
                        }

                        html += currentDexhtml;


                    });

                }




                if (selectedVins != '' && selectedVins != undefined) {

                    $("#VinCodes").val(selectedVins);

                    $(".clearVinBtn").show();
                    $(".orderVinBtn").show();


                    var searchObj = {

                        CampaignRequestId: @Model.CampaignRequestId,
                        VinCodes: selectedVins
                    }

                    $.post('@Url.Action("ListCampaignRequestVinApprovedCounts", "CampaignRequestApprove")',
                            searchObj,
                            function(data)
                            {
                                $.each(data.Data,function(){
                                    $('div[vin="'+this.VinCode+'"]').find("b").html("("+this.Count+")");
                                    $('div[vin="'+this.VinCode+'"]').prepend("<i class='fa fa-info-circle'></i>").find("i").addClass("tipso").attr("data-tipso","@MessageResource.CampaignRequestApprove_Display_VinApproveCount".replace("%x%",this.Count));
                                });

                                $('.tipso').tipso({
                                    background: '#50a3ec',
                                    color: 'white'
                                });

                            });
                      }



                $(".campVin").html(html);
                ReOrderVinList();

                if (forApproval == "False" || isWorkOrderRelated) {
                    $(".campTools").hide();

                }

            });

        }

    function searchVinNo(searchKey) {

        searchKey = searchKey.toLocaleLowerCase();

        var vinNumbers = $(".vinNumbers");

        $.each(vinNumbers, function () {

            var currentElem = $(this);
            var currentVin = currentElem.attr("vin").toLocaleLowerCase();

            if (searchKey.indexOf(',') > -1) {
                var searchKeyArray = searchKey.split(',');

                var exitFlag = 0;
                $.each(searchKeyArray, function () {

                    if (currentVin.indexOf(this) > -1) {
                        currentElem.show();
                        exitFlag = 1;
                    }
                    else {
                        currentElem.hide();
                    }

                    if (exitFlag == 1) {
                        return false;
                    }

                });
            }
            else {
                if (currentVin.indexOf(searchKey) > -1) {
                    currentElem.show();
                }
                else {
                    currentElem.hide();
                }
            }

        });


        }

    </script>

    <div class="labelDiv campLabel vinSearches">@MessageResource.CampaignRequest_Display_VinNumbers</div>
    <div class="shortTxtDiv vinSearches">
        <input id="campVinSearch" type='text' class='k-input' onkeyup='searchVinNo(this.value);' placeholder='@MessageResource.CampaignRequest_Display_SearchVin' />

        @Html.HiddenFor(v => v.VinCodes)
        <div class="campVin">

        </div>
        <div class="btn-group campTools">
            <button class="orderVinBtn btn btn-primary" type="button" onclick="ReOrderVinList();">@MessageResource.CampaignRequest_Display_OrderVin</button>
            <button class="clearVinBtn btn btn-danger" type="button" onclick="clearSelectedVins();">@MessageResource.CampaignRequest_Display_ClearVin</button>
        </div>

    </div>





    <div class="clearDiv">&nbsp;</div>
    <br />
    if (Model.RequestStatusId == (int)CommonValues.CampaignRequestStatus.WaitingForApproval)
    {
        @ODMSHelpers.Button("Update", CommonUtility.GetResourceValue("Global_Display_Update"), CommonValues.PermissionCodes.CampaignRequestApprove.CampaignRequestApproveUpdate, "CampaignRequestApproveUpdate")
    }
    @Html.HiddenFor(v => v.ModelKod)
    @Html.HiddenFor(v => v.CampaignRequestId)
    @Html.HiddenFor(v => v.RequestDealerId)
    @Html.HiddenFor(v => v.RequestDealerName)
    @Html.HiddenFor(v => v.CampaignCode)




    @Html.HiddenFor(v => v.CampaignName)
    @Html.HiddenFor(v => v.RequestStatusId)
    @Html.HiddenFor(v => v.SupplierDealerName)
    @Html.HiddenFor(v => v.SupplierTypeName)}
<script type="text/javascript">
    function GetSupplierFilterDetails() {
        if ($('#SupplierTypeId').val() != 1) {
            return {
                CampaignRequestId: $('#CampaignRequestId').val(),
                RequiredQuantity: $('#Quantity').val()
            };
        }
        else
        {
            $("#SupplierDealerId").data("kendoComboBox").enable(false);
            $("#SupplierDealerId").data("kendoComboBox").text('');
            return null;
        }
    }
    function RefreshSupplierDealerList()
    {
        $("#SupplierDealerId").data("kendoComboBox").text('');
        $("#SupplierDealerId").data("kendoComboBox").dataSource.read();
    }
    function OnSupplierDealerBound() {

        $(".clsSupplierDealer").each(function(){
        
            var txt = $(this).text();
            var parts = txt.split('/');

            $(this).html(parts[0]+"<br /> "+"<span style='font-weight:bold;'>"+parts[1]+"</span>")

        
        });


        HideShowSupplierDealer();
    }
    function HideShowSupplierDealer() {
        if ($('#SupplierTypeId').val() == 1) {
            $("#SupplierDealerId").data("kendoComboBox").enable(false);
            $("#SupplierDealerId").data("kendoComboBox").text('');
        }
        else {
            $("#SupplierDealerId").data("kendoComboBox").enable(true);
        }
    }
    $(document).ready(function () {
        HideShowSupplierDealer();

        $('form').each(function () {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                validator.settings.ignore = "";
            }
        });

    });
</script>
