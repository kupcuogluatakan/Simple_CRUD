@using ODMSCommon.Resources
@model ODMSModel.DealerPurchaseOrder.DealerPurchaseOrderViewModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("DealerPurchaseOrder_PageTitle_Index");
    bool isClosed = Model != null && CommonValues.PurchaseOrderStatus.NewRecord.GetHashCode() != Model.PurchaseStatus;
    int errCode = Model != null ? Model.ErrorNo : 0;
}
@Html.AntiForgeryToken()
@if (errCode != 400 && errCode != 401)
{
    if (!isClosed)
    {
        if (Model != null && Model.SupplierId > 0 && Model.PurchaseOrderId > 0)
        {
            @ODMSHelpers.Button("btnComp", MessageResource.DealerPurchaseOrder_Display_BtnComplete, null, "DealerPurchaseOrderComplete", "completeOrder()", false)
        }

        <div class="clearDiv">&nbsp;</div>
        using (Html.BeginForm("DealerPurchaseOrderIndex", "DealerPurchaseOrder", FormMethod.Post, new { onSubmit = "return validateForm();" }))
        {

            <div class="labelDiv">@Html.LabelFor(v => v.SupplierId)</div>
            <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.SupplierId).Events(e => e.Open("onSelect").Close("onClose")).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.SLDealer as List<SelectListItem>).Placeholder(MessageResource.Global_Display_Choose)     @Html.ValidationMessageFor(c => c.SupplierId)</div>


            <div class="clearDiv">&nbsp;</div>

            <div class="labelDiv">@Html.LabelFor(v => v.VehicleId)</div>
            <div class="shortTxtDivObjectSearch">@Html.Partial("~/Views/ObjectSearch/ObjectSearch.cshtml", new ODMSModel.ObjectSearch.ObjectSearchModel { ObjectSearchType = CommonValues.ObjectSearchType.Vehicle, WindowTitle = MessageResource.ObjectSearch_WindowTitle_Vehicle, ReferenceObjectId = "VehicleId", ClearCallBackFunction = null, SelectCallBackFunction = null, Required = false, ReferenceObjectValue = Model == null ? null : Model.VehicleId, ParentWindowId = "" })</div>

            <div class="labelDiv">@Html.LabelFor(v => v.ShipDate)</div>
            <div class="shortTxtDiv">@Html.Kendo().DateTimePickerFor(v => v.ShipDate).TimeFormat("HH:mm").Format("dd/MM/yyyy HH:mm").ParseFormats(new[] { "dd.MM.yyyy HH:mm" }).Min(CommonUtility.GetSeedDateForPublish()).HtmlAttributes(new { type = "text" })   @Html.ValidationMessageFor(v => v.ShipDate)</div>

            <div class="clearDiv">&nbsp;</div>

            <div class="labelDiv">@Html.LabelFor(v => v.PurchaseOrderType)</div>
            <div class="shortTxtDiv">
                @(Html.Kendo().ComboBoxFor(v => v.PurchaseOrderType)
                                    .DataTextField("Text").DataValueField("Value")
                                    .Events(e => e.Change("onChangePOType"))
                                    .BindTo(ViewBag.SLPOType as List<SelectListItem>)
                                    .SelectFirstOne(ViewBag.SLPOType as List<SelectListItem>)
                                    .Placeholder(MessageResource.Global_Display_Choose))
                @Html.ValidationMessageFor(c => c.PurchaseOrderType)
            </div>

            <div class="labelDiv">@Html.LabelFor(v => v.PurchaseStatus)</div>
            <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.PurchaseStatus).DataTextField("Text").DataValueField("Value").Enable(false).BindTo(ViewBag.SLPOStatus as List<SelectListItem>).Placeholder(MessageResource.Global_Display_Choose)</div>

            @Html.HiddenFor(p => p.PurchaseOrderId)
            @Html.HiddenFor(p => p.CommandType)

            <div class="clearDiv">&nbsp;</div>

            @ODMSHelpers.Button("Create", CommonUtility.GetResourceValue("Global_Display_Save"), null, "DealerPurchaseOrderCreate")



        }
    }
    else
    {
        <div class="labelDiv">@Html.LabelFor(v => v.SupplierId)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.SupplierId).Enable(false).Events(e => e.Open("onSelect").Close("onClose")).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.SLDealer as List<SelectListItem>).Placeholder(MessageResource.Global_Display_Choose)   @Html.ValidationMessageFor(c => c.SupplierId)</div>

        <div class="labelDiv">@Html.LabelFor(v => v.IsViaCenter)</div>
        <div class="shortTxtDiv">@Html.CheckBoxFor(p => p.IsViaCenter, new { disabled = "disabled" })</div>

        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.VehicleId)</div>
        <div class="shortTxtDiv">@Html.DisplayFor(p => p.VehicleName)</div>

        <div class="labelDiv">@Html.LabelFor(v => v.ShipDate)</div>
        <div class="shortTxtDiv">@Html.Kendo().DateTimePickerFor(v => v.ShipDate).Enable(false).TimeFormat("HH:mm").Format("dd/MM/yyyy HH:mm").ParseFormats(new[] { "dd.MM.yyyy HH:mm" }).Min(CommonUtility.GetSeedDateForPublish()).HtmlAttributes(new { type = "text" })   @Html.ValidationMessageFor(v => v.ShipDate)</div>

        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.PurchaseOrderType)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.PurchaseOrderType).Enable(false).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.SLPOType as List<SelectListItem>).Placeholder(MessageResource.Global_Display_Choose)   @Html.ValidationMessageFor(c => c.PurchaseOrderType)</div>
        @Html.HiddenFor(p => p.PurchaseOrderId)
        @Html.HiddenFor(p => p.CommandType)
        <div class="labelDiv">@Html.LabelFor(v => v.PurchaseStatus)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.PurchaseStatus).Enable(false).DataTextField("Text").DataValueField("Value").Enable(false).BindTo(ViewBag.SLPOStatus as List<SelectListItem>).Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose)</div>
    }

    if (Model != null && Model.SupplierId >= 0 && Model.ErrorNo <= 0)
    {
        <div class="clearDiv">&nbsp;</div>
        @(Html.Kendo().TabStrip()
          .Name("tabstrip")
          .Animation(animation => animation.Open(open => open.Fade(FadeDirection.In)))
          .Items(tabstrip =>
          {
              tabstrip.Add().Text(MessageResource.DealerPurchaseOrder_Display_OrderPart)
                  .Selected(true)
                  .Content(@<text>
                    @{if (!isClosed)
                        {
                            <div id="showSearch">@Html.Raw(MessageResource.DealerPurchaseOrder_Display_AddPart)</div>
                            <div class="clearfix"></div>

                            <div id="searchField" style="display: none">

                                <div class="clearDiv">&nbsp;</div>
                                <div class="labelDiv">@Html.LabelFor(v => v.PartName)</div>
                                <div class="shortTxtDiv">@Html.TextBoxFor(p => p.PartName, new { disabled = "disabled" })</div>
                                <div class="labelDiv">@Html.LabelFor(v => v.Quantity)</div>
                                @Html.Kendo().NumericTextBoxFor(p => p.Quantity).Format("{0:N}").Decimals(2).Min(1).Value(1).HtmlAttributes(new { type = "text", maxlength = "8", data_val_min = "0", data_val_max = "1000", style = "width:200px" })
                                <div class="clearDiv">&nbsp;</div>
                                <div class="labelDiv">@Html.LabelFor(v => v.ListPrice)</div>
                                <div class="shortTxtDiv">@Html.TextBoxFor(p => p.ListPrice, new { disabled = "disabled" })</div>
                                <div class="labelDiv">@Html.LabelFor(v => v.DiscountRatio)</div>
                                <div class="shortTxtDiv">@Html.TextBoxFor(p => p.DiscountRatio, new { disabled = "disabled" })</div>
                                <div class="labelDiv">@Html.LabelFor(v => v.DiscountPrice)</div>
                                <div class="shortTxtDiv">@Html.TextBoxFor(p => p.DiscountPrice, new { disabled = "disabled" })</div>
                                @Html.HiddenFor(v => v.PartId)

                                <div class="clearDiv">&nbsp;</div>
                                @ODMSHelpers.Button("btnCreatePart", CommonUtility.GetResourceValue("Global_Display_Save"), null, "DealerPurchaseOrderCreate", "CreatePart()")
                                <div class="clearDiv">&nbsp;</div>

                                <h4>@CommonUtility.GetResourceValue("DealerPurchaseOrder_GridTitle_CanBeOrder")</h4>
                                

                                            <div class="labelDiv">
                                                <label class="control-label">@MessageResource.CampaignPart_Display_PartCode</label>
                                            </div>
                                            <div class="shortTxtDiv">
                                                <input type="text" id="SalePartCode" />
                                            </div>
                                            <div class="labelDiv">
                                                <label class="control-label">@MessageResource.PartDefinition_Display_PartName</label>
                                            </div>
                                            <div class="shortTxtDiv">
                                                <input type="text" id="SalePartName" />
                                            </div>
                                            <div class="clearDiv">
                                                &nbsp;
                                            </div>
                      <button class="btn btn-success btn-sm" onclick="searchDealerSaleSparepartGrid();">
                          <i class="fa fa-search"></i> @MessageResource.Global_Display_Search
                      </button>
                                  
                              
                                <div class="kendoGridDiv" id="grd2">
                                    @(Html.Kendo().Grid<ODMSModel.DealerSaleSparepart.DealerSaleSparepartListModel>()
                    .Name("DealerSaleSparepartGrid")

                    .Columns(columns =>
                    {
                        columns.Bound(p => p.IdPart).ClientTemplate("<center><a><img onClick='AddPart(#=IdPart#)' width='16px' height='16px' class=iconLink src='" + @Url.Content("~/Images/add.png") + "'></a></center>").Title(MessageResource.Global_Display_Add).Width(50).Sortable(false);
                        columns.Bound(p => p.IdPart).Sortable(true).ClientTemplate("#=PartCode# - #=PartName#").Title(MessageResource.DealerSaleSparepart_Display_IdPart);
                        columns.Bound(p => p.DiscountRatio).Sortable(true);
                        columns.Bound(p => p.DiscountPrice).Sortable(true);
                        columns.Bound(p => p.ListPrice).Sortable(true);
                    })
                    .Pageable()
                    .Sortable()
                    .Scrollable()

                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .PageSize(10)
                        .ServerOperation(true)
                        .Read(read => read.Action("ListDealerSaleSparepart", "DealerSaleSparepart", Model).Data("DealerSalePart"))
                        .Model(model => model.Field(o => o.IdPart).DefaultValue(-1)))

                                    )
                                </div>
                            </div>
                        }
                    }
                    <div class="clearDiv">&nbsp;</div>

                    <h4>@CommonUtility.GetResourceValue("DealerPurchaseOrder_GridTitle_Purchased")</h4>
                    <div class="kendoGridDiv" id="grd">
                        @(Html.Kendo().Grid<ODMSModel.DealerSaleSparepart.DealerSaleSparepartListModel>()
                                          .Name("ListDealerOrderPartGrid")
                                          .Columns(columns =>
                                          {
                                              if (!isClosed)
                                              {
                                                  columns.Bound(p => p.PODetSeqNo).ClientTemplate("<center><a><img onClick='DeletePart(#=PODetSeqNo#)' width='16px' height='16px' class=iconLink src='" + @Url.Content("~/Images/delete.png") + "'></a></center>").Title(MessageResource.Global_Display_Delete).Width(50).Sortable(false);
                                              }

                                              columns.Bound(p => p.IdPart).Sortable(true).ClientTemplate("#=PartCode# - #=PartName#").Title(MessageResource.DealerSaleSparepart_Display_IdPart);
                                              columns.Bound(p => p.Quantity).Sortable(true);
                                              columns.Bound(p => p.DiscountRatio).Sortable(true);
                                              columns.Bound(p => p.DiscountPrice).Sortable(true);
                                              columns.Bound(p => p.ListPrice).Sortable(true);
                                              columns.Bound(p => p.TotalPrice).Sortable(true);
                                          })
                                          .Pageable()
                                          .Sortable()
                                          .Scrollable()
                                          .DataSource(dataSource => dataSource
                                              .Ajax()
                                              .PageSize(10)
                                              .ServerOperation(true)
                                              .Read(read => read.Action("ListDealerOrderPart", "DealerPurchaseOrder", Model).Data("DealerOrderPart"))
                                              .Model(model => model.Field(o => o.IdPart).DefaultValue(-1)))

                        )
                    </div>

                </text>);

          })
        )

                        }
                        <script src="~/Scripts/odms.objectsearch.js"></script>
                        <script>
                            var check = $("#PurchaseOrderType").val();
                            var isVehicle = 0;
                            //For setting Kendo row
                            function onChangePOType() {
                                var token = $('input[name="__RequestVerificationToken"]').val();

                                //var dataItem = this.dataItem(e.item.index());
                                var value = $("#PurchaseOrderType").val();
                                if (value > 0) {
                                    $.ajax({
                                        type: "POST",
                                        url: "@Url.Action("CheckDealerPurchaseOrderPOType", "DealerPurchaseOrder")",
                                        data: { poType: value, "__RequestVerificationToken": token },
                                        traditional: true,
                                        success: function (result) {
                                            window.isVehicle = result.IsVehicleMust;
                                        },
                                        dataType: "json"
                                    });
                                }
                                window.check = value;
                            }

                            function searchDealerSaleSparepartGrid() {
                                var grid = $('#DealerSaleSparepartGrid').data('kendoGrid');
                                grid.dataSource.read();
                            }

                            function validateForm() {
                                if (window.isVehicle > 0) {
                                    if ($("#VehicleId").val() > 0) {
                                        return true;
                                    } else {
                                        SetErrorMessage('@MessageResource.DealerPurchaseOrder_Error_NoVehicle');
                                        return false;
                                    }
                                } else {

                                    return true;
                                }
                                return true;
                            }

                            $(document).ready(function () {

                                var isPart = '@Model.PartId';
                                if (isPart > 0) {
                                    AddPart(isPart);
                                    $(this).addClass("searchVisible");
                                    $("#searchField").show("slow");
                                }
                            });

                            function completeOrder() {
                                var token = $('input[name="__RequestVerificationToken"]').val();

                                var grid = $("#ListDealerOrderPartGrid").data("kendoGrid");
                                var count = grid.dataSource.total();
                                if (count > 0) {
                                    var poNumber = '@Model.PurchaseOrderId';
                                    $.ajax({
                                        type: "POST",
                                        url: "@Url.Action("CompleteDealerPurchaseOrder", "DealerPurchaseOrder")",
                                        data: { poNumber: poNumber, "__RequestVerificationToken": token },
                                        traditional: true,
                                        success: function (result) {
                                            if (result.Status == 0) {

                                            } else {
                                                window.location = '@Url.Action("DealerPurchaseOrderIndex", "DealerPurchaseOrder", new { id = Model.PurchaseOrderId, isSuc = 1 })';
                                            }
                                        },
                                        dataType: "json"
                                    });
                                } else {
                                    SetErrorMessage('@MessageResource.DealerPurchaseOrder_Error_NoParts');
                                }
                            }

                            function CreatePart() {
                                var token = $('input[name="__RequestVerificationToken"]').val();

                                var partId = $("#PartId").val();
                                var quantity = $("#Quantity").val();
                                var poNumber = '@Model.PurchaseOrderId';
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("CreateDealerPurchasePart", "DealerPurchaseOrder")",
                                    data: { partId: partId, quantity: quantity, poNumber: poNumber, "__RequestVerificationToken": token },
                                    traditional: true,
                                    success: function (result) {
                                        if (result.Status == 0)
                                            SetErrorMessage(result.Message);
                                        else {
                                            $(this).removeClass("searchVisible");
                                            $("#searchField").hide("slow");
                                            SetSuccessMessage(result.Message);
                                            setInput(null, null, null, null, null);
                                            var grid = $('#ListDealerOrderPartGrid').data('kendoGrid');
                                            grid.dataSource.read();
                                        }
                                    },
                                    dataType: "json"
                                });
                            }
                            function DeletePart(value) {
                                var token = $('input[name="__RequestVerificationToken"]').val();

                                DeleteConfirm(function () {
                                    $.ajax({
                                        type: "POST",
                                        url: "@Url.Action("DeleteDealerPurchasePart", "DealerPurchaseOrder")",
                                        data: { poDetSeqNo: value, "__RequestVerificationToken": token },
                                        traditional: true,
                                        success: function (result) {
                                            if (result.Status == 0)
                                                SetErrorMessage(result.Message);
                                            else {
                                                var grid = $('#ListDealerOrderPartGrid').data('kendoGrid');
                                                grid.dataSource.read();
                                                SetSuccessMessage(result.Message);
                                            }
                                        },
                                        dataType: "json"
                                    });
                                });
                            }
                            function AddPart(value) {
                                var token = $('input[name="__RequestVerificationToken"]').val();

                                var partId = value;
                                var suppId = '@Model.SupplierId';
                                $.ajax({
                                    type: "POST",
                                    url: "@Url.Action("AddDealerPurchasePart", "DealerPurchaseOrder")",
                                    data: { partId: partId, suppId: suppId, "__RequestVerificationToken": token },
                                    traditional: true,
                                    success: function (result) {
                                        setInput(value, result.name, result.price, result.discountRat, result.discountPrice);
                                    },
                                    dataType: "json"
                                });
                            }
                            function onSelect() {
                                SetWarningMessage('@MessageResource.DealerPurchaseOrder_Warning_ChangeSupplier');
                            }
                            function onClose() {
                                $("#ajaxWarning").hide("slow");
                            }
                            function DealerSalePart() {
                                return {
                                    IdDealer: '@Model.SupplierId',
                                    IsActive: true,
                                    DoNotReturnStockQuantityZero: true,
                                    PartCode: $("#SalePartCode").val(),
                                    PartName:$("#SalePartName").val()
                                };


                            }
                            function DealerOrderPart() {
                                return {
                                    PurchaseOrderId: '@Model.PurchaseOrderId'
                                };
                            }
                            function setInput(value, name, price, discountRat, discountPrice) {
                                $("#PartId").val(value);
                                $("#PartName").val(name);
                                $("#ListPrice").val(price);
                                $("#DiscountRatio").val(discountRat);
                                $("#DiscountPrice").val(discountPrice);
                                $("#Quantity").data("kendoNumericTextBox").value(1);
                            }
                            $("body").delegate("#showSearch", "click", function (e) {
                                var IsVisible = Boolean($(this).hasClass("searchVisible"));

                                if (!IsVisible) {
                                    $(this).addClass("searchVisible");
                                    $("#searchField").show("slow");
                                } else {
                                    $(this).removeClass("searchVisible");
                                    $("#searchField").hide("slow");
                                }
                            });

                        </script>

                        }
