@using ODMSCommon.Resources
@using ODMSCommon.Security
@model ODMSModel.MaintenanceAppointment.MaintenanceAppointmentViewModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("MaintenanceAppointment_PageTitle_Create");
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
}
<style>
#popupContent {
width: 1400px;
padding-top: 10px;
padding-left: 10px;
margin: 0;
background-color: #EDF1F4 !important;
}
 </style>

    @using (Html.BeginForm("MaintenanceAppointmentCreate", "MaintenanceAppointment", FormMethod.Post))
    {
        @ODMSHelpers.Button("ScheduleRedirect", CommonUtility.GetResourceValue("Appointment_Display_Browse_Schedule"), CommonValues.PermissionCodes.Appointment.AppointmentIndex, "ScheduleIndex", "", false)
        <div class="clearDiv">&nbsp;</div>
        <div class="clearDiv">&nbsp;</div>
        @Html.HiddenFor(v => v.MaintenanceId);
        @Html.HiddenFor(v => v.AppointmentTypeId);
        @Html.HiddenFor(v => v.VehicleId);
        @Html.HiddenFor(v => v.VehicleTypeId);
        @Html.HiddenFor(v => v.CustomerId);
        
<div class="labelDiv">@Html.LabelFor(v => v.DealerId)</div>
    <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.DealerId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.DealerList as List<SelectListItem>).Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose).Enable(UserManager.UserInfo.GetUserDealerId() == 0)</div>

<div class="labelDiv">@Html.LabelFor(v => v.ComplaintDescription)</div>
<div class="shortTxtDiv">@Html.TextAreaFor(v => v.ComplaintDescription, new { @style = "resize:none; height:50px" })@Html.ValidationMessageFor(v => v.ComplaintDescription)</div>

        <div class="clearDiv">&nbsp;</div>
        
<div class="labelDiv">@Html.LabelFor(v => v.AppointmentDate)</div>
<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.AppointmentDate).Events(e => e.Open("OpenAppDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text" })@Html.ValidationMessageFor(v => v.AppointmentDate)</div>

<div class="labelDiv">@Html.LabelFor(v => v.AppointmentTime)</div>
<div class="shortTxtDiv">@Html.Kendo().TimePickerFor(v => v.AppointmentTime).Events(e => e.Open("OpanAppTime")).Format("H:mm").Interval(15).Min(new TimeSpan(8, 0, 0)).Max(new TimeSpan(18, 0, 0))</div>

<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.DeliveryEstimateDate)</div>
<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.DeliveryEstimateDate).Events(e => e.Open("OpenDeliveryDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text" })@Html.ValidationMessageFor(v => v.AppointmentDate)</div>

<div class="labelDiv">@Html.LabelFor(v => v.DeliveryEstimateTime)</div>
<div class="shortTxtDiv">@Html.Kendo().TimePickerFor(v => v.DeliveryEstimateTime).Events(e => e.Open("OpenDeliveryDate")).Interval(15).Min(new TimeSpan(8, 0, 0)).Max(new TimeSpan(18, 0, 0))</div>

<div class="clearDiv">&nbsp;</div>

<div class="clearDiv">&nbsp;</div> 

<div class="labelDiv">@Html.LabelFor(v => v.VehicleVin)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehicleVin, new { @readonly = "readonly" })</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehiclePlate)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehiclePlate, new { @readonly = "readonly" })</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehicleColor)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehicleColor)@Html.ValidationMessageFor(v => v.VehicleColor)</div>

<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehicleModelCode)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehicleModelCode, new { @readonly = "readonly" })</div>
        
<div class="labelDiv">@Html.LabelFor(v => v.VehicleType)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehicleType, new { @readonly = "readonly" })</div>



<div class="clearDiv">&nbsp;</div>

<div class="clearDiv">&nbsp;</div>
<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.CustomerId)</div>
<div class="shortTxtDivObjectSearch">@Html.Partial("~/Views/ObjectSearch/ObjectSearch.cshtml", new ODMSModel.ObjectSearch.ObjectSearchModel { ObjectSearchType = CommonValues.ObjectSearchType.Customer, WindowTitle = ODMSCommon.Resources.MessageResource.ObjectSearch_WindowTitle_Customer, ReferenceObjectId = "CustomerId", SelectCallBackFunction = "SetCustomerChange", Required = false, ReferenceObjectValue = Model == null ? null : Model.CustomerId, ParentWindowId = "modelWindow" })</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactName)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactName, new { @class = "clssCustomer", @onkeyup = "InputToUpper(this);" })@Html.ValidationMessageFor(v => v.ContactName)</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactLastName)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactLastName, new { @class = "clssCustomer", @onkeyup = "InputToUpper(this);" })@Html.ValidationMessageFor(v => v.ContactLastName)</div>

<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactPhone)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactPhone, new { @class = "clssCustomer" })@Html.ValidationMessageFor(v => v.ContactPhone)</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactAddress)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactAddress, new { @class = "clssCustomer" })@Html.ValidationMessageFor(v => v.ContactAddress)</div>

<div class="clearDiv">&nbsp;</div>
@Html.HiddenFor(c => c.DealerId)
<script src="~/Scripts/jquery.maskedinput.js"></script>
<script src="~/Scripts/odms.objectsearch.js"></script>


        @ODMSHelpers.Button("Create", CommonUtility.GetResourceValue("Global_Display_Save"), CommonValues.PermissionCodes.Appointment.AppointmentCreate, "AppointmentCreate")        

    } 
<script type="text/javascript">

    function OpenAppDate() {
        var date = $("#AppointmentDate").data("kendoDatePicker");
        date.min(new Date($.now()));
    }
    function OpanAppTime() {
        var date = $("#AppointmentDate").data("kendoDatePicker");
        var time = $("#AppointmentTime").data("kendoTimePicker");
        if (date.value() < new Date($.now()).setHours(new Date($.now()).getHours() + 20)) {
            time.min(new Date(2000, 0, 1, 0, 0, 0));
        } else {
            time.min(new Date(2000, 0, 1, 0, 0, 0));
        }
    }
    function OpenDeliveryDate() {
        var deliveryDate = $("#DeliveryEstimateDate").data("kendoDatePicker");
        var deliveryTime = $("#DeliveryEstimateTime").data("kendoTimePicker");

        var appTime = $("#AppointmentTime").data("kendoTimePicker");
        var appDate = $("#AppointmentDate").data("kendoDatePicker");

        if (appDate.value()) {
            deliveryDate.min(appDate.value());
        } else {
            deliveryDate.min(new Date($.now()));
        }

        if (appDate.value() != null && deliveryDate.value() != null) {
            if (appDate.value().toString() == deliveryDate.value().toString()) {

                deliveryTime.min(appTime.value());
            }
            else {
                deliveryTime.min(new Date(2000, 0, 1, 0, 0, 0));
            }
        } else {
            deliveryTime.min(new Date(2000, 0, 1, 0, 0, 0));
        }

    }
    function GetVehicleModelCode() {
        return {
            vehicleModelCode: $('#VehicleModelCode').val()
        };
    }

    $(document).ready(function () {
        $("#VehicleIdClear").attr("title", '@Html.Raw(MessageResource.ObjectSearch_Title_VehicleClear)');
        $("#CustomerIdClear").attr("title", '@Html.Raw(MessageResource.ObjectSearch_Title_CustomerClear)');

        $('#AppointmentDate').prop("readonly", true);
        $('#AppointmentTime').prop("readonly", true);
        $('form').each(function () {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                validator.settings.ignore = "";
            }
        });
    });

    $(document).ready(function () {
        GetWorkOrderCustomerData();
        $("#ContactPhone").mask("(999) 999 99 99", { placeholder: " " });
    });

    function SetCustomerChange() {
        var token = $('input[name="__RequestVerificationToken"]').val();
        var customerId = $("#CustomerId").val();
        var appointmentId = @(Model!=null?Model.AppointmentId:0);
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetAppointmentCustomer", "Appointment")",
            data: { customerId: customerId,appointmentId: appointmentId, "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                $("#CustomerIdTextContainer").val(result.Name);
                $("#ContactName").val(result.Name);
                $("#ContactFirstName").val(result.FName);
                $("#ContactLastName").val(result.LName);
                $("#ContactPhone").val(result.Phone);
                $("#ContactAddress").val(result.Address);
            },
            dataType: "json"
        });
    }
    function GetWorkOrderCustomerData() {
        ClearCustomerData();
        mvc.build('@Url.Action("GetWorkOrderData","WorkOrder")', null, null, { id: $('#CustomerId').val(), type: 'Customer' }, false, "json");
        mvc.post(null, function (json) {
            SetCustomerValues(json);
        }, null);
    }


    function GetWorkOrderVehicleData() {
        if ($('#VehicleId').val()) {
            ClearVehicleData();
            mvc.build('@Url.Action("GetWorkOrderData","WorkOrder")', null, null, { id: $('#VehicleId').val(), type: 'Vehicle' }, false, "json");
            mvc.post(null, function (json) {
                SetVehicleValues(json);
            }, null);
        }

    }


    function SetCustomerValues(json) {
        ClearCustomerData();
        if(json.CustomerId != undefined)
        {
            $("#ContactName").val(json.CustomerName);
            $("#ContactFirstName").val(json.CustomerFirstName);
            $("#ContactLastName").val(json.CustomerSurName);
            $("#CustomerIdTextContainer").val(json.CustomerName);
            $("#ContactAddress").val(json.CustomerAddress);
            $("#ContactPhone").val(json.CustomerPhone);
        }
    }

    function ClearVehicleData() {
        $("#VehicleModelCode").val('');
        $("#VehiclePlate").val('');
        $("#VehicleType").val('');
    }
    function ClearCustomerData() {
        //$("#CustomerId").val('0');
        $("#CustomerIdTextContainer").val('');
        $("#ContactName").val('');
        $("#ContactFirstName").val('');
        $("#ContactLastName").val('');
        $("#ContactPhone").val('');
        $("#ContactAddress").val('');
    }

    $("#ScheduleRedirect").click(function () {
        window.open(
          '@Url.Action("ScheduleIndex", "Scheduler")',
          '_blank' // <- This is what makes it open in a new window.
        );
    });
</script>

@*<script id="warning-modal" type="text/x-kendo-template">
    <div class="alert alert-warning">
    <div style="width:500px">
        <span class="glyphicon glyphicon-warning-sign"></span><p class="warning-message" style="font-weight:bold"></p>
        <p style="text-align:right">
        <button class="warning-ok btn btn-warning">@ODMSCommon.Resources.MessageResource.Global_Display_Ok</button></p>
    </div>
    </div>
</script>
<style>
    body
    {
        background-color:#EDF1F4 !important;
        height:2000px;
        overflow:hidden;
    }

</style>*@