@using ODMSCommon.Resources
@using ODMSModel.Rack

@model ODMSModel.Rack.RackIndexModel
@{
    ViewBag.Title = @MessageResource.Rack_PageTitle_Index;
}
@Html.AntiForgeryToken()
<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">
        <div id="tagSelectDealerDiv" class="labelDiv" style="width: 120px">@Html.LabelFor(d => d.DealerList)</div>
        <div id="cmbSelectDealerDiv" class="shortTxtDiv">
            @(Html.Kendo().ComboBox()
                  .Name("cmbDealers")
                  .Placeholder(@MessageResource.Rack_Display_SelectDealer)
                  .BindTo(Model.DealerList)
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .HtmlAttributes(new {@class = "ComboBox", @style = "width: 205px;"})
                  .Events(e => e.DataBound("DealersDataBound"))
                  )
        </div>
        <div id="tagSelectRackDiv" class="labelDiv" style="width: 120px">@Html.LabelFor(d => d.WarehouseList)</div>
        <div id="cmbSelectRackDiv" class="shortTxtDiv">
            @(Html.Kendo().ComboBox()
                  .Name("cmbWarehouses")
                  .Placeholder(@MessageResource.Rack_Display_SelectWarehouse)
                  .DataSource(dataSource => dataSource.Read(read => read.Action("ListWarehouses", "Rack").Data("GetDealerId").Type(HttpVerbs.Get))
                                                      .ServerFiltering(true))
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .Enable(true)
                  .AutoBind(false)
                  .CascadeFrom("cmbDealers")
                  .HtmlAttributes(new { @class = "ComboBox", @style = "width: 205px;" })
                  )
        </div>
        <div id="tagRackCodeDiv" class="labelDiv" style="width: 80px">@Html.LabelFor(d => d.Code)</div>
        <div id="txtRackCodeDiv" class="shortTxtDiv">@Html.TextBoxFor(d => d.Code) </div>
        <div id="tagRackIsActiveDiv" class="labelDiv" style="width: 80px">@Html.LabelFor(d => d.IsActive)</div>
        <div id="cmbRackIsActiveDiv" class="shortTxtDiv" style="width: 20px">
            @(Html.Kendo().ComboBoxFor(v => v.IsActive)
                .Name("cmbIsActive")
                .DataTextField("Text")
                .DataValueField("Value")
                .BindTo(Model.IsActiveOptions)
                .Placeholder(MessageResource.Global_Display_Choose))
        </div>
    </div>
</div>

@ODMSHelpers.LinkButton("btnSearch", MessageResource.Global_Display_Search, "", "", "", CommonValues.PermissionCodes.Rack.RackIndex)
@ODMSHelpers.LinkButton("btnCreate", MessageResource.Global_Display_New, "Create", "modalClick createNew", MessageResource.Rack_PageTitle_Create, CommonValues.PermissionCodes.Rack.RackCreate)
@Html.Partial("_ExcelExport",new ODMS.Model.ExportModel())

@Html.HiddenFor(c=>c.DealerId)
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.Rack.RackListModel>()
          .Name("grid")
          .Columns(columns =>
          {
              columns.Bound(d => d.Id).ClientTemplate("<center><a class='details modalClick' id='#=Id#' frameTitle='" + MessageResource.Rack_PageTitle_Details + "' href='/Rack/RackDetails/#=Id#'><img class='iconLink' src='" + Url.Content("~/Images/view.png") + "'/></a></center>").Title(MessageResource.Global_Display_View).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Rack.RackDetails));
              columns.Bound(d => d.Id).ClientTemplate("<center><a class='edit modalClick' id='#=Id#' frameTitle='" + MessageResource.Rack_PageTitle_Update + "' href='/Rack/RackUpdate/#=Id#'><img class='iconLink' src='" + Url.Content("~/Images/edit.png") + "'/></a></center>").Title(MessageResource.Global_Display_Update).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Rack.RackUpdate));
              columns.Bound(b => b.Id).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + MessageResource.Rack_PageTitle_Delete + "' onclick='DeleteRack(#=Id#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(MessageResource.Global_Display_Delete).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Rack.RackDelete));
              columns.Bound(d => d.WarehouseCode).Width(200).Sortable(true);
              columns.Bound(d => d.Code).Width(200).Sortable(true);
              columns.Bound(d => d.IsActiveString).Width(200).Sortable(true);
          })
          .Pageable()
          .Sortable()
          .Scrollable()
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListRacks", "Rack").Data("GetParameters"))
                                        .Model(model => model.Field(b => b.Id).DefaultValue(-1)))
          )

</div>


<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
          .Name("modelWindow")
          .Title("Rack")
          .Draggable()
          .Resizable()
          .Width(350)
          .Height(300)
          .Scrollable(false)
          .Visible(false)
          .Modal(true)
          .Iframe(true)
          .Events(ev => ev.Close(@"function(e){
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.page(1);
            }"))
          )
</div>


@section Scripts
{
    <script>
        $(function() {
            RegisterEventHandlers();
            AdjustControlPositions();
        });

        function RegisterEventHandlers() {
            $("body").delegate("#showSearch", "click", function(e) {
                var IsVisible = Boolean($(this).hasClass("searchVisible"));

                if (!IsVisible) {
                    $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                    $(this).addClass("searchVisible");
                    $("#searchDiv").show("slow");
                } else {
                    $(this).html('@MessageResource.Global_Display_Search_Criteria');
                    $(this).removeClass("searchVisible");
                    $("#searchDiv").hide("slow");
                }
            });
            
            $("body").delegate("#btnSearch", "click", function (e) {
                var grid = $('#grid').data('kendoGrid');
                grid.dataSource.page(1);

            });
            
            $("body").delegate(".modalClick", "click", function (e) {
                $('#modelWindow').html('');
                e.preventDefault();

                var link;
                var clickedId = $(this).attr("id");
                var frameTitle = $(this).attr("frameTitle");

                if ($(this).hasClass("details") == true) {
                    link = "@Url.Action("RackDetails", "Rack", new {id = -1})";
                    link = link.replace("-1", clickedId);
                } else if ($(this).hasClass("edit")) {
                    link = "@Url.Action("RackUpdate", "Rack", new {id = -1})";
                    link = link.replace("-1", clickedId);
                }  else if ($(this).hasClass("createNew")) {
                    link = "@Url.Action("RackCreate", "Rack")";
                }

                $("#modelWindow_wnd_title").html(frameTitle);

                var windowWidget = $("#modelWindow").data("kendoWindow");
                var closeOrigin = windowWidget.close;

                windowWidget.refresh({
                    url: link
                }).center();
                windowWidget.center();
                windowWidget.open();
                
            });
        }
        
        function AdjustControlPositions() {
            $("#tagSelectRackDiv").css("margin-top", 25);
            $("#tagSelectRackDiv").css("margin-left", -420);
            
            $("#cmbSelectRackDiv").css("margin-top", 25);
            $("#cmbSelectRackDiv").css("margin-left", -300);
            
            $("#tagRackCodeDiv").css("margin-top", 25);
            $("#tagRackCodeDiv").css("margin-left", -20);
            
            $("#txtRackCodeDiv").css("margin-top", 25);
            
            $("#tagRackNameDiv").css("margin-top", 25);

            $("#txtRackNameDiv").css("margin-top", 25);
            
            $("#tagRackIsActiveDiv").css("margin-top", 25);

            $("#cmbRackIsActiveDiv").css("margin-top", 25);
        }

        function DealersDataBound() {
            var length = $("#cmbDealers").data("kendoComboBox").dataSource.data().length;
            if (length <= 1) {
                // eğer bir bayi varsa seç ve combobox'ı disable et. Bayi kullanıcı ise modelde sadece ilgili bayinin bilgisi gelir. Bu durumda combobox'ta sadece o bayinin bilgisi olur
                $("#cmbDealers").data("kendoComboBox").select(0);
                $("#cmbDealers").data("kendoComboBox").enable(false);
            }
        }
        
        function GetDealerId() {
            return {
                DealerId: $("#cmbDealers").val()
            };
        }
        
        function GetParameters() {
            return {
                ReportType: 19,
                Columns: "WarehouseCode,Code,Name,IsActiveString",
                WarehouseId: $("#cmbWarehouses").val(),
                Code: $("#Code").val(),
                Name: $("#Name").val(),
                SearchIsActive: $("#cmbIsActive").val(),
                DealerId: $("#DealerId").val()
            };
        }
        
        function DeleteRack(Id) {
            DeleteConfirm(function () {
                var token = $('input[name="__RequestVerificationToken"]').val();
                
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("RackDelete")",
                    data: { Id: Id, "__RequestVerificationToken": token },
                    traditional: true,
                    success: function (result) {
                        if (result.Status == 0)
                            SetErrorMessage(result.Message);
                        else {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.read();
                            SetSuccessMessage(result.Message);
                        }
                    },
                    dataType: "json"
                });
            });
        }
    </script>
}