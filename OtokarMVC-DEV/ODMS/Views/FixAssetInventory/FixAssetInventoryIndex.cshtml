@using ODMSCommon.Resources
@model ODMSModel.FixAssetInventory.FixAssetInventoryListModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("FixAssetInventory_PageTitle_Index");
}
 

<div id="showSearch">@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.PartCode)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.PartCode)</div>
        <div class="labelDiv">@Html.LabelFor(v => v.PartName)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.PartName)</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.EquipmentTypeName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.EquipmentTypeId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.EquipmentTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>

        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.VehicleGroupName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.VehicleGroupId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.VehicleGroupList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="labelDiv">@Html.LabelFor(v => v.StatusName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.StatusId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StatusList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.Name)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.Name) </div>
        <div class="labelDiv">@Html.LabelFor(v => v.SerialNo)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.SerialNo) </div>
    </div>

</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.FixAssetInventory.FixAssetInventoryDetails)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClickFixAssetInventory createNewFixAssetInventory", CommonUtility.GetResourceValue("FixAssetInventory_PageTitle_Create"), CommonValues.PermissionCodes.FixAssetInventory.FixAssetInventoryCreate)

<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
        .Name("modelWindow")
     .Draggable()
    .Resizable()
    .Width(950)
    .Height(440)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#FixAssetInventoryGrid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
          )

</div>
<script>
    function Search() {
        return {
            EquipmentTypeId: $('#EquipmentTypeId').val(),
            VehicleGroupId: $('#VehicleGroupId').val(),
            StatusId: $('#StatusId').val(),
            Name: $('#Name').val(),
            SerialNo: $('#SerialNo').val(),
            PartCode: $("#PartCode").val(),
            PartName: $("#PartName").val()
        };
    }
    $(document).ready(function () {

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#FixAssetInventoryGrid').data('kendoGrid');
            grid.dataSource.page(1);

        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Hide_Search_Criteria")');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });
        $("body").delegate(".modalClickFixAssetInventory", "click", function (e) {
            $('#modelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var idList = clickedId.split("$");
            var id = idList[0];
            var statusId = idList[1];
            
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("details") == true) {
                link = "@Url.Action("FixAssetInventoryDetails", "FixAssetInventory", new { fixAssetInventoryId = -1 })";
                link = link.replace("-1", id);
            }
            else if ($(this).hasClass("edit")) {
                if (statusId != @Convert.ToInt32(CommonValues.FixAssetStatus.FixInventory)) {
                    SetErrorMessage('@MessageResource.FixAssetInventory_Warrning_StatusNotValid');
                    return;
                }
                link = "@Url.Action("FixAssetInventoryUpdate", "FixAssetInventory", new { fixAssetInventoryId = -1 })";
                link = link.replace("-1", id);
            }
            else if ($(this).hasClass("createNewFixAssetInventory")) {
                link = "@Url.Action("FixAssetInventoryCreate", "FixAssetInventory")";
            }
            $("#modelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
           
        });

    });
</script>
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.FixAssetInventory.FixAssetInventoryListModel>()
          .Name("FixAssetInventoryGrid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.FixAssetInventoryId).ClientTemplate("<center><a class='details modalClickFixAssetInventory' id='#=FixAssetInventoryId#" + "$" + "#=StatusId#'" + " frameTitle='" + @CommonUtility.GetResourceValue("FixAssetInventory_PageTitle_Details") + "' href='/FixAssetInventory/FixAssetInventoryDetails/#=FixAssetInventoryId#'><img class=iconLink src='" + Url.Content("~/Images/view.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.FixAssetInventory.FixAssetInventoryDetails));
                  columns.Bound(p => p.FixAssetInventoryId).ClientTemplate("<center><a class='edit modalClickFixAssetInventory' id='#=FixAssetInventoryId#" + "$" + "#=StatusId#'" + " frameTitle='" + @CommonUtility.GetResourceValue("FixAssetInventory_PageTitle_Update") + "' href='/FixAssetInventory/FixAssetInventoryUpdate/#=FixAssetInventoryId#'><img class=iconLink src='" + Url.Content("~/Images/edit.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.FixAssetInventory.FixAssetInventoryUpdate));
                  columns.Bound(p => p.Code).Width(80).Sortable(true);
                  columns.Bound(p => p.Name).Width(80).Sortable(true);
                  columns.Bound(p => p.EquipmentTypeName).Width(80).Sortable(true);
                  columns.Bound(p => p.PartName).Width(80).Sortable(true);
                  columns.Bound(p => p.SerialNo).Width(80).Sortable(true);
                  columns.Bound(p => p.VehicleGroupName).Width(120).Sortable(true);
                  columns.Bound(p => p.StatusName).Width(80).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListFixAssetInventory", "FixAssetInventory", Model).Data("Search"))
                                        .Model(model => model.Field(o => o.FixAssetInventoryId).DefaultValue(-1)))

          )
</div>
