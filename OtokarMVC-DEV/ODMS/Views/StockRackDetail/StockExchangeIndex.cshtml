@using ODMSCommon.Security
@model ODMSModel.StockRackDetail.StockExchangeViewModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("StockExchange_PageTitle_Index");
}
@using (Html.BeginForm("StockExchangeIndex", "StockRackDetail", FormMethod.Post, new { id = "frmStockExchange" }))
{
    if (UserManager.UserInfo.GetUserDealerId() != 0)
    {
        <div class="labelDiv">@Html.LabelFor(v => v.FromRackId)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(v => v.FromRackId).DataTextField("Text").DataValueField("Value").Events(e => e.Change("GetPartList")).BindTo(ViewBag.FromWarehouseRackList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))
            @Html.ValidationMessageFor(v => v.FromRackId)
            @Html.HiddenFor(e => e.FromWarehouseId)
        </div>

        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.PartId)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(v => v.PartId).DataTextField("Text").DataValueField("Value").Events(e => e.Change("GetStockTypeList")).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))
            @Html.ValidationMessageFor(v => v.PartId)
        </div>

        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.StockTypeId)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(v => v.StockTypeId).DataTextField("Text").DataValueField("Value").Events(e => e.Change("GetMaximumQuantity")).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))
            @Html.ValidationMessageFor(v => v.StockTypeId)
        </div>
        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.Quantity)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().NumericTextBoxFor(v => v.Quantity).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "6", data_val_min = "0", data_val_max = "1000", style = "width:200px" })
            <span>Max:<label id="maxStockQuant">0</label></span>
            @Html.ValidationMessageFor(v => v.Quantity)
        </div>
        @Html.HiddenFor(e => e.MaxQuantity)
        <div class="clearDiv">&nbsp;</div>


        <div class="labelDiv">@Html.LabelFor(v => v.ToRackId)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(v => v.ToRackId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.ToWarehouseRackList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))
            @Html.ValidationMessageFor(v => v.ToRackId)
            @Html.HiddenFor(e => e.ToWarehouseId)
        </div>
        <div class="clearDiv">&nbsp;</div>





        <div class="labelDiv">@Html.LabelFor(v => v.Description)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.Description) @Html.ValidationMessageFor(v => v.Description) </div>

        <div class="clearDiv">&nbsp;</div>
        @ODMSHelpers.Button("btnCreate", CommonUtility.GetResourceValue("Global_Display_Save"), CommonValues.PermissionCodes.StockCard.StockCardUpdate, "StockCardCreate")
    }
}
<div class="clearDiv">&nbsp;</div>
<script>

    function CalcQty() {

        alert(1);
    }
    function GetMaximumQuantity() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetMaxQuantity", "StockRackDetail")",
            data: { partId: $('#PartId').val(), stockTypeId: $('#StockTypeId').val(), fromRackId: $('#FromRackId').val() },
            traditional: true,
            success: function (result) {
                $('#MaxQuantity').val(result);
                $('#maxStockQuant').html(result);
            },
            dataType: "json"
        });
    }
    function GetStockTypeList() {
        var stockTypeId = $('#StockTypeId').data("kendoComboBox").value();
        $.ajax({
            type: "GET",
            url: "@Url.Action("ListStockTypes", "StockRackDetail")",
            data: { partId: $('#PartId').val(), fromRackId: $('#FromRackId').val(), toRackId: $('#ToRackId').val() },
            traditional: true,
            success: function (json) {

                
                var combobox = $("#StockTypeId").data("kendoComboBox");
                combobox.dataSource.data(json.result);
                combobox.dataSource.query();
                combobox.value(stockTypeId);
                if (stockTypeId == "") {
                    if ($("#StockTypeId").data("kendoComboBox").dataSource.data().length == 1)
                        $("#StockTypeId").data("kendoComboBox").select(0);
                }

                //if (json.fromWarehouseId != json.toWarehouseId) {
                //    // $("#StockTypeId").data("kendoComboBox").enable(true);
                //    var combobox = $("#StockTypeId").data("kendoComboBox");
                //    combobox.dataSource.data(json.result);
                //    combobox.dataSource.query();
                //    combobox.value(stockTypeId);
                //    if (stockTypeId == "") {
                //        if ($("#StockTypeId").data("kendoComboBox").dataSource.data().length == 1)
                //            $("#StockTypeId").data("kendoComboBox").select(0);
                //    }
                //}
                //else{
                //    $("#StockTypeId").data("kendoComboBox").value('');
                //    // $("#StockTypeId").data("kendoComboBox").enable(false);
                //}
                $("#FromWarehouseId").val(json.fromWarehouseId);
                $("#ToWarehouseId").val(json.toWarehouseId);

                //var combobox3 = $("#StockTypeId").data("kendoComboBox");
                //combobox3.value("");

                GetMaximumQuantity();
            },
            dataType: "json"
        });
    }
    function GetPartList() {
        $.ajax({
            type: "GET",
            url: "@Url.Action("ListParts", "StockRackDetail")",
            data: { rackId: $('#FromRackId').val() },
            traditional: true,
            success: function (json) {
                var combobox = $("#PartId").data("kendoComboBox");
                combobox.dataSource.data(json.result);
                combobox.dataSource.query();
                combobox.value("");


                var combobox3 = $("#StockTypeId").data("kendoComboBox");
                combobox3.value("");

                GetMaximumQuantity();

            },
            dataType: "json"
        });
    }

    $(document).ready(function () {
        GetStockTypeList();
        // GetMaximumQuantity();

        if ($("#ToRackId").data("kendoComboBox").value() == 0) {
            $("#ToRackId").data("kendoComboBox").text('');
        }
        if ($("#FromRackId").data("kendoComboBox").value() == 0) {
            $("#FromRackId").data("kendoComboBox").text('');
        }
        if ($("#PartId").data("kendoComboBox").value() == 0) {
            $("#PartId").data("kendoComboBox").text('');
        }
        if ($("#StockTypeId").data("kendoComboBox").value() == 0) {
            $("#StockTypeId").data("kendoComboBox").text('');
        }

        $(function() {
            $('.k-widget').addClass('input-validation-valid');
            $(".k-widget").removeClass("input-validation-error");
            $('.k-widget').addClass('field-validation-valid');
            $(".k-widget").removeClass("field-validation-error");
        });
        $('form').each(function () {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                validator.settings.ignore = "";
            }
        });
    });

</script>
