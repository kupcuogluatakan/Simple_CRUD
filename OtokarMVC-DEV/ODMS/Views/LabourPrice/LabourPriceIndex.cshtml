@model ODMSModel.LabourPrice.LabourPriceViewModel
@using ODMSBusiness
@using ODMSCommon.Resources
@using ODMSModel.LabourPrice


@{
    ViewBag.Title = MessageResource.LabourPrice_PageTitle_Index;
}
@Html.AntiForgeryToken()
@*search start*@
<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">

        <div class="labelDiv">@Html.LabelFor(v => v.ModelCode)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c => c.ModelCode).BindTo(ViewBag.VehicleModelList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) @Html.ValidationMessageFor(v => v.ModelCode) </div>
        <div class="labelDiv">@Html.LabelFor(v => v.DealerClassName)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(c => c.DealerClass).BindTo(ViewBag.DealerClassList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) @Html.ValidationMessageFor(v => v.DealerClass)
        </div>


        <div class="labelDiv">@Html.LabelFor(v => v.DealerRegionId)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c => c.DealerRegionId).BindTo(ViewBag.DealerRegionList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) @Html.ValidationMessageFor(v => v.DealerRegionId) </div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.LabourPriceTypeId)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(c => c.LabourPriceTypeId).BindTo(ViewBag.LabourTypeList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) @Html.ValidationMessageFor(v => v.LabourPriceTypeId)
        </div>

        <div class="labelDiv">@Html.LabelFor(v => v.CurrencyCode)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c => c.CurrencyCode).BindTo(ViewBag.CurrencyCodeList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) @Html.ValidationMessageFor(v => v.CurrencyCode) </div>


        <div class="labelDiv">@Html.LabelFor(v => v.IsActive)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(c => c.SearchIsActive).BindTo(CommonBL.ListStatus().Data).DataTextField("Text").DataValueField("Value").Placeholder(MessageResource.Global_Display_All)
        </div>

        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.ValidFromDate)</div>
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.ValidFromDate).Events(e => e.Open("OpenStartDate").Change("OpenEndDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>

        <div class="labelDiv">@Html.LabelFor(v => v.ValidEndDate)</div>
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.ValidEndDate).Events(e => e.Open("OpenEndDate").Change("OpenStartDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>
        
        <div class="labelDiv">@Html.LabelFor(v => v.ValidDate)</div>
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.ValidDate).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>

        <div class="clearDiv">&nbsp;</div>

    </div>
</div>
@*serach end*@
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.LabourPrice.LabourPriceIndex)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClick createNew", CommonUtility.GetResourceValue("LabourPrice_PageTitle_Create"), CommonValues.PermissionCodes.LabourPrice.LabourPriceCreate)

@Html.Partial("_ExcelExport",new ODMS.Model.ExportModel())
<hr />
<div id="excelVisibility">
    <h4>@Html.Raw(MessageResource.LabourPrice_Display_UploadFromExcel) </h4>
    <div class="labelDiv" style="width: 80px">@MessageResource.Global_Display_SampleFile </div>
    <div>
        <a class="k-link2" href="@Url.Action("ExcelSample")">
            <img class=iconLink src='@Url.Content("~/Images/excelSample.png")' title='@MessageResource.Global_Display_SampleFile'>
        </a>
        <br />
        @using (Html.BeginForm("LabourPriceIndex", "LabourPrice", FormMethod.Post))
        {
            @Html.Kendo().Upload().Name("excelFile").TemplateId("fileTemplate").Events(e => e.Select("onSelect")).Multiple(false).Messages(m => m.Select(MessageResource.Global_Display_SelectFile))
            <div id="divExcelUpload">
                @ODMSHelpers.Button("Upload", CommonUtility.GetResourceValue("Labour_Display_UploadFromExcel"), "", "UploadExcel")
            </div>
        }
    </div>
</div>

@*grid start*@
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<LabourPriceListModel>()
          .Name("grid")

          .Columns(columns =>
          {
              columns.Bound(p => p.LabourPriceId).ClientTemplate("<center><a class='details modalClick' id='#=LabourPriceId#' frameTitle='" + CommonUtility.GetResourceValue("LabourPrice_PageTitle_Details") + "' href='" + Url.Action("LabourPriceDetails", "LabourPrice") + "/#=LabourPriceId#'><img class='iconLink' src='" + Url.Content("~/Images/view.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.LabourPrice.LabourPriceDetails));
              columns.Bound(p => p.LabourPriceId).ClientTemplate("<center><a class='edit modalClick'  id='#=LabourPriceId#' frameTitle='" + CommonUtility.GetResourceValue("LabourPrice_PageTitle_Update") + "' href='" + Url.Action("LabourPriceUpdate", "LabourPrice") + "/#=LabourPriceId#'><img class='iconLink' src='" + Url.Content("~/Images/edit.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.LabourPrice.LabourPriceUpdate));
              columns.Bound(o => o.LabourPriceId).ClientTemplate("<center><a href='javascript:void(0);' id='#=LabourPriceId#' frameTitle='" + CommonUtility.GetResourceValue("LabourPrice_PageTitle_Delete") + "' onclick='DeleteLabourPrice(\"#=LabourPriceId#\")' ><img class=iconLink src='" + Url.Content("~/Images/delete.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.LabourPrice.LabourPriceDelete));
              columns.Bound(p => p.LabourPriceId).Width(100).Sortable(true);
              columns.Bound(p => p.LabourPriceTypeId).Width(100).Sortable(true);
              columns.Bound(p => p.VehicleGroupName).Width(120).Sortable(true);
              columns.Bound(p => p.ModelName).Width(100).Sortable(true);
              columns.Bound(p => p.DealerClass).Width(130).Sortable(true);
              columns.Bound(p => p.DealerRegionName).Width(120).Sortable(true);
              columns.Bound(p => p.LabourPriceType).Width(120).Sortable(true);
              columns.Bound(p => p.HasTSUnitPrice).Width(100).Format("{0:N}").Sortable(true);
              columns.Bound(p => p.HasNoTSUnitPrice).Width(100).Format("{0:N}").Sortable(true);
              columns.Bound(p => p.CurrencyCode).Width(80).Sortable(true);
              columns.Bound(p => p.ValidFromDate).Format("{0:dd/MM/yyyy HH:mm:ss}").Width(100).Sortable(true);
              columns.Bound(p => p.ValidEndDate).Format("{0:dd/MM/yyyy HH:mm:ss}").Width(100).Sortable(true);
              columns.Bound(p => p.IsActiveString).Width(60).Sortable(true);
          })
          .Pageable()
          .Sortable()
          .Scrollable()
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListLabourPrices", "LabourPrice", Model).Data("GetParameters"))
                                        .Model(model => model.Field(o => o.LabourPriceId).DefaultValue(-1)))

    )
</div>
@*grid end*@

@*modelWindow start*@
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
        .Name("modelWindow")
    .Title("Customer")
     .Draggable()
    .Resizable()
    .Width(950)
    .Height(380)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#grid').data('kendoGrid');
        grid.dataSource.read();
    }"))
    )
</div>
@*modelWindow end*@


@*scripts start*@
@section Scripts{
    <script type="text/javascript">


        function OpenStartDate() {
            var dateStart = $("#ValidFromDate").data("kendoDatePicker");
            var dateEnd = $("#ValidEndDate").data("kendoDatePicker");
            if ($("#ValidEndDate").val()) {
                dateStart.max(dateEnd.value());
            } else {
                dateStart.max(new Date(3000, 0, 1));
            }
        }

        function OpenEndDate() {
            var dateStart = $("#ValidFromDate").data("kendoDatePicker");
            var dateEnd = $("#ValidEndDate").data("kendoDatePicker");
            if ($("#ValidFromDate").val()) {
                dateEnd.min(dateStart.value());
            } else {
                dateEnd.min(new Date(1900, 0, 1));
            }
        }

        function GetParameters() {
            return {
                ReportType: 7,
                Columns: "LabourPriceId,VehicleGroupName,ModelName,ModelKod,DealerClass,DealerRegionName,LabourPriceType,LabourPriceTypeId,HasTSUnitPrice,HasNoTSUnitPrice,CurrencyCode,ValidFromDate,ValidEndDate,IsActiveString,_IsActive",
                ModelKod: $('#ModelCode').val(),
                DealerClass: $('#DealerClass').val(),
                LabourPriceTypeId: $('#LabourPriceTypeId').val(),
                ValidFromDate: $('#ValidFromDate').val(),
                ValidEndDate: $('#ValidEndDate').val(),
                ValidDate: $('#ValidDate').val(),
                CurrencyCode: $('#CurrencyCode').val(),
                IsActiveString: $('#SearchIsActive').val(),
                DealerRegionId: $('#DealerRegionId').val()
            };
        }

        $(document).ready(init);

        function init() {
            $("body").delegate("#btnSearch", "click", function (e) {
                var grid = $('#grid').data('kendoGrid');
                grid.dataSource.page(1);

            });
            $("body").delegate("#showSearch", "click", function (e) {
                var IsVisible = Boolean($(this).hasClass("searchVisible"));

                if (!IsVisible) {
                    $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                    $(this).addClass("searchVisible");
                    $("#searchDiv").show("slow");
                } else {
                    $(this).html("@MessageResource.Global_Display_Search_Criteria");
                    $(this).removeClass("searchVisible");
                    $("#searchDiv").hide("slow");
                }
            });
            $("body").delegate(".modalClick", "click", function (e) {
                $('#modelWindow').html('');
                e.preventDefault();

                var link;
                var clickedId = $(this).attr("id");
                var idList = clickedId.split("$");
                var hasTSLabourPriceId = idList[0];
                var hasNoTSLabourPriceId = idList[1];
                var frameTitle = $(this).attr("frameTitle");
                if ($(this).hasClass("details") == true) {
                    link = "@Url.Action("LabourPriceDetails", "LabourPrice", new { hasTSId = -1, hasNoTSId = -2 })";
                    link = link.replace("-1", hasTSLabourPriceId);
                    link = link.replace("-2", hasNoTSLabourPriceId);
                } else if ($(this).hasClass("edit")) {
                    link = "@Url.Action("LabourPriceUpdate", "LabourPrice", new { hasTSId = -1, hasNoTSId = -2 })";
                    link = link.replace("-1", hasTSLabourPriceId);
                    link = link.replace("-2", hasNoTSLabourPriceId);
                } else if ($(this).hasClass("createNew")) {
                    link = "@Url.Action("LabourPriceCreate", "LabourPrice")";
                }
                $("#modelWindow_wnd_title").html(frameTitle);

                var windowWidget = $("#modelWindow").data("kendoWindow");
                var closeOrigin = windowWidget.close;

                windowWidget.refresh({
                    url: link
                }).center();
                windowWidget.center();
                windowWidget.open();

            });
        }

        function DeleteLabourPrice(labourPriceId) {
            console.log(labourPriceId)
            var idList = labourPriceId.split("$");
            var hasTSLabourPriceId = idList[0];
            var hasNoTSLabourPriceId = idList[1];
            var token = $('input[name="__RequestVerificationToken"]').val();

            DeleteConfirm(function () {

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("LabourPriceDelete", "LabourPrice")",
                    data: { hasTSId: hasTSLabourPriceId, hasNoTSId: hasNoTSLabourPriceId, "__RequestVerificationToken": token },
                    traditional: true,
                    success: function (result) {
                        if (result.Status == 0)
                            SetErrorMessage(result.Message);
                        else {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.read();
                            SetSuccessMessage(result.Message);
                        }
                    },
                    dataType: "json"
                });
            });
        }
    </script>
}
@*scripts end*@
