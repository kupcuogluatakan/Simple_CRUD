@using ODMSCommon.Resources
@using ODMSModel.Reports
@using Kendo.Mvc.UI
@using System.Web.Mvc.Html
@model ChargeWorkOrderDetailFilterRequest

@{
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
}
<style>
    #popupContent {
        width: 100%;
        margin-right: 10px;
    }
</style>
<script type="text/javascript">

    function GetSearchParameters() {
        debugger;
        return {
            DealerId: @Model.DealerId,
            DealerRegionId: '@Model.DealerRegionId',
            CustomerId: '@Model.CustomerId',
            VehicleTypeId: '@Model.VehicleTypeId',
            ModelCode: '@Model.ModelCode',
            StartDate:'@Model.StartDate',
            EndDate:'@Model.EndDate',
            VinNo:'@Model.VinNo',
            Currency:'@Model.Currency',
            InGuarantee:'@Model.InGuarantee',
            ProcessTypeIdList:'@Model.ProcessTypeIdList',
            GuaranteeCategories:'@Model.GuaranteeCategories',
            GuaranteeConfirmDate:'@Model.GuaranteeConfirmDate'
        };
    }
</script>

<div id="searchFields1" class="disnone">
    <input type="hidden" name="DealerId" id="DealerId" value="Model.DealerId" />
    <input type="hidden" id="DealerRegionId" name="DealerRegionId" value="Model.DealerRegionId" />
    <input type="hidden" name="CustomerId" id="CustomerId" value="Model.CustomerId" />
    <input type="hidden" id="VehicleTypeId" name="VehicleTypeId" value="Model.VehicleTypeId" />
    <input type="hidden" id="ModelCode" name="ModelCode" value="Model.ModelCode" />
    @Html.HiddenFor(x=>x.StartDate)
    @Html.HiddenFor(x=>x.EndDate)
    @Html.HiddenFor(x=>x.VinNo)
    @Html.HiddenFor(x=>x.Currency)
    @Html.HiddenFor(x=>x.InGuarantee)
    @Html.HiddenFor(x=>x.ProcessTypeIdList)
    @Html.HiddenFor(x=>x.GuaranteeCategories)
    @Html.HiddenFor(x=>x.GuaranteeConfirmDate)

</div>

@Html.ExportExcelButton(new ExcelExportDto("Reports", "ListChargeWorkOrderDetail", "GetSearchParameters", "sdfsdf", filterId: "searchFields1", reportName: MessageResource.PartExchangeReport_Display_PartInfo).Build<WorkOrderDetailReport, object>(
    p => p.DealerRegionName,
    p => p.DealerName,
    p => p.WorkOrderId,
    p => p.WorkOrderDetailId,
    p => p.GIF,
    p => p.EngineNo,
    p => p.VehicleWarrantyStartDate,
    p => p.CreateDate,
    p => p.VehicleKm,
    p => p.PartPrice,
    p => p.LabourPrice,
    p => p.Price,
    p => p.CurrencyCode
))


<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<WorkOrderDetailReport>()
          .Name("WorkOrderDetailGrid")

          .Columns(columns =>
          {
              columns.Bound(p => p.DealerRegionName).Sortable(true).Width(70);
              columns.Bound(p => p.DealerName).Sortable(true).Width(70);
              columns.Bound(p => p.WorkOrderId).ClientTemplate(String.Format("<a class='k-link' target='_blank' href='{0}/#=WorkOrderId#'>#=WorkOrderId#</a>", Url.Action("WorkOrderCardIndex", "WorkOrderCard"))).Sortable(true).Width(70);
              columns.Bound(p => p.WorkOrderDetailId).Sortable(true).Width(100);
              columns.Bound(p => p.GIF).Sortable(true).Width(100);
              columns.Bound(p => p.VinNo).Sortable(true).Width(100);
              columns.Bound(p => p.EngineNo).Sortable(true).Width(100);
              columns.Bound(p => p.VehicleWarrantyStartDate).Format("{0:dd/MM/yyyy}").Sortable(true).Width(60);
              columns.Bound(p => p.CreateDate).Format("{0:dd/MM/yyyy}").Sortable(true).Width(100);
              columns.Bound(p => p.VehicleKm).Sortable(true).Width(100);
              columns.Bound(p => p.ApproveDate).Format("{0:dd/MM/yyyy HH:mm}").Sortable(true).Width(100);
              columns.Bound(p => p.Category).Sortable(true).Width(100);
              columns.Bound(p => p.TotalAmount).Sortable(true).Width(100).HtmlAttributes(new { style = "text-align:right" }).Sortable(true).Width(100);
              columns.Bound(p => p.PartPrice).Format("{0:n}").Sortable(true).Width(100);
              columns.Bound(p => p.LabourPrice).Format("{0:n}").Sortable(true).Width(100);
              columns.Bound(p => p.Price).Format("{0:n}").Sortable(true).Width(100);
              columns.Bound(p => p.CurrencyCode).Sortable(true).Width(100);
              //columns.Bound(p => p.PartCost).Sortable(true).Width(100);
          })
          .Pageable()
          .Sortable()
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                                .Read(read => read.Action("ListChargeWorkOrderDetail", "Reports").Data("GetSearchParameters"))
                                        )

    )
</div>


