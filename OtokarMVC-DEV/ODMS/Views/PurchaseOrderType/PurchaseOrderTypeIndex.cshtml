@using ODMSBusiness
@using ODMSCommon.Resources
@using ODMSModel.PurchaseOrderType
@model PurchaseOrderTypeListModel

@{
    ViewBag.Title = CommonUtility.GetResourceValue("PurchaseOrderType_PageTitle_Index");
}


<script>

    function Search() {
        return {
            IsActive: $("#IsActive").val(),
            StockTypeId: $("#StockTypeId").val()
        };
    }

    //SearchScript
    $(document).ready(function () {

        $("#IsActive").val(1);

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#PurchaseOrderTypeGrid').data('kendoGrid');
            grid.dataSource.page(1);

        });

        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@MessageResource.Global_Display_Search_Criteria');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });

        //Popup
        $("body").delegate(".modalClick", "click", function (e) {
            $('#modelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");

            if ($(this).hasClass("details") == true) {
                link = "@Url.Action("PurchaseOrderTypeDetail", "PurchaseOrderType", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("edit")) {
                link = "@Url.Action("PurchaseOrderTypeUpdate", "PurchaseOrderType", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("createNew")) {
                link = "@Url.Action("PurchaseOrderTypeCreate", "PurchaseOrderType")";
            }

            $("#modelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindow").data("kendoWindow");

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
            
        });

    });

function Delete(Id) {
    DeleteConfirm(function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("PurchaseOrderTypeDelete", "PurchaseOrderType")",
                data: { id: Id },
                traditional: true,
                success: function (result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#PurchaseOrderTypeGrid').data('kendoGrid');
                        grid.dataSource.read();
                        SetSuccessMessage(result.Message);
                    }
                },
                dataType: "json"
            });
        });
    }

</script>



<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(v => v.SearchIsActive)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(c => c.IsActive).BindTo(CommonBL.ListStatus().Data).DataTextField("Text").DataValueField("Value").Placeholder(MessageResource.Global_Display_All)
        </div>
        <div class="labelDiv">@Html.LabelFor(v => v.StockTypeName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.StockTypeId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StockTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
    </div>
</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", null)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClick createNew", CommonUtility.GetResourceValue("PurchaseOrderType_PageTitle_Create"), CommonValues.PermissionCodes.PurchaseOrderType.PurchaseOrderTypeCreate)


<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<PurchaseOrderTypeListModel>()
          .Name("PurchaseOrderTypeGrid")
          .Columns(columns =>
    {
        columns.Bound(p => p.PurchaseOrderTypeId).ClientTemplate("<center><a class='details modalClick' id='#=PurchaseOrderTypeId#' frameTitle='" + @CommonUtility.GetResourceValue("PurchaseOrderType_PageTitle_Detail") + "' href='./PurchaseOrderTypeDetail/#=PurchaseOrderTypeId#'><img class=iconLink src='" + @Url.Content("~/Images/view.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PurchaseOrderType.PurchaseOrderTypeDetail)).Width(10);
        columns.Bound(p => p.PurchaseOrderTypeId).ClientTemplate("<center><a class='edit modalClick' id='#=PurchaseOrderTypeId#' frameTitle='" + @CommonUtility.GetResourceValue("PurchaseOrderType_PageTitle_Update") + "' href='./PurchaseOrderUpdate/#=PurchaseOrderTypeId#'><img class=iconLink src='" + @Url.Content("~/Images/edit.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PurchaseOrderType.PurchaseOrderTypeUpdate)).Width(10);
        columns.Bound(o => o.PurchaseOrderTypeId).ClientTemplate("<center><a onclick='Delete(#=PurchaseOrderTypeId#)' href='javascript:void(0);' id='#=PurchaseOrderTypeId#' frameTitle='" + @CommonUtility.GetResourceValue("PurchaseOrderType_PageTitle_Delete") + "' ><img class=iconLink src='" + @Url.Content("~/Images/delete.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PurchaseOrderType.PurchaseOrderTypeDelete)).Width(10);
        columns.Bound(p => p.PurchaseOrderTypeName).Width(50).Sortable(true);
        columns.Bound(p => p.Description).Width(50).Sortable(true);
        columns.Bound(p => p.DeliveryPriority).Width(10).Sortable(true);
        columns.Bound(p => p.ProposalType).Width(10).Sortable(true);
        columns.Bound(p => p.StockTypeName).Width(15).Sortable(true);
        columns.Bound(p => p.StateName).Width(10).Sortable(true);
    })
          .Pageable()
          .Sortable()
          .DataSource(dataSource => dataSource
              .Ajax()
              .PageSize(10)
              .ServerOperation(true)
              .Read(read => read.Action("Read", "PurchaseOrderType", Model).Data("Search"))
              .Model(model => model.Field(o => o.PurchaseOrderTypeId).DefaultValue(-1)))

    )
</div>



<div id="modelWindowDiv">
    @(Html.Kendo().Window()
        .Name("modelWindow")
        .Title("PurchaseOrderType")
        .Draggable()
        .Resizable()
        .Width(950)
        .Height(500)
        .Scrollable(false)
        .Visible(false)
        .Modal(true)
        .Iframe(true)
        .Events(ev => ev.Close(@"function(e){var grid = $('#PurchaseOrderTypeGrid').data('kendoGrid');grid.dataSource.page(1);}"))
    )
</div>
