@using ODMSCommon.Resources
@using ODMSModel.SupplierDispatchPart
@model SupplierDispatchPartListModel

@{
    ViewBag.Title = MessageResource.SupplierDispatchPart_PageTitle_Index;
}
@Html.AntiForgeryToken()
<script id="complete-confirmation" type="text/x-kendo-template">
        <p class="complete-message">@Html.Raw(MessageResource.Global_Display_CompleteConfirmQuestion)</p>
        <p style="text-align:right">
        <button class="complete-confirm k-button">@MessageResource.Global_Display_Yes</button>
        <button class="complete-cancel k-button">@MessageResource.Global_Display_No</button></p>
</script>
<div id="supplierPart">


    <div id="modelWindowSupplierDiv">
        @(Html.Kendo().Window()
          .Name("modelWindowSupplier")
          .Draggable()
          .Resizable()
          .Width(650)
          .Height(300)
          .Visible(false)
          .Modal(true)
          .Iframe(true)
          .Events(ev => ev.Close(@"

                function(e)
                 {
                      var grid = $('#SupplierDispatchPartGrid').data('kendoGrid');
                      grid.dataSource.read();


                        var gridMaster = $('#grid').data('kendoGrid');
                      gridMaster.dataSource.read();


                      ResizeSupplierWindow(0);
                }
    ")))
    </div>

    @if (Model.StatusId == -1)
    {
        @ODMSHelpers.LinkButton("btnCreateSupplier", CommonUtility.GetResourceValue("SupplierDispatchPart_PageTitle_NewCreate"), "Create", "modalClick2 createNewSupplier", CommonUtility.GetResourceValue("SupplierDispatchPart_PageTitle_NewCreate"), CommonValues.PermissionCodes.SupplierDispatchPart.SupplierDispatchPartCreate)
        @ODMSHelpers.Button("Save", CommonUtility.GetResourceValue("Global_Display_Save"), CommonValues.PermissionCodes.SupplierDispatchPart.SupplierDispatchPartCreate, "SupplierDispatchPart", "SaveChanges();")
        @ODMSHelpers.Button("btnComp", CommonUtility.GetResourceValue("Global_Display_Complete"), CommonValues.PermissionCodes.SupplierDispatchPart.SupplierDispatchPartCreate, "CompleteSupplierDispatchPart", "CompleteDelivery();")
        @ODMSHelpers.LinkButton("btnCreateSupplierOrder", CommonUtility.GetResourceValue("SupplierDispatchPart_PageTitle_OrderCreate"), "Create", "modalClick2 createNewSupplierOrder", CommonUtility.GetResourceValue("SupplierDispatchPart_PageTitle_OrderCreate"), CommonValues.PermissionCodes.SupplierDispatchPart.SupplierDispatchPartCreate)
    }
    
    <div class="kendoGridDiv" id="grd2">
        @(Html.Kendo().Grid<SupplierDispatchPartListModel>()
          .Name("SupplierDispatchPartGrid")
          .Columns(columns =>
    {
        columns.Bound(o => o.DeliverySeqNo).Width("10%").ClientTemplate("<center><a href='javascript:void(0);' id='#=DeliverySeqNo#' frameTitle='" + CommonUtility.GetResourceValue("Supplier_PageTitle_Delete") + "' onclick='Delete(#=DeliverySeqNo#,#=StatusId#)' ><img class=iconLink src='" + @Url.Content("~/Images/delete.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Sortable(false);
        columns.Bound(p => p.PartCode).Width("30%").Sortable(true);
        columns.Bound(p => p.PartName).Width("30%").Sortable(true);
        columns.Bound(p => p.Qty).Width("15%").Sortable(true).ClientTemplate("#= OnDatabound(Qty)#").EditorTemplateName("NewDecimalNumericTextbox").Format("{0:N2}");
        columns.Bound(p => p.InvoiceP).Width("15%").Sortable(true).ClientTemplate("#= OnDatabound(InvoiceP)#").EditorTemplateName("NewDecimalNumericTextbox").Format("{0:N2}");
        columns.Bound(p => p.DesirePartCode).Sortable(true);
        columns.Bound(p => p.PONumber).Sortable(true);
    })
          .Sortable()
          .Editable(editable => editable.Mode(GridEditMode.InCell))
          .DataSource(dataSource => dataSource
              .Ajax()
              .Batch(true)
              .Read(read => read.Action("Read", "SupplierDispatchPart", Model))
              .Model(
               model =>
               {
                   model.Id(p => p.DeliverySeqNo);
                   model.Field(p => p.DeliverySeqNo).Editable(false);
                   model.Field(p => p.InvoiceP).Editable(Model.StatusId == -1);
                   model.Field(p => p.PartCode).Editable(false);
                   model.Field(p => p.Qty).Editable(Model.StatusId == -1);
                   model.Field(p => p.PartName).Editable(false);
                   model.Field(p => p.DesirePartCode).Editable(false);
                   model.Field(p => p.PONumber).Editable(false);
               }).Update(update => update.Action("SupplierDispatchPartSave", "SupplierDispatchPart").Type(HttpVerbs.Post)))

        )
    </div>

</div>

<script>
    function CompleteConfirm(completeFunction) {
        var confirm = false;
        var kendoWindow = $("<div />").kendoWindow({
            title: "@MessageResource.Gloabl_Display_Approve",
            resizable: false,
            modal: true
        });

        kendoWindow.data("kendoWindow")
            .content($("#complete-confirmation").html())
            .center().open();

        kendoWindow
            .find(".complete-confirm, .complete-cancel")
            .click(function() {
                if ($(this).hasClass("complete-confirm")) {
                    confirm = true;
                    if (completeFunction)
                        completeFunction();
                }
                kendoWindow.data("kendoWindow").close();
            })
            .end();
        return confirm;
    }
    function CompleteDelivery() {
        CompleteConfirm(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("CompleteSupplierDispatchPart", "SupplierDispatchPart")",
                data: { id: @Model.DeliveryId },
                traditional: true,
                success: function (result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#grid').data('kendoGrid');
                        grid.dataSource.read();
                        $("#divDetails").hide();
                        SetSuccessMessage(result.Message);
                    }
                },
                dataType: "json"
            });
        });

    }

    $("document").ready(function() {

        var statusId = "@Model.StatusId";




        $("#supplierPart").delegate(".modalClick2", "click", function(e) {
            $('#modelWindowSupplier').html('');
            e.preventDefault();

            var link;
            var frameTitle = $(this).attr("frameTitle");

            if ($(this).hasClass("createNewSupplier")) {
                link = "@Url.Action("SupplierDispatchPartCreate", "SupplierDispatchPart", new { id = Model.DeliveryId })";
            } else if ($(this).hasClass("createNewSupplierOrder")) {
                link = "@Url.Action("SupplierDispatchPartOrderCreate", "SupplierDispatchPart", new { id = Model.DeliveryId, suppId = Model.SupplierId, wayBillNo = Model.WayBillNo, wayBillDate = Model.WayBillDate })";
            }

            $("#modelWindowSupplier_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindowSupplier").data("kendoWindow");

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
            
        });

    });
function Delete(id, statusId) {
    var token = $('input[name="__RequestVerificationToken"]').val();

    DeleteConfirm(function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("SupplierDispatchPartDelete", "SupplierDispatchPart")",
            data: { id: id, statusId: statusId, "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                if (result.Status == 0)
                    SetErrorMessage(result.Message);
                else {
                    var grid = $('#SupplierDispatchPartGrid').data('kendoGrid');
                    grid.dataSource.read();
                    SetSuccessMessage(result.Message);
                }
            },
            dataType: "json"
        });
    });
}

</script>

<script>

    function ResizeSupplierWindow(expand) {
        var windowWidget = $("#modelWindowSupplier").data("kendoWindow");
        if (expand == 1) {
            windowWidget.wrapper.css({ width: 1400, height: 800 });
        } else {
            windowWidget.wrapper.css({ width: 650, height: 300 });
        }
        windowWidget.center();
    }
    
    function OnDatabound(aQty) {
        if ('@Model.StatusId' == '-1') {
            if (aQty == null || aQty < 0) {
                return "<div style='background: lightgray'>" + '@MessageResource.Global_Display_Enter' + " </div>";
            } else {
                var culture = "@System.Threading.Thread.CurrentThread.CurrentUICulture.ToString()";
                if (culture == "tr-TR") aQty = aQty.toString().replace(".", ",");
                return "<div style='background: lightgray'>" + aQty + "</div>";
            }
        }else
            return aQty;
    }

    function SaveChanges() {
        var isValid = true;
        var grid = $("#SupplierDispatchPartGrid").data("kendoGrid");
        if (grid.dataSource.hasChanges()) {
            var list = grid.dataSource.data();
            for (var i = 0; i < list.length; i++) {
                if (list[i].Qty == null || list[i].Qty < 0)
                    isValid = false;
                if (list[i].Qty != null && list[i].Qty >= 0) {
                    var truncValue = Math.floor(list[i].Qty);
                    if (truncValue.toString().length > 5) {
                        @{
                            string message = string.Format(MessageResource.Validation_IntegerLength, 5);
                        }
                        SetErrorMessage('@message');
                        return false;
                    }
                }
            }
            if (isValid) {
                grid.saveChanges();
                SetSuccessMessage('@MessageResource.Global_Display_Success');

                var grid = $("#SupplierDispatchPartGrid").data("kendoGrid");
                grid.dataSource.read();


            } else {
                SetErrorMessage('@MessageResource.SupplierDispatchPart_Warning_EmptyQuantity');
            }
        } else {
            SetErrorMessage('@MessageResource.CycleCountResult_Warning_NoChange');
        }
    }

</script>
