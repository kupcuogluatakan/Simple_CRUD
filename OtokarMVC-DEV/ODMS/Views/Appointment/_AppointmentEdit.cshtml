@using ODMSBusiness
@using ODMSCommon.Resources
@using ODMSCommon.Security
@model ODMSModel.Appointment.AppointmentViewModel
@Html.AntiForgeryToken()

<div class="labelDiv">@Html.LabelFor(v => v.DealerId)</div>
<div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.DealerId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.DealerList as List<SelectListItem>).Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose).Enable(UserManager.UserInfo.GetUserDealerId() == 0)</div>

<div class="labelDiv">@Html.LabelFor(v => v.AppointmentTypeId)</div>
<div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.AppointmentTypeId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.AppointmentTypeList as List<SelectListItem>).Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose)@Html.ValidationMessageFor(v => v.AppointmentTypeId)</div>

<div class="labelDiv">@Html.LabelFor(v => v.ComplaintDescription)</div>
<div class="shortTxtDiv">@Html.TextAreaFor(v => v.ComplaintDescription, new { @style = "resize:none; height:50px" })@Html.ValidationMessageFor(v => v.ComplaintDescription)</div>

<div class="labelDiv">@Html.LabelFor(v => v.AppointmentDate)</div>
<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.AppointmentDate).Events(e => e.Open("OpenAppDate").Change("ChangeAppDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text" })@Html.ValidationMessageFor(v => v.AppointmentDate)</div>

<div class="labelDiv">@Html.LabelFor(v => v.AppointmentTime)</div>
<div class="shortTxtDiv">@Html.Kendo().TimePickerFor(v => v.AppointmentTime).Events(e => e.Open("OpanAppTime")).Interval(Model.Interval) @Html.ValidationMessageFor(v => v.AppointmentTime)</div>

<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.DeliveryEstimateDate)</div>
<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.DeliveryEstimateDate).Events(e => e.Open("OpenDeliveryDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text" })@Html.ValidationMessageFor(v => v.AppointmentDate)</div>

<div class="labelDiv">@Html.LabelFor(v => v.DeliveryEstimateTime)</div>
<div class="shortTxtDiv">@Html.Kendo().TimePickerFor(v => v.DeliveryEstimateTime).Events(e => e.Open("OpenDeliveryDate")).Interval(15)</div>

<div class="clearDiv">&nbsp;</div>

<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehicleId)</div>
<div class="shortTxtDivObjectSearch">@Html.Partial("~/Views/ObjectSearch/ObjectSearch.cshtml", new ODMSModel.ObjectSearch.ObjectSearchModel { ObjectSearchType = CommonValues.ObjectSearchType.Vehicle, WindowTitle = ODMSCommon.Resources.MessageResource.ObjectSearch_WindowTitle_Vehicle, ReferenceObjectId = "VehicleId", ClearCallBackFunction = "ClearVehicleChange", SelectCallBackFunction = "SetVehicleChange", Required = false, ReferenceObjectValue = Model == null ? null : Model.VehicleId, ParentWindowId = "modelWindow" })</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehiclePlate)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehiclePlate, new { @onkeyup = "InputToUpperWithoutWhiteSpace(this);" }) @Html.ValidationMessageFor(v => v.VehiclePlate)</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehicleVin)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehicleVin, new { @readonly = "readonly" })</div>

<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehicleModelCode)</div>
<div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.VehicleModelCode).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.VehicleModelList as List<SelectListItem>).Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose)</div>
<div class="labelDiv">@Html.LabelFor(v => v.VehicleType)</div>
<div class="shortTxtDiv">
    @Html.Kendo().ComboBoxFor(v => v.VehicleType).DataValueField("Value").DataTextField("Text").Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose).DataSource(source => source.Read(read => read.Action("ListVehicleTypes", "Appointment")
                             .Data("GetVehicleModelCode"))
                             .ServerFiltering(true)).Enable(false).AutoBind(false).CascadeFrom("VehicleModelCode")
</div>

<div class="labelDiv">@Html.LabelFor(v => v.VehicleColor)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.VehicleColor)@Html.ValidationMessageFor(v => v.VehicleColor)</div>

<div class="clearDiv">&nbsp;</div>

<div class="clearDiv">&nbsp;</div>
<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.CustomerId)</div>
<div class="shortTxtDivObjectSearch">@Html.Partial("~/Views/ObjectSearch/ObjectSearch.cshtml", new ODMSModel.ObjectSearch.ObjectSearchModel { ObjectSearchType = CommonValues.ObjectSearchType.Customer, WindowTitle = ODMSCommon.Resources.MessageResource.ObjectSearch_WindowTitle_Customer, ReferenceObjectId = "CustomerId", ClearCallBackFunction = "ClearCustomerChange", SelectCallBackFunction = "SetCustomerChange", Required = false, ReferenceObjectValue = Model == null ? null : Model.CustomerId, ParentWindowId = "modelWindow" })</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactFirstName)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactFirstName, new { @class = "clssCustomer", @onkeyup = "InputToUpper(this);" })@Html.ValidationMessageFor(v => v.ContactFirstName)</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactLastName)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactLastName, new { @class = "clssCustomer", @onkeyup = "InputToUpper(this);" })@Html.ValidationMessageFor(v => v.ContactLastName)</div>

<div class="clearDiv">&nbsp;</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactPhone)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactPhone, new { @class = "clssCustomer" })@Html.ValidationMessageFor(v => v.ContactPhone)</div>

<div class="labelDiv">@Html.LabelFor(v => v.ContactAddress)</div>
<div class="shortTxtDiv">@Html.TextBoxFor(v => v.ContactAddress, new { @class = "clssCustomer" })@Html.ValidationMessageFor(v => v.ContactAddress)</div>

<div class="clearDiv">&nbsp;</div>
@Html.HiddenFor(c => c.DealerId)
<script src="~/Scripts/jquery.maskedinput.js"></script>
<script src="~/Scripts/odms.objectsearch.js"></script>
<script type="text/javascript">

    function OpenAppDate() {
        var date = $("#AppointmentDate").data("kendoDatePicker");
        date.min(new Date($.now()));
    }
    function OpanAppTime() {
        var date = $("#AppointmentDate").data("kendoDatePicker");
        var time = $("#AppointmentTime").data("kendoTimePicker");
        if (date.value() < new Date($.now()).setHours(new Date($.now()).getHours() + 20)) {
            time.min(new Date(2000, 0, 1, 0, 0, 0));
        } else {
            time.min(new Date(2000, 0, 1, 0, 0, 0));
        }
    }
    function ChangeAppDate()
    {
        var date = $("#AppointmentDate").data("kendoDatePicker");
        var time = $("#AppointmentTime").data("kendoTimePicker");
       
        var token = $('input[name="__RequestVerificationToken"]').val();
        var dealerId = @UserManager.UserInfo.GetUserDealerId();

        var appDate = new Date(date.value());
        var appTime = new Date(time.value());

        $.ajax({
            type: "POST",
            url: "@Url.Action("GetAppointmentPeriod", "Appointment")",
            data: { 
                dealerId: dealerId, 
                appointmentDate: appDate.getDate() + '/' + appDate.getMonth() + 1 + '/' + appDate.getFullYear(), 
                appointmentTimeHours: appTime.getHours(),
                appointmentTimeMinutes: appTime.getMinutes(),
                appointmentTimeSeconds: appTime.getSeconds(), 
                "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                if(result.appointmentInterval == null || result.appointmentInterval == 0)
                {
                    time.setOptions({
                        interval: Model.Interval
                    });
                }
                else
                {
                    time.setOptions({
                        interval: result.appointmentInterval
                    });
                }
            },
            dataType: "json"
        });        
    }
    function OpenDeliveryDate() {
        var deliveryDate = $("#DeliveryEstimateDate").data("kendoDatePicker");
        var deliveryTime = $("#DeliveryEstimateTime").data("kendoTimePicker");

        var appTime = $("#AppointmentTime").data("kendoTimePicker");
        var appDate = $("#AppointmentDate").data("kendoDatePicker");

        if (appDate.value()) {
            deliveryDate.min(appDate.value());
        } else {
            deliveryDate.min(new Date($.now()));
        }

        if (appDate.value() != null && deliveryDate.value() != null) {
            if (appDate.value().toString() == deliveryDate.value().toString()) {

                deliveryTime.min(appTime.value());
            }
            else {
                deliveryTime.min(new Date(2000, 0, 1, 0, 0, 0));
            }
        } else {
            deliveryTime.min(new Date(2000, 0, 1, 0, 0, 0));
        }

    }
    function GetVehicleModelCode() {
        return {
            vehicleModelCode: $('#VehicleModelCode').val()
        };
    }

    $(document).ready(function () {
        $("#VehicleIdClear").attr("title",'@Html.Raw(MessageResource.ObjectSearch_Title_VehicleClear)');
        $("#CustomerIdClear").attr("title", '@Html.Raw(MessageResource.ObjectSearch_Title_CustomerClear)');
        if ($("#AppointmentTypeId").val() == 0 || $("#AppointmentTypeId").val() == null) {
            $("#AppointmentTypeId").data("kendoComboBox").text('');
        }

        @if (Model == null)
          {
              @Html.Raw("SetVehicleChange();")
          }
          else
          {
              @Html.Raw("GetAppointmentData();")
          }
        $('#AppointmentDate').prop("readonly", true);
        $('#AppointmentTime').prop("readonly", true);
        $('#DeliveryEstimateDate').prop("readonly", true);
        $('#DeliveryEstimateTime').prop("readonly", true);
        $('form').each(function() {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                validator.settings.ignore = "";
            }
        });
    });

    $(document).ready(function() {
        $("#ContactPhone").mask("(999) 999 99 99", { placeholder: " " });
    });

    function SetVehicleChange() {

        var vehiclePlate = $("#VehicleIdTextContainer").val();

        if (vehiclePlate) {
            var token = $('input[name="__RequestVerificationToken"]').val();
            var appointmentId = @(Model!=null?Model.AppointmentId:0);

            $.ajax({
                type: "POST",
                url: "@Url.Action("GetAppointmentVehicleInfo", "Appointment")",
                data: { vehicleId: $("#VehicleId").val(), appointmentId: appointmentId, "__RequestVerificationToken": token },
                traditional: true,
                success: function (result) {
                    $("#VehicleModelCode").data("kendoComboBox").text(result.Model);
                    $("#VehicleType").data("kendoComboBox").text(result.Type);
                    $("#VehicleColor").val(result.VehicleColor);
                    $("#VehiclePlate").val(result.Plate);
                    $("#VehicleVin").val(result.Vin);
                    $("#CustomerId").val(result.CustomerId);
                    GetWorkOrderCustomerData();
                },
                dataType: "json"
            });
        }
    }

    function ClearVehicleChange() {
        $("#VehicleModelCode").data("kendoComboBox").enable(true);
    }

    function ClearCustomerChange() {
        $("#ContactName").val('');
        $("#ContactFirstName").val('');
        $("#ContactLastName").val('');
        $("#ContactPhone").val('');
        $("#ContactAddress").val('');
        $("#CustomerIdSearch").show();
    }

    function SetCustomerChange() {
        var token = $('input[name="__RequestVerificationToken"]').val();
        var customerId = $("#CustomerId").val();
        var appointmentId = @(Model!=null?Model.AppointmentId:0);
        $.ajax({
            type: "POST",
            url: "@Url.Action("GetAppointmentCustomer", "Appointment")",
            data: { customerId: customerId,appointmentId: appointmentId, "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                $("#CustomerIdTextContainer").val(result.Name);
                $("#ContactName").val(result.Name);
                $("#ContactFirstName").val(result.FName);
                $("#ContactLastName").val(result.LName);
                $("#ContactPhone").val(result.Phone);
                $("#ContactAddress").val(result.Address);
            },
            dataType: "json"
        });
    }
    
    function GetWorkOrderCustomerData() {
        ClearCustomerData();
        mvc.build('@Url.Action("GetWorkOrderData","WorkOrder")', null, null, { id: $('#CustomerId').val(), type: 'Customer' }, false, "json");
        mvc.post(null, function (json) {
            SetCustomerValues(json);
        }, null);
    }

    function GetAppointmentData() {
        var appointmentId = @(Model!=null?Model.AppointmentId:0);
        if (appointmentId != 0) {
            ClearVehicleData();
            mvc.build('@Url.Action("GetWorkOrderData","WorkOrder")', null, null, { id: appointmentId, type: 'Appointment' }, false, "json");
            mvc.post(null, function (json) {
                SetVehicleValues(json);
            }, null);
        }
    }


    function GetWorkOrderVehicleData() {
        if ($('#VehicleId').val()) {
            ClearVehicleData();
            mvc.build('@Url.Action("GetWorkOrderData","WorkOrder")', null, null, { id: $('#VehicleId').val(), type: 'Vehicle' }, false, "json");
            mvc.post(null, function (json) {
                SetVehicleValues(json);
            }, null);
        }

    }

    function SetVehicleValues(json) {
        ClearVehicleData();
        ClearCustomerData();        
        $("#VehicleId").val(json.VehicleId);
        $("#VehicleIdTextContainer").val(json.VehicleVin);  
        $("#VehicleModelCode").val(json.VehicleModelCode);
        $("#VehicleType").val(json.VehicleType);     
        $("#VehicleModelCode").data("kendoComboBox").text(json.VehicleModelCode);
        $("#VehicleType").data("kendoComboBox").text(json.VehicleTypeName);
        $("#VehiclePlate").val(json.VehiclePlate);
        $("#VehicleVin").val(json.VehicleVin);
        
        $("#CustomerId").val(json.CustomerId);
        $("#ContactName").val(json.CustomerName);
        $("#ContactFirstName").val(json.CustomerFirstName);
        $("#ContactLastName").val(json.CustomerSurName);
        $("#ContactPhone").val(json.CustomerPhone);
        $("#VehicleColor").val(json.VehicleColor);
        $("#ContactAddress").val(json.CustomerAddress);
        $("#CustomerIdTextContainer").val(json.CustomerName);
        if (json.CustomerId == undefined) {
            ShowWarningMessage("@MessageResource.WorkOrder_Message_CustomerNotFoundInVehicle");
        }
    }

    function SetCustomerValues(json) {
        ClearCustomerData();
        if(json.CustomerId != undefined)
        {
            $("#ContactName").val(json.CustomerName);
            $("#ContactFirstName").val(json.CustomerFirstName);
            $("#ContactLastName").val(json.CustomerSurName);
            $("#CustomerIdTextContainer").val(json.CustomerName);
            $("#ContactAddress").val(json.CustomerAddress);
            $("#ContactPhone").val(json.CustomerPhone);
        }
    }

    function ClearVehicleData() {
        $("#VehicleModelCode").val('');
        $("#VehiclePlate").val('');
        $("#VehicleType").val('');
    }
    function ClearCustomerData() {
        //$("#CustomerId").val('0');
        $("#CustomerIdTextContainer").val('');
        $("#ContactName").val('');
        $("#ContactFirstName").val('');
        $("#ContactLastName").val('');
        $("#ContactPhone").val('');
        $("#ContactAddress").val('');
    }

    var cnt = 0;
    function ShowWarningMessage(msg) {
        try {


            cnt++;
            var id = 'warning7895-div-' + cnt;
            var kendoWindow = $("<div id='" + id + "'/>").kendoWindow({
                title: "@ODMSCommon.Resources.MessageResource.Global_Display_Warning",
                resizable: false,
                modal: true
            });

            kendoWindow.data("kendoWindow")
                .content($("#warning-modal").html())
                .center().open();
            $(".warning-message", '#' + id).append(msg);
            kendoWindow
                .find(".warning-ok")
                .click(function () {
                    if(kendoWindow)
                        kendoWindow.data("kendoWindow").destroy();
                })
                .end();
        } catch (e) {

        }
    }
</script>
