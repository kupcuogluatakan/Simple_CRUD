@using ODMSCommon.Resources
@model ODMSModel.PurchaseOrderDetail.PurchaseOrderDetailViewModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("PurchaseOrderDetail_PageTitle_Update");
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
}

<link href="~/Style/Content.css" rel="stylesheet" />
@Html.AntiForgeryToken()
@using (Html.BeginForm("PurchaseOrderDetailUpdate", "PurchaseOrderDetail", FormMethod.Post))
{
    <div class="labelDiv">@Html.LabelFor(v => v.PartName)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(v => v.PartName)</div>
    <div class="clearDiv">&nbsp;</div>
    <div id="divPrice">
        <div class="labelDiv">
            <label style="font-weight: bold">Otokar Miktar:</label>
        </div>
        <div class="shortTxtDiv">
            <h4> <label id="lblPartQuantity" class="label  label-danger"></label></h4>
        </div>
    </div>
    <div class="clearDiv">&nbsp;</div>

    <div class="labelDiv">@Html.LabelFor(v => v.PackageQuantity)</div>
            <span class="txtPackageQuantity">
                @Html.DisplayFor(model => model.PackageQuantity)
            </span>
            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(v => v.DesireQuantity)</div>
            <div class="shortTxtDiv">@Html.Kendo().NumericTextBoxFor(v => v.DesireQuantity).Events(ev => ev.Change(@"function(e){CalculateValues();}")).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "8", data_val_min = "0", data_val_max = "1000", style = "width:200px" }) @Html.ValidationMessageFor(v => v.DesireQuantity) </div>
            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(v => v.OrderQuantity)</div>
            <span class="txtOrderQuantity">
                @Html.DisplayFor(model => model.OrderQuantity)
            </span>
            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(v => v.OrderPrice)</div>
            <div class="shortTxtDiv">@Html.Kendo().NumericTextBoxFor(v => v.OrderPrice).Events(ev => ev.Change(@"function(e){OrderPriceChanged();}")).Enable(Model.ManuelPriceAllow == true).Spinners(false).Decimals(2).Format("{0:N2}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", style = "width:200px" }) @Html.ValidationMessageFor(v => v.OrderPrice) </div>

            <div class="clearDiv">&nbsp;</div>
    if (Model.SupplyTypeMst == (int)CommonValues.SupplyPort.DealerService)
    {

        <div class="labelDiv">@Html.LabelFor(v => v.ListPrice)</div>
        <div class="shortTxtDiv">@Html.Kendo().NumericTextBoxFor(v => v.ListPrice).Enable(false).Spinners(false).Decimals(2).Format("{0:N2}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", style = "width:204px" }) @Html.ValidationMessageFor(v => v.ListPrice)</div>
        <div class="clearDiv">&nbsp;</div>
                <div class="labelDiv">@Html.LabelFor(v => v.ListDiscountRatio)</div>
                <div class="shortTxtDiv">@Html.Kendo().NumericTextBoxFor(v => v.ListDiscountRatio).Enable(false).Spinners(false).Decimals(2).Format("{0:N2}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", style = "width:204px" }) @Html.ValidationMessageFor(v => v.ListDiscountRatio)</div>
                <div class="clearDiv">&nbsp;</div>
                <div class="labelDiv">@Html.LabelFor(v => v.AppliedDiscountRatio)</div>
                <div class="shortTxtDiv">@Html.Kendo().NumericTextBoxFor(v => v.AppliedDiscountRatio).Spinners(false).Decimals(2).Format("{0:N2}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", style = "width:204px" }) @Html.ValidationMessageFor(v => v.AppliedDiscountRatio)</div>
                <div class="clearDiv">&nbsp;</div>
    }

    @*<div class="labelDiv">@Html.LabelFor(v => v.StatusName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.StatusId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StatusList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")).Enable(false)
            @Html.ValidationMessageFor(c => c.StatusId)
        </div>*@

    <div class="clearDiv">&nbsp;</div>
    <div class="labelDiv">@Html.LabelFor(v => v.DesireDeliveryDate)</div>
    <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.DesireDeliveryDate).Culture("en-GB").Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).Min(DateTime.Now).HtmlAttributes(new { type = "text" })@Html.ValidationMessageFor(v => v.DesireDeliveryDate)</div>
    <div class="clearDiv">&nbsp;</div>
    <div class="labelDiv">@Html.LabelFor(v => v.CurrencyCode)</div>
    <div class="shortTxtDiv">
        @Html.Kendo().ComboBoxFor(v => v.CurrencyCode).Events(e => e.DataBound("CurrencyDataBound")).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.CurrencyCodeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))
        @Html.ValidationMessageFor(c => c.CurrencyCode)
    </div>

    <div class="clearDiv">&nbsp;</div>
    <br />
    @ODMSHelpers.Button("Update", CommonUtility.GetResourceValue("Global_Display_Update"), CommonValues.PermissionCodes.PurchaseOrderDetail.PurchaseOrderDetailUpdate, "PurchaseOrderDetailUpdate", "return partControl();")
    @Html.HiddenFor(v => v.PurchaseOrderNumber)
    @Html.HiddenFor(v => v.PurchaseOrderDetailSeqNo)
    @Html.HiddenFor(v => v.PartId)
    @Html.HiddenFor(v => v.PartName)
    @Html.HiddenFor(v => v.StatusId)
    @Html.HiddenFor(v => v.SupplyTypeMst)
    @Html.HiddenFor(v => v.PoTypeId)
    @Html.HiddenFor(c => c.PoTypeName)
    @Html.HiddenFor(c => c.ListDiscountRatio)
    @Html.HiddenFor(c => c.ListPrice)
    @Html.HiddenFor(v => v.OrderQuantity)
}
<script type="text/javascript">
    function partControl() {
        var invoicePrice = $("#OrderPrice").data("kendoNumericTextBox").value();
        var qty = $("#DesireQuantity").data("kendoNumericTextBox").value();
        if (invoicePrice == null || invoicePrice == 0 || qty == null || qty == 0) {
            SetErrorMessage("@MessageResource.PurchaseOrderDetailCreate_IsRequired");
            return false;
        }

        return OrderPriceChanged();
    }

    function CurrencyDataBound() {
        var length = $("#CurrencyCode").data("kendoComboBox").dataSource.data().length;
        if (length == 1) {
            $("#CurrencyCode").data("kendoComboBox").select(0);
            $("#CurrencyCode").data("kendoComboBox").enable(false);
        }
        else {
            $("#CurrencyCode").data("kendoComboBox").enable(true);
        }
    }
    $(function () {
        $('.k-widget').addClass('input-validation-valid');
        $(".k-widget").removeClass("input-validation-error");

        adjustPage();
    });
    $(document).ready(function () {
        $("#PackageQuantity").attr("readonly", "readonly");
        $('form').each(function () {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                validator.settings.ignore = "";
            }
        });

        if ("@Model.ManuelPriceAllow" == "False" && "@Model.SupplyTypeMst" == "1") {//Otokar=1, Supplier=2, Supplier Fiyat Değiştirebilir.
            $("#OrderPrice").data("kendoNumericTextBox").readonly(true);
        } else {
            $("#OrderPrice").data("kendoNumericTextBox").readonly(false);
        }

        GetPartQuantity();
    });
    function OrderPriceChanged() {
        var listPrice = $("#ListPrice").val();
        if (listPrice == null || parseInt(listPrice) == 0)
            return true;

        var orderPrice = parseFloat($("#OrderPrice").val().replace(",", "."));
        listPrice = parseFloat(listPrice.replace(",", "."));

        if (listPrice != orderPrice) {
            if (listPrice < orderPrice) {
                SetWarningMessage('@MessageResource.PurchaseOrderDetailCreate_Warning_OrderPriceGreaterThanListPrice');
                return false;
            } else {
                var appDiscountRatio = ((listPrice - orderPrice) * 100) / listPrice;
                $("#AppliedDiscountRatio").kendoNumericTextBox({
                    value: appDiscountRatio,
                    spinners: false
                });

                if ($("#AppliedDiscountRatio").data("kendoNumericTextBox")!= null)
                    $("#AppliedDiscountRatio").data("kendoNumericTextBox").readonly(true);
            }
        }

        return true;
    }
    function CalculateValues() {
        var desireQuantity = $("#DesireQuantity").val() != '' ? parseFloat($("#DesireQuantity").val().replace('.', ',')) : '';
        var packageQuantity = $('.txtPackageQuantity').html() != '' ? parseFloat($('.txtPackageQuantity').html()) : '';
        var orderQuantity;
        if (desireQuantity != '' && packageQuantity != '' && '@Model.SupplyTypeMst' == '@((int)CommonValues.SupplyPort.Otokar)') {
            orderQuantity = (((desireQuantity - (desireQuantity % packageQuantity)) / packageQuantity) +
            ((desireQuantity % packageQuantity) != 0 ? 1 : 0)) * packageQuantity;
            $('.txtOrderQuantity').html(orderQuantity.toFixed(2).replace('.', ','));
            $('#OrderQuantity').val(orderQuantity.toFixed(2).replace('.',','));
        } else if (desireQuantity != '' && packageQuantity != '' && '@Model.SupplyTypeMst' != '@((int)CommonValues.SupplyPort.Otokar)' && desireQuantity % packageQuantity != 0) {
            CustomConfirm(function () {
                //CustomConfirm(function() {
                //    $('.txtOrderQuantity').html(desireQuantity);
                //    $('#OrderQuantity').val(desireQuantity);
                //}
                //orderQuantity = (((desireQuantity - (desireQuantity % packageQuantity)) / packageQuantity) +
                //((desireQuantity % packageQuantity) != 0 ? 1 : 0)) * packageQuantity;
                //console.log(orderQuantity,desireQuantity,orderQuantity.toFixed(2))
                $('.txtOrderQuantity').html(desireQuantity);
                $('#OrderQuantity').val(desireQuantity);
            }, "@MessageResource.Global_Display_Warning", "@MessageResource.SparePartSale_OtokarPackage_Confirm", "@MessageResource.Global_Display_Yes", "@MessageResource.Global_Display_No",
                function () {
                    $('.txtOrderQuantity').html('0');
                    $("#DesireQuantity").kendoNumericTextBox({
                        value: 0,
                        spinners: false
                    });
                    $('#OrderQuantity').val('0');
                });
        } else {
            orderQuantity = (((desireQuantity - (desireQuantity % packageQuantity)) / packageQuantity) +
           ((desireQuantity % packageQuantity) != 0 ? 1 : 0)) * packageQuantity;
            $('.txtOrderQuantity').html(orderQuantity.toFixed(2).replace('.',','));
            //$('#OrderQuantity').val(orderQuantity.toFixed(2).replace('.',','));
        }
    }

    function GetPartQuantity() {

        var txtPartCode = $('#PartName').val().toString().split(" ")[0];
        if (txtPartCode) {
            $.post("@Url.Action("GetPartQuantity", "PurchaseOrder")", {
                PartCode: txtPartCode
            }, function (json) {
                if (json) {
                    $("#lblPartQuantity").html(json.Quantity);
                }
            }, "JSON");
        }
    }


    function adjustPage() {
        $("#popupContent").css("width", 742);
        $("#popupContentWrapper").css("min-height", 492);
        $("#popupContentWrapper").css("height", 492);
        $("#popupContentWrapper").css("width", 742);
    }
</script>
