@using ODMSCommon.Resources

@model ODMSModel.Workshop.WorkshopIndexModel
@{
    ViewBag.Title = @MessageResource.Workshop_PageTitle_Index;
}
@Html.AntiForgeryToken()
<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">
        <div id="tagDealerListDiv" class="labelDiv" style="width: 120px">@Html.Label(@MessageResource.Workshop_Display_DealerList)</div>
        <div id="cmbDealerListDiv" class="shortTxtDiv">
            @(Html.Kendo().ComboBox()
                  .Name("cmbDealers")
                  .Placeholder(@MessageResource.Workshop_Display_SelectDealer)
                  .BindTo(Model.DealerList)
                  .DataTextField("Text")
                  .DataValueField("Value")
                  .HtmlAttributes(new { @class = "ComboBox", @style = "width: 205px;" })
            )
        </div>
        <div id="tagWorkshopNameDiv" class="labelDiv" style="width: 80px">@Html.LabelFor(d => d.WorkshopName)</div>
        <div id="txtWorkshopNameDiv" class="shortTxtDiv">@Html.TextBoxFor(d => d.WorkshopName) </div>
        <div id="tagIsActiveDiv" class="labelDiv" style="width: 80px">@Html.LabelFor(d => d.IsActive)</div>
        <div id="cmbIsActiveDiv" class="shortTxtDiv" style="width: 20px">
            @(Html.Kendo().ComboBoxFor(v => v.IsActive)
                .Name("cmbIsActive")
                .DataTextField("Text")
                .DataValueField("Value")
                .BindTo(Model.IsActiveOptions)
                .Placeholder(MessageResource.Global_Display_Choose))
        </div>
    </div>
</div>

@ODMSHelpers.LinkButton("btnSearch", MessageResource.Global_Display_Search, "", "", "", CommonValues.PermissionCodes.Workshop.WorkshopIndex)
@ODMSHelpers.LinkButton("btnCreate", MessageResource.Global_Display_New, "Create", "modalClick createNew", MessageResource.Workshop_PageTitle_Create, CommonValues.PermissionCodes.Workshop.WorkshopCreate)

<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.Workshop.WorkshopListModel>()
          .Name("grid")
          .Columns(columns =>
              {
                  columns.Bound(d => d.Id).ClientTemplate("<center><a class='details modalClick' id='#=Id#' frameTitle='" + MessageResource.Workshop_PageTitle_Details + "' href='/Workshop/WorkshopDetails/#=Id#'><img class='iconLink' src='" + Url.Content("~/Images/view.png") + "'/></a></center>").Title(MessageResource.Global_Display_View).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Workshop.WorkshopDetails));
                  columns.Bound(d => d.Id).ClientTemplate("<center><a class='edit modalClick' id='#=Id#' frameTitle='" + MessageResource.Workshop_PageTitle_Update + "' href='/Workshop/WorkshopUpdate/#=Id#'><img class='iconLink' src='" + Url.Content("~/Images/edit.png") + "'/></a></center>").Title(MessageResource.Global_Display_Update).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Workshop.WorkshopUpdate));
                  columns.Bound(d => d.Id).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + MessageResource.Workshop_PageTitle_Delete + "' onclick='DeleteWorkshop(#=Id#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(MessageResource.Global_Display_Delete).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Workshop.WorkshopDelete));
                  columns.Bound(d => d.Name).Width(200).Sortable(true);
                  columns.Bound(d => d.DealerName).Width(200).Sortable(true);
                  columns.Bound(d => d.IsActiveString).Width(200).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListWorkshops", "Workshop").Data("Search"))
                                        .Model(model => model.Field(d => d.Id).DefaultValue(-1)))
          )

</div>

<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
        .Name("modelWindow")
        .Title("Workshop")
        .Draggable()
        .Resizable()
        .Width(440)
        .Height(250)
        .Scrollable(false)
        .Visible(false)
        .Modal(true)
        .Iframe(true)
        .Events(ev => ev.Close(@"function(e){
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.page(1);
            }"))
    )
</div>


@section Scripts
{
    <script>
        $(function () {
            RegisterEventHandlers();
            AdjustControlPositions();
        });

        function RegisterEventHandlers() {
            $("body").delegate("#showSearch", "click", function(e) {
                var IsVisible = Boolean($(this).hasClass("searchVisible"));

                if (!IsVisible) {
                    $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                    $(this).addClass("searchVisible");
                    $("#searchDiv").show("slow");
                } else {
                    $(this).html('@MessageResource.Global_Display_Search_Criteria');
                    $(this).removeClass("searchVisible");
                    $("#searchDiv").hide("slow");
                }
            });

            $("body").delegate(".modalClick", "click", function (e) {
                $('#modelWindow').html('');
                e.preventDefault();

                var link;
                var clickedId = $(this).attr("id");
                var frameTitle = $(this).attr("frameTitle");

                if ($(this).hasClass("details") == true) {
                    link = "@Url.Action("WorkshopDetails", "Workshop", new {id = -1})";
                    link = link.replace("-1", clickedId);
                } else if ($(this).hasClass("edit")) {
                    link = "@Url.Action("WorkshopUpdate", "Workshop", new {id = -1})";
                    link = link.replace("-1", clickedId);
                } else if ($(this).hasClass("createNew")) {
                    link = "@Url.Action("WorkshopCreate", "Workshop")";
                }

                $("#modelWindow_wnd_title").html(frameTitle);

                var windowWidget = $("#modelWindow").data("kendoWindow");
                var closeOrigin = windowWidget.close;

                windowWidget.refresh({
                    url: link
                }).center();
                windowWidget.center();
                windowWidget.open();
               
            });
        }
        
        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.page(1);
        });

        function Search() {
            return {
                DealerId : $("#cmbDealers").val(),
                Name : $("#WorkshopName").val(),
                SearchIsActive: $("#cmbIsActive").val()
            };
        }
        
        function AdjustControlPositions() {
            $("#txtWorkshopNameDiv").css("margin-left", "30px");
            $("#tagIsActiveDiv").css("margin-left", "30px");
            $("#cmbIsActiveDiv").css("margin-left", "-10px");
        }
        
        function DeleteWorkshop(Id) {
            var token = $('input[name="__RequestVerificationToken"]').val();
            
            DeleteConfirm(function () {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("WorkshopDelete")",
                    data: { Id: Id, "__RequestVerificationToken": token },
                    traditional: true,
                    success: function (result) {
                        if (result.Status == 0)
                            SetErrorMessage(result.Message);
                        else {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.read();
                            SetSuccessMessage(result.Message);
                        }
                    },
                    dataType: "json"
                });
            });
        }
    </script>
}
