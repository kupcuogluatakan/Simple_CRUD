@model ODMSModel.FixAssetInventoryOutput.FixAssetInventoryOutputListModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("FixAssetInventoryOutput_PageTitle_Index");
}
 

<div id="showSearch">@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(c => c.FixAssetName)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.FixAssetName) </div>
       
        <div class="labelDiv">@Html.LabelFor(v => v.StockType)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.StockType).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StockTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        
        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.FixAssetStatus)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.FixAssetStatus).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StatusList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        
        <div class="clearDiv">&nbsp;</div>
    </div>
</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.FixAssetInventoryOutput.FixAssetInventoryOutputIndex)

<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
        .Name("modelWindow")
     .Draggable()
    .Resizable()
    .Width(950)
    .Height(440)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#FixAssetInventoryOutputGrid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
          )

</div>
<script>
    function Search() {
        return {
            FixAssetName: $('#FixAssetName').val(),
            StockType: $('#StockType').val(),
            FixAssetStatus: $('#FixAssetStatus').val()
        };
    }
    $(document).ready(function () {

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#FixAssetInventoryOutputGrid').data('kendoGrid');
            grid.dataSource.page(1);

        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Hide_Search_Criteria")');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });
        $("body").delegate(".modalClickFixAssetInventoryOutput", "click", function (e) {
            $('#modelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("stock")) {
                link = "@Url.Action("FixAssetInventoryOutputUpdate", "FixAssetInventoryOutput", new { idFixAssetInventory = -1 })";
                link = link.replace("-1", clickedId);
            }

            $("#modelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
           
        });

    });
</script>
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.FixAssetInventoryOutput.FixAssetInventoryOutputListModel>()
          .Name("FixAssetInventoryOutputGrid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.IdFixAssetInventory).ClientTemplate("<center><a class='stock modalClickFixAssetInventoryOutput' id='#=IdFixAssetInventory#' frameTitle='" + @CommonUtility.GetResourceValue("FixAssetInventory_PageTitle_TransferStock") + "' href='/FixAssetInventoryOutput/FixAssetInventoryOutputUpdate/#=IdFixAssetInventory#'><img class=iconLink src='" + Url.Content("~/Images/select.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("FixAssetInventory_PageTitle_TransferStock")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.FixAssetInventoryOutput.FixAssetInventoryOutputUpdate));   
                  columns.Bound(p => p.FixAssetName).Width(200).Sortable(true);
                  columns.Bound(p => p.SerialNo).Width(80).Sortable(true);
                  columns.Bound(p => p.CreateDate).Width(80).Sortable(true).Format("{0:dd/MM/yyyy}");
                  columns.Bound(p => p.ExitDesc).Width(80).Sortable(true);
                  columns.Bound(p => p.ExitDate).Width(80).Sortable(true).Format("{0:dd/MM/yyyy}");
                  columns.Bound(p => p.StockTypeName).Width(80).Sortable(true); 
              })
          .Pageable()
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListFixAssetInventoryOutput", "FixAssetInventoryOutput", Model).Data("Search"))
                                        .Model(model => model.Field(o => o.IdFixAssetInventory).DefaultValue(-1)))

          )
</div>
