@using ODMSModel.CycleCountStockDiff
@model CycleCountStockDiffSearchListModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("CycleCountStockDiff_PageTitle_Search");
}
 

<div id="showSearch">@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")</div>
<div id="searchDiv">
    <div id="searchFields">
        @*<div class="labelDiv">@Html.LabelFor(v => v.DealerName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.DealerId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.DealerList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>*@
        
        <div class="labelDiv">@Html.LabelFor(v => v.StockTypeName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.StockTypeId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StockTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        
        <div class="labelDiv">@Html.LabelFor(d => d.IsStockChanged)</div>
        <div class="shortTxtDiv">@Html.CheckBoxFor(d => d.IsStockChanged) </div>

        <div class="clearDiv">&nbsp;</div>
        
        <div class="labelDiv">@Html.LabelFor(d => d.PartCode)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(d => d.PartCode) </div>

        <div class="labelDiv">@Html.LabelFor(d => d.PartName)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(d => d.PartName) </div>
        
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.StartDate)</div>
        @*<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.StartDate).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text" })</div>*@
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.StartDate).Events(e => e.Open("OpenStartDate").Change("OpenEndDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>
        <div class="labelDiv">@Html.LabelFor(v => v.EndDate)</div>
        @*<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.EndDate).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text" })</div>*@
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.EndDate).Events(e => e.Open("OpenEndDate").Change("OpenStartDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>
    </div>
</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.CycleCountStockDiff.CycleCountStockDiffSearch)
@Html.Partial("_ExcelExport",new ODMS.Model.ExportModel())
<br />
<script>    
    function OpenStartDate() {
        var dateStart = $("#StartDate").data("kendoDatePicker");
        var dateEnd = $("#EndDate").data("kendoDatePicker");

        if ($("#EndDate").val()) {
            dateStart.max(dateEnd.value());
        } else {
            dateStart.max(new Date(3000, 0, 1));
        }
    }

    function OpenEndDate() {
        var dateStart = $("#StartDate").data("kendoDatePicker");
        var dateEnd = $("#EndDate").data("kendoDatePicker");

        if ($("#StartDate").val()) {
            dateEnd.min(dateStart.value());
        } else {
            dateEnd.min(new Date(1900, 0, 1));
        }
    }

    function GetParameters() {
        return {
            ReportType: 21,
            Columns: "DealerName,StockTypeName,PartCode,PartName,CreateDate,BeforeCountTotal,AfterCountTotal,DiffCount",
            PartName: $('#PartName').val(),
            PartCode: $('#PartCode').val(),
            IsStockChanged: $("#IsStockChanged").is(":checked"),
            StockTypeId: $('#StockTypeId').val(),
            StartDate: $('#StartDate').val(),
            EndDate: $('#EndDate').val()
        };
    }
    $(document).ready(function () {
        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#SearchGrid').data('kendoGrid');
            grid.dataSource.page(1);

        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Hide_Search_Criteria")');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });

    });
</script>
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<CycleCountStockDiffSearchListModel>()
          .Name("SearchGrid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.DealerName).Width(100).Sortable(true);
                  columns.Bound(p => p.StockTypeName).Width(100).Sortable(true);
                  columns.Bound(p => p.PartCode).Width(100).Sortable(true);
                  columns.Bound(p => p.PartName).Width(100).Sortable(true);
                  columns.Bound(p => p.CreateDate).Width(100).Format("{0:dd/MM/yyyy}").Sortable(true);
                  columns.Bound(p => p.BeforeCountTotal).Width(100).Sortable(true);
                  columns.Bound(p => p.AfterCountTotal).Width(100).Sortable(true);
                  columns.Bound(p => p.DiffCount).Width(50).ClientTemplate("#if(DiffCount>0){#" +
                      "<span class='glyphicon glyphicon-plus' style='color:green'>#=DiffCount#</span>" +
                      "#}else{#"+
                      "<span style='color:red'>#=DiffCount#</span>" +
                      "#}#").Sortable(true);
              })
          .Pageable()
          .Sortable()
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        //.PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("SearchCycleCountStockDiff", "CycleCountStockDiff", Model).Data("GetParameters")))

          )
</div>
