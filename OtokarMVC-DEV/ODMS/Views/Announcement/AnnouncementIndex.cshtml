@using ODMSCommon.Resources
@model ODMSModel.Announcement.AnnouncementListModel
@{
    ViewBag.Title = MessageResource.Announcement_PageTitle_Index;
}
 
<div id="showSearch">@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(v => v.IsActiveName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.IsActive).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StatusList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="labelDiv">@Html.LabelFor(v => v.IsUrgentName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.IsUrgent).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.YesNoList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.StartDate)</div>
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.StartDate).Events(e => e.Open("OpenStartDate").Change("OpenEndDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>
        <div class="labelDiv">@Html.LabelFor(v => v.EndDate)</div>
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.EndDate).Events(e => e.Open("OpenEndDate").Change("OpenStartDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text" ,onkeypress = "return false;" })</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.PublishUserName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.PublishUser).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.UserList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="labelDiv">@Html.LabelFor(v => v.PublishDate)</div>
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.PublishDate).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>

    </div>
</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.Announcement.AnnouncementIndex)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClickAnnouncement createNewAnnouncement", CommonUtility.GetResourceValue("Announcement_PageTitle_Create"), CommonValues.PermissionCodes.Announcement.AnnouncementCreate)
@Html.AntiForgeryToken()
<br />
<div id="AnnouncementModelWindowDiv">
    @(Html.Kendo().Window()
          .Name("AnnouncementModelWindow")
          .Draggable()
          .Resizable()
          .Width(950)
          .Height(460)
          .Visible(false)
          .Modal(true)
          .Iframe(true)
          .Events(ev => ev.Close(@"function(e){
         var grid = $('#AnnouncementGrid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
          )
</div>
<script src="~/Scripts/custom.js"></script>
<script>
    function OpenStartDate() {
        var dateStart = $("#StartDate").data("kendoDatePicker");
        var dateEnd = $("#EndDate").data("kendoDatePicker");

        if ($("#EndDate").val()) {
            dateStart.max(dateEnd.value());
        } else {
            dateStart.max(new Date(3000, 0, 1));
        }
    }

    function OpenEndDate() {
        var dateStart = $("#StartDate").data("kendoDatePicker");
        var dateEnd = $("#EndDate").data("kendoDatePicker");

        if ($("#StartDate").val()) {
            dateEnd.min(dateStart.value());
        } else {
            dateEnd.min(new Date(1900, 0, 1));
        }
    }

    function Search() {
        return {
            IsActive: $('#IsActive').val(),
            StartDate: $('#StartDate').val(),
            EndDate: $('#EndDate').val(),
            IsUrgent: $('#IsUrgent').val(),
            PublishUser: $('#PublishUser').val(),
            PublishDate: $("#PublishDate").val()
        };
    }
    $(document).ready(function () {
        //$("#StartDate").attr("readonly", "readonly");
        //var dateStart = $("#StartDate").data("kendoDatePicker").readonly();
        $('#divDetails').hide();

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#AnnouncementGrid').data('kendoGrid');
            grid.dataSource.page(1);
            $('#divDetails').hide();
        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Hide_Search_Criteria")');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });
        $("body").delegate(".modalClickAnnouncement", "click", function (e) {
            $('#AnnouncementModelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("details") == true) {
                link = "@Url.Action("AnnouncementDetails", "Announcement", new { announcementId = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("edit")) {
                link = "@Url.Action("AnnouncementUpdate", "Announcement", new { announcementId = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("createNewAnnouncement")) {
                link = "@Url.Action("AnnouncementCreate", "Announcement")";
            }
            $("#AnnouncementModelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#AnnouncementModelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();

        });

    });
function DeleteAnnouncement(aId) {
    DeleteConfirm(function () {
        var token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("DeleteAnnouncement", "Announcement")",
            data: { announcementId: aId, "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                if (result.Status == 0)
                    SetErrorMessage(result.Message);
                else {
                    var grid = $('#AnnouncementGrid').data('kendoGrid');
                    grid.dataSource.read();
                    SetSuccessMessage(result.Message);
                }
            },
            dataType: "json"
        });
    });
}
function ChangeAnnouncementStatus(aId) {
    ChangeStatusConfirm(function () {
        var token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: "POST",
            url: "@Url.Action("ChangeAnnouncementStatus", "Announcement")",
            data: { announcementId: aId, "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                if (result.Status == 0)
                    SetErrorMessage(result.Message);
                else {
                    var grid = $('#AnnouncementGrid').data('kendoGrid');
                    grid.dataSource.read();
                    SetSuccessMessage(result.Message);
                }
            },
            dataType: "json"
        });
    });
}
function onRowDataBound(isActive, announcementId, sRole, sDealer) {
    var buttonLink = "";

    if (sRole > 0 || sDealer > 0) {
        buttonLink = "<center><a href='javascript:void(0);' frameTitle=" +
                    '@CommonUtility.GetResourceValue("Announcement_PageTitle_Details")' +
                        " onclick='ChangeAnnouncementStatus(" + announcementId + ");'><img class='iconLink' src=";
        if (isActive == 1) {
            buttonLink = buttonLink + '@Url.Content("~/Images/passive.png")';
        }
        else {
            buttonLink = buttonLink + '@Url.Content("~/Images/active.png")';
        }
        buttonLink = buttonLink + "></a></center>";
    }

    return buttonLink;
}
function loadTabs(aId, isActv) {

    var tabStrip = $('#AnnouncementDetails').kendoTabStrip().data("kendoTabStrip");

    var somethingTab = tabStrip.contentElement(0);

    //$(somethingTab).empty();
    $.ajax({
        type: "GET",
        url: "@Url.Action("AnnouncementRoleIndex", "AnnouncementRole")",
        data: { IdAnnouncement: aId, isActive: isActv },
        contentType: 'application/json; charset=utf-8',
        success: function (result) {
            $(somethingTab).html(result);
            tabStrip.select(tabStrip.tabGroup.children("li").eq(0));
        },
        error: function (request, status, err) {
            alert(status);
            alert(err);
        },
        dataType: "html"
    });
    var dealersTab = tabStrip.contentElement(1);

    $.ajax({
        type: "GET",
        url: "@Url.Action("AnnouncementDealerIndex", "AnnouncementDealer")",
        data: { id: aId, isActive: isActv },
        contentType: 'application/json; charset=utf-8',
        success: function (result) {
            $(dealersTab).html(result);
        },
        error: function (request, status, err) {

            alert(status);
            alert(err);
        },
        dataType: "html"
    });

    $('#divDetails').show();
}
</script>
@Html.HiddenFor(v => v.AnnouncementId)
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.Announcement.AnnouncementListModel>()
          .Name("AnnouncementGrid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.AnnouncementId).ClientTemplate("<center><a class='loadTab' onclick='loadTabs(#=AnnouncementId#,#=IsActive#)' announcementId='#=AnnouncementId#'><img class=iconLink src='" + Url.Content("~/Images/tabs.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Details")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Announcement.AnnouncementIndex));
                  //columns.Bound(p => p.AnnouncementId).ClientTemplate("<center><a class='loadTab' onclick='loadTabs(#=AnnouncementId#)' id='#=AnnouncementId#'><img class=iconLink src='" + Url.Content("~/Images/tabs.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Details")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Announcement.AnnouncementDetails));
                  columns.Bound(o => o.AnnouncementId).ClientTemplate("#= onRowDataBound(IsActive, AnnouncementId,SumRole,SumDealer)#").Title(CommonUtility.GetResourceValue("Announcement_Display_ChangeAnnouncementStatus")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Announcement.AnnouncementUpdate));
                  columns.Bound(p => p.AnnouncementId).ClientTemplate("<center><a class='details modalClickAnnouncement' id='#=AnnouncementId#' frameTitle='" + @CommonUtility.GetResourceValue("Announcement_PageTitle_Details") + "' href='/Announcement/AnnouncementDetails/#=AnnouncementId#'><img class=iconLink src='" + Url.Content("~/Images/view.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Announcement.AnnouncementDetails));
                  columns.Bound(p => p.AnnouncementId).ClientTemplate("#if(IsActive==0){#" +
                      "<center><a class='edit modalClickAnnouncement' id='#=AnnouncementId#' frameTitle='" + @CommonUtility.GetResourceValue("Announcement_PageTitle_Update") + "' href='/Announcement/AnnouncementUpdate/#=AnnouncementId#'><img class=iconLink src='" + Url.Content("~/Images/edit.png") + "'/></a></center>" +
                      "#}else{#" +
                      "" +
                      "#}#").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Announcement.AnnouncementUpdate));
                  columns.Bound(o => o.AnnouncementId).ClientTemplate("#if(IsActive==0){#" +
                      "<center><a href='javascript:void(0);' frameTitle='" + CommonUtility.GetResourceValue("Announcement_PageTitle_Delete") + "' onclick='DeleteAnnouncement(#=AnnouncementId#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>" +
                      "#}else{#" +
                      "#}#").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Announcement.AnnouncementDelete));
                  columns.Bound(p => p.DocName).Width(100).Sortable(true);
                  columns.Bound(p => p.Title).Width(100).Sortable(true);
                  columns.Bound(p => p.StartDate).Format("{0:dd/MM/yyyy}").Width(100).Sortable(true);
                  columns.Bound(p => p.EndDate).Format("{0:dd/MM/yyyy}").Width(100).Sortable(true);
                  columns.Bound(p => p.IsUrgentName).Width(100).Sortable(true);
                  columns.Bound(p => p.SendMailName).Width(100).Sortable(true);
                  columns.Bound(p => p.PublishUserName).Width(100).Sortable(true);
                  columns.Bound(p => p.PublishDate).Format("{0:dd/MM/yyyy}").Width(100).Sortable(true);
                  columns.Bound(p => p.IsActiveName).Width(100).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()

          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListAnnouncement", "Announcement", Model).Data("Search"))
                                        .Model(model => model.Field(o => o.AnnouncementId).DefaultValue(-1)))

          )
</div>

<div id="divDetails">
    @(Html.Kendo().TabStrip()
          .Name("AnnouncementDetails")
          .Items(tabstrip => tabstrip.Add().Text(MessageResource.AnnouncementRole_PageTitle_Index).Selected(true).Content("<div></div>"))
          .Items(tabstrip => tabstrip.Add().Text(MessageResource.AnnouncementDealers_PageTitle_Index).Content("<div></div>"))
          )

</div>
