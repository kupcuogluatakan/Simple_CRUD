@model DealerViewModel
@using ODMSBusiness
@using ODMSCommon.Resources
@using ODMSModel.Dealer
@{
    ViewBag.Title = MessageResource.Dealer_PageTitle_Index;
}
@Html.AntiForgeryToken()
@*search start*@
<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(c => c.SSID)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(c => c.SSID) </div>
        <div class="labelDiv">@Html.LabelFor(v => v.DealerRegionId)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c => c.DealerRegionId).BindTo(ViewBag.DealerRegionList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) @Html.ValidationMessageFor(v => v.DealerRegionId)</div>
       <div></div><div></div>
         <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(c => c.Country)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(c => c.Country).BindTo(ViewBag.CountryList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) @Html.ValidationMessageFor(v => v.Country)
        </div>
        <div class="labelDiv">@Html.LabelFor(c => c.City)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(c => c.City).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")).DataSource(source => source.Read(read => read.Action("ListCities", "Dealer")
                                     .Data("GetCountryId"))
                                     .ServerFiltering(true)).Enable(false).AutoBind(false).CascadeFrom("Country") @Html.ValidationMessageFor(v => v.City)
        </div>
        <div></div><div></div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(c => c.IsActive)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c => c.SearchIsActive).BindTo(CommonBL.ListStatus().Data).DataTextField("Text").DataValueField("Value").Placeholder(MessageResource.Global_Display_All)  </div>
        <div class="labelDiv">@Html.LabelFor(v => v.PurchaseOrderGroupId)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(c => c.PurchaseOrderGroupId).BindTo(ViewBag.PurchaseOrderGroupList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")).Events(e => e.Change("PurchaseOrderGroupSelected"))
            @Html.ValidationMessageFor(v => v.PurchaseOrderGroupId)
        </div>        
        <div id="divSaleOrder" hidden="hidden">
            <div class="labelDiv">@Html.LabelFor(c => c.IsSaleDealer)</div>
            <div class="shortTxtDiv"><label style="width:200px">@Html.CheckBoxFor(v => v.IsSaleDealer)</label>  </div>
        </div>         
        <div class="clearDiv">&nbsp;</div>
                            </div>
                        </div>
                        @*serach end*@
                        @ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.Dealer.DealerIndex)
                        @ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClick createNew", CommonUtility.GetResourceValue("Dealer_PageTitle_Create"), CommonValues.PermissionCodes.Dealer.DealerCreate)

                        @*grid start*@
                        <div class="kendoGridDiv" id="grd">
                            @(Html.Kendo().Grid<DealerListModel>()
          .Name("grid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.DealerId).ClientTemplate("<center><a class='loadTab' onclick='ShowTabs(#=DealerId#);' id='#=DealerId#'><img class=iconLink src='" + Url.Content("~/Images/tabs.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Details")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Dealer.DealerDetails));
                  columns.Bound(p => p.DealerId).ClientTemplate("<center><a class='details modalClick' id='#=DealerId#' frameTitle='" + CommonUtility.GetResourceValue("Dealer_PageTitle_Details") + "' href='" + Url.Action("DealerDetails", "Dealer") + "/#=DealerId#'><img class='iconLink' src='" + Url.Content("~/Images/view.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Dealer.DealerDetails));
                  columns.Bound(p => p.DealerId).ClientTemplate("<center><a class='edit modalClick' id='#=DealerId#' frameTitle='" + CommonUtility.GetResourceValue("Dealer_PageTitle_Update") + "' href='" + Url.Action("DealerUpdate", "Dealer") + "/#=DealerId#'><img class='iconLink' src='" + Url.Content("~/Images/edit.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Dealer.DealerUpdate));
                  columns.Bound(o => o.DealerId).ClientTemplate("<center><a  id='#=DealerId#' frameTitle='" + CommonUtility.GetResourceValue("Dealer_PageTitle_Delete") + "' onclick='DeleteDealer(#=DealerId#);' href='javascript:void(0);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Dealer.DealerDelete));
                  columns.Bound(p => p.SSID).Width(80).Sortable(true);
                  columns.Bound(p => p.BranchSSID).Width(80).Sortable(true);
                  columns.Bound(p => p.ShortName).Width(120).Sortable(true);
                  columns.Bound(p => p.Name).Width(150).Sortable(true);
                  columns.Bound(p => p.ContactFullName).Width(150).Sortable(true);
                  columns.Bound(p => p.City).Width(100).Sortable(true);
                  columns.Bound(p => p.Country).Width(100).Sortable(true);
                  columns.Bound(p => p.RegionName).Width(120).Sortable(true);
                  columns.Bound(p => p.PurchaseOrderGroupName).Width(120).Sortable(true);
                  columns.Bound(p => p.IsSaleDealerString).Width(120).Sortable(true);
                  columns.Bound(p => p.IsActiveString).Width(120).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListDealers", "Dealer", Model).Data("DealerSearch"))
                                        .Model(model => model.Field(o => o.DealerId).DefaultValue(-1)))

                            )
                        </div>
                        @*grid end*@

                        @*modelWindow start*@
                        <div id="modelWindowDiv">
                            @(Html.Kendo().Window()
              .Name("modelWindow")
              .Title("Customer")
              .Draggable()
              .Resizable()
              .Width(950)
              .Height(850)
              .Visible(false)
              .Modal(true)
              .Iframe(true)
              .Events(ev => ev.Close(@"function(e){
         var grid = $('#grid').data('kendoGrid');
        grid.dataSource.read();
    }"))
                            )
                        </div>
                        @*modelWindow end*@

                        @*tab content start*@
                        <div id="divDetails" style="display: none; margin-top: 20px;">
                            @(Html.Kendo().TabStrip()
          .Name("Tabs")
          .Items(tabstrip => tabstrip.Add().Text(MessageResource.DealerVehicleModel_Page_Title).Selected(true).HtmlAttributes(new { onclick = "LoadTabContent('" + Url.Action("DealerVehicleGroups", "Dealer") + "');" }))
          .Items(tabstrip => tabstrip.Add().Text(MessageResource.DealerUser_PageTitle_Index).HtmlAttributes(new { onclick = "LoadTabContent('" + Url.Action("DealerUserIndex", "DealerUser") + "');" }))
           .Items(tabstrip => tabstrip.Add().Text(MessageResource.DealerProficiency_PageTitle_Index).HtmlAttributes(new { onclick = "LoadTabContent('" + Url.Action("DealerProficiencyIndex", "DealerProficiency") + "');" }))
                            )
                            <div id="TabContent" style="padding: 0 20px;" class="k-content" role="tabpanel" aria-expanded="true"></div>
                        </div>
                        @*tab content end*@

                        @*scripts start*@
                        @section Scripts{
                            <script type="text/javascript">
        var DealerId = 0;

        function PurchaseOrderGroupSelected() {
            $("#divSaleOrder").hide();
            document.getElementById("IsSaleDealer").checked = false;
            // servis-merkez, servis-otokar ise seçim açılır
            if ($('#PurchaseOrderGroupId').val() == 11 || $('#PurchaseOrderGroupId').val() == 8) {
                $("#divSaleOrder").show();
                $("#divSaleOrder :input").attr("disabled", false);
            }
            // araç satış bayi ise seçim açılır ve değiştirilemez olarak gelir
            if ($('#PurchaseOrderGroupId').val() == 12) {
                $("#divSaleOrder").show();
                document.getElementById("IsSaleDealer").checked = true;
                $("#divSaleOrder :input").attr("disabled", true);
            }
            //  bayi ise görünmüyor ve seçilemiyor
            if ($('#PurchaseOrderGroupId').val() == 7) {
                document.getElementById("IsSaleDealer").checked = false;
                $("#divSaleOrder").hide();
            }
        }
        function DealerSearch() {
            return {
                SSID: $('#SSID').val(),
                Status: $('#SearchIsActive').val(),
                Country: $('#Country').val(),
                City: $('#City').val(),
                DealerRegionId: $('#DealerRegionId').val(),
                PurchaseOrderGroupId: $('#PurchaseOrderGroupId').val(),
                IsSaleDealer: document.getElementById("IsSaleDealer").checked
            };
        }
        function GetCountryId() {
            return {
                id: $('#Country').val()
            };
        }
        $(document).ready(init);
        function init() {
            PurchaseOrderGroupSelected();

            $("body").delegate("#btnSearch", "click", function (e) {
                var grid = $('#grid').data('kendoGrid');
                grid.dataSource.page(1);
                $('#divDetails').hide();
            });
            $("body").delegate("#showSearch", "click", function (e) {
                var IsVisible = Boolean($(this).hasClass("searchVisible"));

                if (!IsVisible) {
                    $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                                            $(this).addClass("searchVisible");
                                            $("#searchDiv").show("slow");
                                        }
                                        else {
                                            $(this).html("@MessageResource.Global_Display_Search_Criteria");
                                            $(this).removeClass("searchVisible");
                                            $("#searchDiv").hide("slow");
                                        }
                                    });
                                    $("body").delegate(".modalClick", "click", function (e) {
                                        $('#modelWindow').html('');
                                        e.preventDefault();

                                        var link;
                                        var clickedId = $(this).attr("id");
                                        var frameTitle = $(this).attr("frameTitle");
                                        if ($(this).hasClass("details") == true) {
                                            link = "@Url.Action("DealerDetails", "Dealer", new { id = -1 })";
                                            link = link.replace("-1", clickedId);
                                        }
                                        else if ($(this).hasClass("edit")) {
                                            link = "@Url.Action("DealerUpdate", "Dealer", new { id = -1 })";
                                            link = link.replace("-1", clickedId);
                                        }
                                        else if ($(this).hasClass("createNew")) {
                                            link = "@Url.Action("DealerCreate", "Dealer")";
                                        }
                                        $("#modelWindow_wnd_title").html(frameTitle);

                                        var windowWidget = $("#modelWindow").data("kendoWindow");
                                        var closeOrigin = windowWidget.close;

                                        windowWidget.refresh({
                                            url: link
                                        }).center();
                                        windowWidget.center();
                                        windowWidget.open();

                                    });
                        }
                        function ShowTabs(id) {
                            DealerId = id;
                            $('#TabContent').html('');
                            $("#Tabs").data("kendoTabStrip").select(0);
                            $('#divDetails').show();
                            LoadTabContent('@Url.Action("DealerVehicleGroups", "Dealer")');
                                }
                                function LoadTabContent(url) {
                                    $('#TabContent').html('');
                                    $.ajax({
                                        type: "GET",
                                        url: url + '/' + DealerId,
                                        data: {},
                                        contentType: 'application/json; charset=utf-8',
                                        success: function (result) {
                                            $('#TabContent').html(result);
                                        },
                                        error: function (request, status, err) {
                                            //////console.log(arguments);
                                            alert(status);
                                            alert(err);
                                        },
                                        dataType: "html"
                                    });
                                }

                                function DeleteDealer(id) {
                                    var token = $('input[name="__RequestVerificationToken"]').val();

                                    DeleteConfirm(function () {
                                        $.ajax({
                                            type: "POST",
                                            url: "@Url.Action("DealerDelete", "Dealer")",
                                            data: { id: id, "__RequestVerificationToken": token  },
                                            traditional: true,
                                            success: function (result) {
                                                if (result.Status == 0)
                                                    SetErrorMessage(result.Message);
                                                else {
                                                    var grid = $('#grid').data('kendoGrid');
                                                    grid.dataSource.read();
                                                    SetSuccessMessage(result.Message);
                                                }
                                            },
                                            dataType: "json"
                                        });
                                    });
                                }
                            </script>
                        }
                        @*scripts end*@

