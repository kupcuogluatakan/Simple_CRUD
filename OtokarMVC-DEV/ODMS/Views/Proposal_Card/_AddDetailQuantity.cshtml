@{
    Layout = null;
}
@using ODMSCommon.Resources
@model ODMSModel.ProposalCard.ProposalQuantityDataModel
<style type="text/css">
    #quantityWrap {
        margin-top: 20px;
    }
</style>
<div id="warning-wrap" class="alert alert-warning" style="display:@(Model == null || Model.LabourDealerDurationCheck==false?Html.Raw("block"):Html.Raw("none"))">
    <strong>
        @if (Model == null)
        {
            @MessageResource.Error_DB_NoRecordFound
        }
        else if (Model.LabourDealerDurationCheck == false)
        {
            @MessageResource.WorkOrderCard_Display_DurationChangeIsNotAllowedMessage
        }
    </strong>
</div>
@if (Model != null)
{
    @Html.HiddenFor(c => c.ProposalId)
    @Html.HiddenFor(c => c.Type)
    @Html.HiddenFor(c => c.ProposalDetailId)
    @Html.HiddenFor(c => c.ItemId)
    <div id="quantityWrap">
        <div class="labelDiv">
            @(Model.Type == "PART" ? MessageResource.SparePart_Display_PartName : MessageResource.LabourDuration_Display_Labour)
        </div>  <div class="shortTxtDiv">@Model.Name</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">
            @(Model.Type == "PART" ? MessageResource.SparePart_Display_PartCode : MessageResource.CampaignLabour_Display_LabourCode)
        </div>  <div class="shortTxtDiv">@Model.Code</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">
            @(Model.Type == "PART" ? MessageResource.AppointDetailsParts_Display_Quantity : MessageResource.CampaignLabour_Display_Quantity)
        </div>


        @using (Html.BeginForm("UpdateQuantity", "Proposal_Card", FormMethod.Post, new { id = "QuantityForm" }))
        {

            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(c => c.Quantity).Max(Model.Type == "LABOUR" ? 99 : 999).Decimals(2).Spinners(false).HtmlAttributes(new { type = "text", style = "width:205px;" })
            </div>
            if (Model.LabourDealerDurationCheck && Model.Type == "LABOUR")
            {
                <div class="clearDiv">&nbsp;</div>
                <div class="labelDiv">@MessageResource.LabourDuration_Display_Labour</div>
                <div class="shortTxtDiv">
                    @Html.Kendo().NumericTextBoxFor(c => c.Duration).Max(9999).Decimals(0).Format("{0:N0}").Spinners(false).HtmlAttributes(new { type = "text", style = "width:205px;" })
                </div>

            }
        }

        <div class="clearfix"></div>
        <div class="text-left" style=" margin-top:10px">
            @ODMSHelpers.Button("Update", CommonUtility.GetResourceValue("Global_Display_Update"), CommonValues.PermissionCodes.ProposalCard.ProposalCardUpdate, "ProposalCardUpdate", "UpdateQuantity();")
        </div>
    </div>
}



<script type="text/javascript">
    function UpdateQuantity() {
        var formValues = $("#QuantityForm").serializeObject();
        $.extend(formValues, GetAdditionalValues());
        mvc.build("@Url.Action("UpdateQuantity", "Proposal_Card")", null, null, formValues, true, "json");
        mvc.post(null, function (json) {

            if (json.Result == false) {
                $("#warning-wrap").removeClass("alert-success").removeClass("alert-warning").addClass("alert-danger");
                $("#warning-wrap  strong").html(json.Message);
            } else {
                $("#warning-wrap").removeClass("alert-warning").removeClass("alert-danger").addClass("alert-success");
                $("#warning-wrap  strong").html(json.Message);
            }
            $("#warning-wrap").fadeIn();
            setTimeout(function () { $("#warning-wrap").fadeOut(1000); }, 3000);
        }, null);
    }
    function GetAdditionalValues() {
        return {
            ProposalId: $('#ProposalId').val(),
            Type: $('#Type').val(),
            ProposalDetailId: $('#ProposalDetailId').val(),
            ItemId: $('#ItemId').val()
        };
    }


    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name].push(this.value || '');
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };

</script>