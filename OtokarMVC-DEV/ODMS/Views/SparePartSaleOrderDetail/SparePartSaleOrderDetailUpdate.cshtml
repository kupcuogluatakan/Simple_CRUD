@using ODMSCommon.Resources

@model ODMSModel.SparePartSaleOrderDetail.SparePartSaleOrderDetailDetailModel
@{
    ViewBag.Title = MessageResource.SparePartSaleOrderDetail_PageTitle_Update;
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
}
<link href="~/Style/bootstrap.css" rel="stylesheet" />
<script>
    $('body').css('overflow', 'hidden');
</script>
@using (Html.BeginForm("SparePartSaleOrderDetailUpdate", "SparePartSaleOrderDetail", FormMethod.Post))
{
    <div class="labelDiv">@Html.LabelFor(d => d.SparePartName)</div>
    <div class="shortTxtDiv">@Html.DisplayFor(d => d.SparePartName)</div>
    
    <div class="labelDiv">@Html.LabelFor(d => d.OrderQuantity)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.OrderQuantity).Enable(Model.PoDetailSequenceNo == null || Model.PoDetailSequenceNo == "").Events(ev => ev.Change(@"function(e){OrderPriceChanged();}")).Spinners(false).Decimals(2).HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px" })
                @Html.ValidationMessageFor(v => v.OrderQuantity)
            </div>
            <div class="labelDiv">@Html.LabelFor(d => d.PlannedQuantity)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.PlannedQuantity).Enable(false).Spinners(false).Decimals(2).HtmlAttributes(new { type = "text", maxlength = "6", data_val_min = "0", data_val_max = "1000", style = "width:202px"})
                @Html.ValidationMessageFor(v => v.PlannedQuantity)
            </div>

            <div class="clearDiv">&nbsp;</div>

            <div class="labelDiv">@Html.LabelFor(d => d.ShippedQuantity)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.ShippedQuantity).Enable(false).Spinners(false).Decimals(2).HtmlAttributes(new { type = "text", maxlength = "6", data_val_min = "0", data_val_max = "1000", style = "width:202px" })
                @Html.ValidationMessageFor(v => v.ShippedQuantity)
            </div>

            <div class="labelDiv">@Html.LabelFor(d => d.ListPrice)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.ListPrice).Enable(false).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px"})
                @Html.ValidationMessageFor(v => v.ListPrice)
            </div>

            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(d => d.ListDiscountRatio)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.ListDiscountRatio).Enable(false).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "6", data_val_min = "0", data_val_max = "1000", style = "width:202px" })
                @Html.ValidationMessageFor(v => v.ListDiscountRatio)
            </div>
            
            <div class="labelDiv">@Html.LabelFor(d => d.OrderPrice)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.OrderPrice).Enable(!(Model.PoDetailSequenceNo != null && Model.MasterIsPriceFixed.GetValue<bool>())).Events(ev => ev.Change(@"function(e){OrderPriceChanged();}")).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px" })

                @Html.ValidationMessageFor(v => v.OrderPrice)
            </div>

            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(d => d.AppliedDiscountRatio)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.AppliedDiscountRatio).Events(ev => ev.Change(@"function(e){DiscountRatioChanged();}")).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "6", data_val_min = "0", data_val_max = "1000", style = "width:202px"})
                @Html.ValidationMessageFor(v => v.AppliedDiscountRatio)
            </div>

            <div class="labelDiv">@Html.LabelFor(d => d.ConfirmPrice)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.ConfirmPrice).Enable(false).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px"})
                @Html.ValidationMessageFor(v => v.ConfirmPrice)
            </div>
            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(d => d.SpecialExplanation)</div>
            <div class="shortTxtDiv">
                @Html.TextAreaFor(v => v.SpecialExplanation, new { style = "width: 450px; height: 150px" })
                @Html.ValidationMessageFor(v => v.SpecialExplanation)
            </div>
            <div class="clearDiv">&nbsp;</div>

    @Html.HiddenFor(d => d.SparePartSaleOrderDetailId)
    @Html.HiddenFor(d => d.SoNumber)
    @Html.HiddenFor(d => d.SparePartId)
    @Html.HiddenFor(d => d.SparePartName)
    @Html.HiddenFor(d => d.StatusId)
    @Html.HiddenFor(d => d.ListPrice)

    if ((Model.PoDetailSequenceNo == null || Model.PoDetailSequenceNo == "") && Model.OrderQuantity != 0 && Model.StatusId == 0 && (Model.MasterStatusId == 0 || Model.MasterStatusId == 2 || Model.MasterStatusId == 3))
     {
         @ODMSHelpers.Button("Update", MessageResource.Global_Display_Update, CommonValues.PermissionCodes.SparePartSaleOrderDetail.SparePartSaleOrderDetailUpdate, "SparePartSaleOrderDetailUpdate")
     }
}

<script type="text/javascript">
    function OrderQuantityChanged() {
        var plannedQuantity = $("#PlannedQuantity").val().replace(',', '.');
        var orderQuantity = $("#OrderQuantity").val().replace(',', '.');

        if (parseFloat(orderQuantity) < parseFloat(plannedQuantity)) {
            document.getElementById("orderQuantity").style.backgroundColor = "red";
            SetErrorMessage(@MessageResource.SparePartSaleOrderDetail_Warning_PlannedQtyOrderQtyControl);
        } else {
            document.getElementById("orderQuantity").style.backgroundColor = "white";
        }
        
    }
    function OrderPriceChanged() {

        var orderPrice = $("#OrderPrice").val().replace(',', '.');
        var listPrice = $("#ListPrice").val().replace(',', '.');

        if (parseFloat(listPrice) < parseFloat(orderPrice)) {
            document.getElementById("OrderPrice").style.backgroundColor = "red";
            SetErrorMessage(@MessageResource.SparePartSaleOrderDetail_Warning_OrderPriceListPriceControl);
        } else {
            document.getElementById("OrderPrice").style.backgroundColor = "white";

            var discountRatio =  ((parseFloat(listPrice) - parseFloat(orderPrice)) * 100) / parseFloat(listPrice);
            $("#ListDiscountRatio").kendoNumericTextBox({
                value: discountRatio,
                spinners: false,
                format: "#.00 "
            });
        }
        $("#ConfirmPrice").kendoNumericTextBox({
            value:orderPrice,
            spinners: false,
            enable: false,
            format: "#.00 " + currencyCode
        });
    }
    function AppliedDiscountRatioChanged() {
        
        var discountRatio = $("#AppliedDiscountRatio").val().replace(',', '.');
        var listPrice = $("#ListPrice").val().replace(',', '.');

        var orderPrice =  parseFloat(listPrice) * ((100 - parseFloat(discountRatio)) / 100);
        $("#OrderPrice").kendoNumericTextBox({
            value: orderPrice,
            spinners: false,
            format: "#.00 " + currencyCode
        });
        $("#ConfirmPrice").kendoNumericTextBox({
            value:orderPrice,
            spinners: false,
            enable: false,
            format: "#.00 " + currencyCode
        });
    }
</script>
