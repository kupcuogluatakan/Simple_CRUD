@using ODMSCommon.Resources

@model ODMSModel.Warehouse.WarehouseIndexModel
@{
    ViewBag.Title = @MessageResource.Warehouse_PageTitle_Index;
}
@Html.AntiForgeryToken()
<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.Label(@MessageResource.Warehouse_Display_DealerList)</div>
        <div class="shortTxtDiv">
            @Html.Kendo().ComboBoxFor(v => v.DealerId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.DealerList as List<SelectListItem>).Events(e => e.DataBound("DealersDataBound")).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))
        </div>
        <div class="labelDiv">@Html.LabelFor(w => w.Code)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(w => w.Code) </div>
        <div class="clearDiv">&nbsp;</div>

        <div id="tagIsActiveDiv" class="labelDiv">@Html.LabelFor(d => d.IsActive)</div>
        <div id="cmbIsActiveDiv" class="shortTxtDiv" style="width: 20px">
            @(Html.Kendo().ComboBoxFor(v => v.IsActive)
                .Name("cmbIsActive")
                .DataTextField("Text")
                .DataValueField("Value")
                .BindTo(Model.IsActiveOptions)
                .Placeholder(MessageResource.Global_Display_Choose))
        </div>

    </div>
</div>

@ODMSHelpers.LinkButton("btnSearch", MessageResource.Global_Display_Search, "", "", "", CommonValues.PermissionCodes.Warehouse.WarehouseIndex)
@ODMSHelpers.LinkButton("btnCreate", MessageResource.Global_Display_New, "Create", "modalClick createNew", MessageResource.Warehouse_PageTitle_Create, CommonValues.PermissionCodes.Warehouse.WarehouseCreate)

<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.Warehouse.WarehouseListModel>()
          .Name("grid")
          .Columns(columns =>
              {
                  columns.Bound(w => w.Id).ClientTemplate("<center><a class='details modalClick' id='#=Id#' frameTitle='" + MessageResource.Warehouse_PageTitle_Details + "' href='/Warehouse/WarehouseDetails/#=Id#'><img class='iconLink' src='" + Url.Content("~/Images/view.png") + "'/></a></center>").Title(MessageResource.Global_Display_View).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Warehouse.WarehouseDetails));
                  columns.Bound(w => w.Id).ClientTemplate("<center><a class='edit modalClick' id='#=Id#' frameTitle='" + MessageResource.Warehouse_PageTitle_Update + "' href='/Warehouse/WarehouseUpdate/#=Id#'><img class='iconLink' src='" + Url.Content("~/Images/edit.png") + "'/></a></center>").Title(MessageResource.Global_Display_Update).Width(70).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Warehouse.WarehouseUpdate));
                  columns.Bound(w => w.Id).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + MessageResource.Warehouse_PageTitle_Delete + "' onclick='DeleteWarehouse(#=Id#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(MessageResource.Global_Display_Delete).Width(70).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Warehouse.WarehouseDelete));
                  columns.Bound(w => w.Code).Sortable(true);
                  columns.Bound(w => w.IsActiveString).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListWarehouses", "Warehouse").Data("Search"))
                                        .Model(model => model.Field(b => b.Id).DefaultValue(-1)))
    )

</div>

<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
        .Name("modelWindow")
        .Title("Warehouse")
        .Draggable()
        .Resizable()
        .Width(600)//(600)//(500)
        .Height(400)//(350)//(250)
        .Scrollable(false)
        .Visible(false)
        .Modal(true)
        .Iframe(true)
        .Events(ev => ev.Close(@"function(e){
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.page(1);
            }"))
    )
</div>

@section Scripts
{
    <script>
        $(function() {
            RegisterEventHandlers();
        });

        function RegisterEventHandlers() {
            $("body").delegate("#showSearch", "click", function(e) {
                var IsVisible = Boolean($(this).hasClass("searchVisible"));

                if (!IsVisible) {
                    $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                    $(this).addClass("searchVisible");
                    $("#searchDiv").show("slow");
                } else {
                    $(this).html('@MessageResource.Global_Display_Search_Criteria');
                    $(this).removeClass("searchVisible");
                    $("#searchDiv").hide("slow");
                }
            });

            $("body").delegate("#btnSearch", "click", function(e) {
                var grid = $('#grid').data('kendoGrid');
                grid.dataSource.page(1);

            });

            $("body").delegate(".modalClick", "click", function (e) {
                $('#modelWindow').html('');
                e.preventDefault();

                var link;
                var clickedId = $(this).attr("id");
                var frameTitle = $(this).attr("frameTitle");

                if ($(this).hasClass("details") == true) {
                    link = "@Url.Action("WarehouseDetails", "Warehouse", new {id = -1})";
                    link = link.replace("-1", clickedId);
                } else if ($(this).hasClass("edit")) {
                    link = "@Url.Action("WarehouseUpdate", "Warehouse", new {id = -1})";
                    link = link.replace("-1", clickedId);
                } else if ($(this).hasClass("createNew")) {
                    link = "@Url.Action("WarehouseCreate", "Warehouse")";
                }

                $("#modelWindow_wnd_title").html(frameTitle);

                var windowWidget = $("#modelWindow").data("kendoWindow");
                var closeOrigin = windowWidget.close;

                windowWidget.refresh({
                    url: link
                }).center();
                windowWidget.center();
                windowWidget.open();
               
            });
        }

        function Search() {
            return {
                Code: $("#Code").val(),
                SearchIsActive: $("#cmbIsActive").val(),
                DealerId: $("#DealerId").val()
            };
        }

        function DealersDataBound() {

            if(@(Model!=null?(Model.DealerId != null ? Model.DealerId.Value : 0):0)>0)
            {
                $("#DealerId").data("kendoComboBox").enable(false);
            }

            //var length = $("#DealerId").data("kendoComboBox").dataSource.data().length;
            //if (length <= 1) {
            //    // eğer bir bayi varsa seç ve combobox'ı disable et. Bayi kullanıcı ise modelde sadece ilgili bayinin bilgisi gelir. Bu durumda combobox'ta sadece o bayinin bilgisi olur
            //    $("#DealerId").data("kendoComboBox").select(0);
            //    $("#DealerId").data("kendoComboBox").enable(false);
            //}
        }

        function DeleteWarehouse(Id) {
            var token = $('input[name="__RequestVerificationToken"]').val();
            
            DeleteConfirm(function () {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("WarehouseDelete","Warehouse")",
                    data: { Id: Id ,"__RequestVerificationToken": token  },
                    traditional: true,
                    success: function (result) {
                        if (result.Status == 0)
                            SetErrorMessage(result.Message);
                        else {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.read();
                            SetSuccessMessage(result.Message);
                        }
                    },
                    dataType: "json"
                });
            });
        }
    </script>
}
