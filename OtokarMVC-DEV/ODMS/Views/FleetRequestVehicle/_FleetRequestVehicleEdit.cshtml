 
<style>
    .k-upload {
        display: inline-block;
    }
</style>
<script src="~/Scripts/odms.objectsearch.js"></script>
@Html.AntiForgeryToken()
@using ODMSCommon.Resources
@model ODMSModel.FleetRequestVehicle.FleetRequestVehicleViewModel
<div class="labelDiv">@Html.LabelFor(c => c.VehicleId)</div>
<div class="shortTxtDivObjectSearch">@Html.Partial("~/Views/ObjectSearch/ObjectSearch.cshtml", new ODMSModel.ObjectSearch.ObjectSearchModel { ObjectSearchType = CommonValues.ObjectSearchType.Vehicle, WindowTitle = MessageResource.ObjectSearch_WindowTitle_Vehicle, ReferenceObjectId = "VehicleId", ReferenceObjectValue = Model != null ? Model.VehicleId : 0, ReferenceObjectText = Model != null ? Model.VehicleName : "", ParentWindowId = "modelWindowMaintLabour", Required = true, SelectCallBackFunction = "GetCustomerInfo", ClearCallBackFunction = null })</div>
<div class="labelDiv">@Html.LabelFor(c => c.CustomerId)</div>
<div class="shortTxtDivObjectSearch">@Html.Partial("~/Views/ObjectSearch/ObjectSearch.cshtml", new ODMSModel.ObjectSearch.ObjectSearchModel { ObjectSearchType = CommonValues.ObjectSearchType.Customer, WindowTitle = MessageResource.ObjectSearch_WindowTitle_Customer, ReferenceObjectId = "CustomerId", ReferenceObjectValue = Model != null ? Model.CustomerId : 0, ReferenceObjectText = Model != null ? Model.CustomerName : "", ParentWindowId = "modelWindowMaintLabour", Required = false, SelectCallBackFunction = null, ClearCallBackFunction = null })</div>
<div class="clearfix"></div>
<div class="labelDiv">@Html.LabelFor(c => c.DocumentName)</div>
<div style="float: left; width: 500px;">@Html.Kendo().Upload().Multiple(false).Name("Document").Async(c => c.AutoUpload(false)).Messages(c => c.Select(MessageResource.Global_Display_Select)).HtmlAttributes(new { style = "display:inline-block;" }) @Html.ValidationMessageFor(c => c.Document)</div>
<div class="clearfix"></div>
@Html.HiddenFor(c => c.VehicleName)
@Html.HiddenFor(c => c.CustomerName)
<script type="text/javascript">
    $(document).ready(function () {
        $('form').each(function () {
            var validator = $(this).data('validator');
            if (validator && validator.settings) {
                validator.settings.ignore = "";
            }
        });
    });

    function GetCustomerInfo() {
        $("#VehicleIdTextContainer").val($("#VehicleIdTextContainer").val().replace(" - ", ""));
        $("#CustomerId").val('');
        mvc.build('@Url.Action("GetWorkOrderData", "WorkOrder")', null, null, { id: $('#VehicleId').val(), type: 'Vehicle' }, false, "json");
        mvc.post(null, function (json) {
            $('#CustomerId').val(json.CustomerId)
            $("#CustomerIdTextContainer").val(json.CustomerName + ' ' + json.CustomerSurName)
        }, null);
    }
</script>
