@using ODMSCommon.Resources
@model ODMSModel.ClaimSupplierPart.ClaimSupplierPartListModel

<br />

@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClickClaimSupplierPart createNewClaimSupplierPart", CommonUtility.GetResourceValue("ClaimSupplierPart_PageTitle_Create"), CommonValues.PermissionCodes.ClaimSupplierPart.ClaimSupplierPartIndex)
<div class="kendoGridDiv" id="grdClaimSupplierPartGrid">
    @(Html.Kendo().Grid<ODMSModel.ClaimSupplierPart.ClaimSupplierPartListModel>()
          .Name("ClaimSupplierPartGrid")

          .Columns(columns =>
          {
              columns.Bound(b => b.PartId).ClientTemplate("<center><a class='edit modalClickClaimSupplierPart' data-suppliercode='#=SupplierCode#' data-partid='#=PartId#'  frameTitle='" + MessageResource.ClaimSupplierPart_PageTitle_Update + "' href='/ClaimSupplierPart/ClaimSupplierPartUpdate'><img class='iconLink' src='" + Url.Content("~/Images/edit.png") + "'/></a></center>").Title(MessageResource.Global_Display_Update).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.ClaimSupplierPart.ClaimSupplierPartUpdate));
              columns.Bound(b => b.PartId).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + MessageResource.ClaimRecallPeriodPart_PageTitle_Delete + "' onclick='DeleteClaimSupplierPart(#=PartId#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(MessageResource.Global_Display_Delete).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.ClaimSupplierPart.ClaimSupplierPartDelete));
              columns.Bound(p => p.PartCode).Width(100).Sortable(true);
              columns.Bound(p => p.PartName).Width(100).Sortable(true);
              columns.Bound(p => p.SupplierCode).Width(100).Sortable(true);
              columns.Bound(p => p.SupplierName).Width(100).Sortable(true);
              columns.Bound(p => p.IsActiveName).Width(100).Sortable(true);
              columns.Bound(p => p.CreateDate).Width(100).Format("{0:dd/MM/yyyy hh:mm:ss}").Sortable(true);
          })
          .Pageable()
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListClaimSupplierPart", "ClaimSupplierPart", Model))
                                        .Model(model => model.Field(o => o.ClaimRecallPeriodId).DefaultValue(-1)))

    )
</div>

@Html.HiddenFor(v => v.SupplierCode)


<div id="excelVisibilitySupplier">
    <h4>@Html.Raw(MessageResource.Global_Display_UploadFromExcel) </h4>
    <div class="labelDiv" style="width: 80px">@MessageResource.Global_Display_SampleFile </div>
    <div>
        <a class="k-link2" href="@Url.Action("ExcelSample")">
            <img class=iconLink src='@Url.Content("~/Images/excelSample.png")' title='@MessageResource.Global_Display_SampleFile'>
        </a>
        <br />
        @using (Html.BeginForm("ClaimSupplierPartIndex", "ClaimSupplierPart", FormMethod.Post))
        {
            @Html.HiddenFor(v => v.ClaimRecallPeriodId)
            @Html.Kendo().Upload().Name("supplierExcelFile").TemplateId("fileTemplate").Events(e => e.Select("onSelect")).Multiple(false).Messages(m => m.Select(MessageResource.Global_Display_SelectFile))
            <div id="divExcepUpload">
                @ODMSHelpers.Button("Upload", CommonUtility.GetResourceValue("Global_Display_UploadFromExcel"), "", "UploadExcel")
            </div>
        }
    </div>
</div>

<br />
<div id="ClaimSupplierModelWindow">
    @(Html.Kendo().Window()
                .Name("modelWindow2")
     .Draggable()
    .Resizable()
    .Width(500)//.Width(950)
    .Height(250)//.Height(440)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#ClaimSupplierPartGrid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
    )
</div>
<script>
    $(document).ready(function () {
       
        $("body").delegate(".modalClickClaimSupplierPart", "click", function (e) {
            $('#modelWindow2').html('');
            e.preventDefault();

            var link = $(this).attr("href");
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
             if ($(this).hasClass("createNewClaimSupplierPart")) {
                link = "@Url.Action("ClaimSupplierPartCreate", "ClaimSupplierPart", new { supplierCode = Model.SupplierCode })";
             }
           
            else if($(this).hasClass("edit"))    {
                link = "@Url.Action("ClaimSupplierPartUpdate", "ClaimSupplierPart", new { supplierCode = Model.SupplierCode })";
                link += '&partId=' + $(this).data('partid');
            }
            $("#modelWindow2_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindow2").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();

        });

    });
    function DeleteClaimSupplierPart (partId) {
   
        DeleteConfirm(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteClaimSupplierPart","ClaimSupplierPart")",
                data: { SupplierCode: '@Model.SupplierCode', PartId:partId },
            traditional: true,
            success: function (result) {
                if (result.Status == 0)
                    SetErrorMessage(result.Message);
                else {
                    var grid = $('#ClaimSupplierPartGrid').data('kendoGrid');
                    grid.dataSource.read();
                    SetSuccessMessage(result.Message);
                }
            },
            dataType: "json"
        });
    });
    }
</script>
