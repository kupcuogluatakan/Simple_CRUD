@using ODMS.Security
@using ODMS.Security.PasswordPolicyRules
@using ODMSCommon.Resources
@model ODMSModel.User.UserIndexViewModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("User_PageTitle_ChangePassword");
    var manager = ViewBag.PasswordValidationRules as PasswordPolicyManager;
    int counter = 0;
}
@*<link href="~/Style/Content.css" rel="stylesheet" />*@
<div class="panel-group" id="accordion" style="margin-bottom: 5px;">
    <div class="panel panel-default">
        <div class="panel-heading">
            @if (!Model.IsPartial)
            {
                <strong style="font-size: 16px;">
                    <h4 style="color: red">@CommonUtility.GetResourceValue("User_Display_MustChangePassword")</h4>
                </strong>
            }
        </div>
        <div class="panel-body">
            <table class="table table-bordered table-zipped">
                <tbody>
                    @foreach (var rule in manager.PasswordRuleValidators)
                    {
                        <tr>
                            @if (rule is AllowSpecialCharRule)
                            {
                                <th class="col-md-1 teksatir t-customhead"><i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_AllowSpecialCharRule)</th>
                                <td class="col-md-3">@Html.Raw(((rule as AllowSpecialCharRule).AllowSpecialChars) ? MessageResource.Global_Display_Yes : MessageResource.Global_Display_No) </td>
                            }
                            @if (rule is AlphaNumericCharCountRule)
                            {
                                <th class="col-md-1 teksatir t-customhead">
                                    <i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_AlphaNumericCharCountRule)
                                </th>
                                <td class="col-md-3">@((rule as AlphaNumericCharCountRule).MinLength)</td>
                            }
                            @if (rule is NumericCharCountRule)
                            {
                                <th class="col-md-1 teksatir t-customhead">
                                    <i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_NumericCharCountRule)
                                </th>
                                <td class="col-md-3">@((rule as NumericCharCountRule).MinNumericCharCount)</td>
                            }
                            @if (rule is PasswordLengthRule)
                            {
                                <th class="col-md-1 teksatir t-customhead">
                                    <i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_PasswordLengthRule)
                                </th>
                                <td class="col-md-3">@((rule as PasswordLengthRule).PasswordMinLength)</td>
                            }
                            @if (rule is PasswordChangeDayCountRule)
                            {
                                <th class="col-md-1 teksatir t-customhead">
                                    <i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_PasswordChangeDayCountRule)
                                </th>
                                <td class="col-md-3">@((rule as PasswordChangeDayCountRule).Day)</td>
                            }
                            @if (rule is UpperCharCountRule)
                            {
                                <th class="col-md-1 teksatir t-customhead">
                                    <i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_MinUpperCharCount)
                                </th>
                                <td class="col-md-3">
                                    @((rule as UpperCharCountRule).MinUpperCharCount)
                                </td>
                            }
                            @if (rule is WrongPasswordCountRule)
                            {
                                <th class="col-md-1 teksatir t-customhead">
                                    <i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_WrongPasswordCountRule)
                                </th>
                                <td class="col-md-3">@((rule as WrongPasswordCountRule).AllowedWrongPasswordInputCount)</td>
                            }
                            @if (rule is OldPasswordCheckRule)
                            {
                                <th class="col-md-1 teksatir t-customhead">
                                    <i class="fa fa-caret-right"></i>@Html.Label(MessageResource.PasswordPolicy_Display_OldPasswordCheckRule)
                                </th>
                                <td class="col-md-3">
                                    @((rule as OldPasswordCheckRule).SearchCount)
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
            <br />
            @using (Html.BeginForm("UserChangePassword", "User", FormMethod.Post))
            {
                <div class="labelDiv">@Html.LabelFor(v => v.UserCode)</div>
                <div class="shortTxtDiv">@Html.DisplayFor(v => v.UserCode)</div>
                <div class="labelDiv">@Html.LabelFor(v => v.IsActive)</div>
                <div class="shortTxtDiv">@Html.DisplayFor(v => v.IsActiveName) </div>
                <div class="clearDiv">&nbsp;</div>
                <div class="labelDiv">@Html.LabelFor(v => v.UserFirstName)</div>
                <div class="shortTxtDiv">@Html.DisplayFor(v => v.UserFirstName) </div>
                <div class="labelDiv">@Html.LabelFor(v => v.UserLastName)</div>
                <div class="shortTxtDiv">@Html.DisplayFor(v => v.UserLastName) </div>
                <div class="clearDiv">&nbsp;</div>
                <div class="labelDiv">@Html.LabelFor(v => v.Password)</div>
                <div class="shortTxtDiv">@Html.PasswordFor(v => v.Password) @Html.ValidationMessageFor(c => c.Password)</div>
                <div class="clearDiv">&nbsp;</div>

                @Html.HiddenFor(v => v.UserId)
                @Html.HiddenFor(v => v.IsPartial)
            }
        </div>
    </div>
</div>
<br/>
@ODMSHelpers.Button("Update", CommonUtility.GetResourceValue("Global_Display_Update"), "", "UserChangePassword", "", false)
<div id="modelWindowConfirmDiv">
    @(Html.Kendo().Window()
        .Name("modelWindowConfirm")
     .Draggable()
    .Resizable()
    .Width(450)
    .Height(250)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
    }"))
    )
</div>
<script type="text/javascript">
        function SetTCIdentityConfirmationResult(isConfirmed) {
            var token = $('input[name="__RequestVerificationToken"]').val();
            $("#modelWindowConfirm").data("kendoWindow").close();
            if (isConfirmed) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("UserChangePassword", "User")",
                    data: { userId: @Model.UserId, password: $('#Password').val(), isPartial: $('#IsPartial').val(), "__RequestVerificationToken": token },
                    traditional: true,
                    success: function(result) {
                        if (result.Status == 0)
                            SetErrorMessage(result.Message);
                        else {
                            SetSuccessMessage(result.Message);
                            var control = $('#IsPartial').val();
                            $('#Password').val('');
                            if (control == 'False')
                                window.location.href = '@Url.Action("Index", "Home")';
                        }
                    },
                    dataType: "json"
                });
            } else {
                SetErrorMessage('@MessageResource.UserChangePassword_Warning_TCIdentityControl');
            }
        }

        function OpenTCIdentityPassportNoConfirmPopup() {
            $('#modelWindowConfirm').html('');

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = '@MessageResource.TCIdentityConfirm_PageTitle_Index';

            link = "@Url.Action("UserTCIdentityConfirm", "User", new { userId = -1, index = 3 })";
            link = link.replace("-1", '@Model.UserId');
            $("#modelWindowConfirm_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindowConfirm").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
        }


        $(document).ready(function() {
            var token = $('input[name="__RequestVerificationToken"]').val();
            $('#Update').click(function() {
                var control = $('#IsPartial').val();

                if (control == 'False') {
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UserChangePassword", "User")",
                        data: { userId: @Model.UserId, password: $('#Password').val(), isPartial: $('#IsPartial').val(), "__RequestVerificationToken": token },
                        traditional: true,
                        success: function(result) {
                            if (result.Status == 0)
                                SetErrorMessage(result.Message);
                            else {
                                SetSuccessMessage(result.Message);

                                $('#Password').val('');
                                if (control == 'False')
                                    window.location.href = '@Url.Action("Index", "Home")';
                            }
                        },
                        dataType: "json"
                    });
                }
                else
                {
                    OpenTCIdentityPassportNoConfirmPopup();
                }
            });
            $('form').each(function() {
                var validator = $(this).data('validator');
                if (validator && validator.settings) {
                    validator.settings.ignore = "";
                }
            });
        });
</script>
