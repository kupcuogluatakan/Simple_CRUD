@model ODMSModel.CycleCountPlan.CycleCountPlanListModel
@if (ViewBag.CycleCountStatus == (int) ODMSCommon.CommonValues.CycleCountStatus.Planning)
{
    @ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("CycleCountPlan_Display_Create"), "Create", "modalClickCycleCountPlan createNewCycleCountPlan", CommonUtility.GetResourceValue("CycleCountPlan_PageTitle_Create"), CommonValues.PermissionCodes.CycleCountPlan.CycleCountPlanCreate)
}
<br />
@Html.AntiForgeryToken()
<div id="CycleCountPlanModelWindowDiv">
    @(Html.Kendo().Window()
        .Name("CycleCountPlanModelWindow")
     .Draggable()
    .Resizable()
    .Width(950)
    .Height(350)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#CycleCountPlanGrid').data('kendoGrid');
        grid.dataSource.read();
    }"))
    )
</div>
<script>
    $(document).ready(function () {

        $("body").delegate(".modalClickCycleCountPlan", "click", function (e) {
            $('#CycleCountPlanModelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("createNewCycleCountPlan")) {
                link = "@Url.Action("CycleCountPlanCreate", "CycleCountPlan", new { cycleCountId = Model.CycleCountId})";
            }
            $("#CycleCountPlanModelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#CycleCountPlanModelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
            
        });

    });
    function DeleteCycleCountPlan(ccpId) {
        var token = $('input[name="__RequestVerificationToken"]').val();
        
    DeleteConfirm(function () {
        $.ajax({
            type: "POST",
            url: "@Url.Action("DeleteCycleCountPlan", "CycleCountPlan")",
            data: { cycleCountPlanId: ccpId, "__RequestVerificationToken": token },
            traditional: true,
            success: function (result) {
                if (result.Status == 0)
                    SetErrorMessage(result.Message);
                else {
                    var grid = $('#CycleCountPlanGrid').data('kendoGrid');
                    grid.dataSource.read();
                    SetSuccessMessage(result.Message);
                }
            },
            dataType: "json"
        });
    });
    }

    function CycleCountSearch() {
        return {
            CycleCountId: "@Model.CycleCountId"
        };
    }
</script>
    @Html.ExportExcelButton(new ExcelExportDto("CycleCountPlan", "ListCycleCountPlan", "CycleCountSearch","sdfsdf","CycleCountPlan").Build<ODMSModel.CycleCountPlan.CycleCountPlanListModel, object>(
    c => c.WarehouseName, c => c.RackName, c => c.StockCardName))        

<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.CycleCountPlan.CycleCountPlanListModel>()
          .Name("CycleCountPlanGrid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.CycleCountPlanId).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + CommonUtility.GetResourceValue("CycleCountPlan_PageTitle_Delete") + "' onclick='DeleteCycleCountPlan(#=CycleCountPlanId#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.CycleCountPlan.CycleCountPlanDelete)).Visible(ViewBag.CycleCountStatus == (int) ODMSCommon.CommonValues.CycleCountStatus.Planning);
                  columns.Bound(p => p.WarehouseName).Width(100).Sortable(true);
                  columns.Bound(p => p.RackName).Width(100).Sortable(true);
                  columns.Bound(p => p.StockCardName).Width(100).Sortable(true);
              })          
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()                                       
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListCycleCountPlan", "CycleCountPlan", Model))
                                        .Model(model => model.Field(o => o.CycleCountId).DefaultValue(-1)))

          )
</div>
