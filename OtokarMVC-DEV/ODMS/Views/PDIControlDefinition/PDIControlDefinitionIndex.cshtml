@using ODMSCommon.Resources
@using ODMSModel.PDIControlDefinition

@model PDIControlDefinitionListModel

@{
    ViewBag.Title = MessageResource.PDIControlDefinition_PageTitle_Index;
}


@Html.AntiForgeryToken()
<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(v => v.ModelKod)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.ModelKod).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.ModelCodeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) </div>

        <div class="labelDiv">@Html.LabelFor(v => v.PDIControlCode)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.PDIControlCode,new {@onkeyup="InputToUpper(this);"})</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.IsActiveName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.IsActive).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.ActiveList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) </div>
        <div class="labelDiv">@Html.LabelFor(v => v.IsGroupCodeName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.IsGroupCode).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.ActiveYesNoList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) </div>

    </div>
</div>

@Html.HiddenFor(v => v.IdPDIControlDefinition)
@ODMSHelpers.LinkButton("btnSearch", MessageResource.Global_Display_Search, "", "", "", CommonValues.PermissionCodes.PDIControlDefinition.PDIControlDefinitionIndex)
@ODMSHelpers.LinkButton("btnCreate", MessageResource.Global_Display_New, "Create", "modalClick createNew", MessageResource.PDIControlDefinition_PageTitle_Create, CommonValues.PermissionCodes.PDIControlDefinition.PDIControlDefinitionCreate)
@Html.Partial("_ExcelExport",new ODMS.Model.ExportModel())

<br />
<div id="PDIControlDefinitionModelWindowDiv">
    @(Html.Kendo().Window()
        .Name("PDIControlDefinitionModelWindow")
     .Draggable()
    .Resizable()
    .Width(950)//.Width(950)
    .Height(350)//.Height(440)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#PDIControlDefinitionGrid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
    )
</div>
<script src="~/Scripts/custom.js"></script>
<script id="update-confirmation" type="text/x-kendo-template">
    <p class="update-message">@MessageResource.PDIControlDefinition_Warning_PartMatchExist</p>
    <p style="text-align:right">
        <button class="update-confirm k-button">@MessageResource.Global_Display_Yes</button>
        <button class="update-cancel k-button">@MessageResource.Global_Display_No</button>
    </p>
</script>
<script src="~/Scripts/jquery.maskedinput.js"></script>
<script type="text/javascript">
    function Delete(aId) {
        DeleteConfirm(function () {
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                type: "POST",
                url: "@Url.Action("DeletePDIControlDefinition", "PDIControlDefinition")",
                data: { id: aId, "__RequestVerificationToken": token },
                traditional: true,
                success: function (result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#PDIControlDefinitionGrid').data('kendoGrid');
                        grid.dataSource.page(1);
                        SetSuccessMessage(result.Message);
                    }
                },
                dataType: "json"
            });
        });
    }
    function UpdateConfirm(updateFunction) {
        var confirm = false;
        var kendoWindow = $("<div />").kendoWindow({
            title: "@MessageResource.Global_Display_Warning",
            resizable: false,
            modal: true
        });

        kendoWindow.data("kendoWindow")
            .content($("#update-confirmation").html())
            .center().open();

        kendoWindow
            .find(".update-confirm,.update-cancel")
            .click(function () {
                if ($(this).hasClass("update-confirm")) {
                    confirm = true;
                    if (updateFunction)
                        updateFunction();
                }
                kendoWindow.data("kendoWindow").close();
            })
            .end();
        return confirm;
    }
    function DeletePDIControlDefinition(aId, hMatch) {
        if (hMatch) {
            UpdateConfirm(function () {
                Delete(aId);
            });
        } else {
            Delete(aId);
        }
    }


    $(document).ready(init);
    function GetParameters() {
        return {
            ReportType: 13,
            Columns: "PDIControlCode,ModelKod,RowNo,IsActiveName,IsGroupCodeName,_PDIControlCode,PDIControlName"
        };
    }
    function init() {

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#PDIControlDefinitionGrid').data('kendoGrid');
            grid.dataSource.page(1);

        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html("@MessageResource.Global_Display_Search_Criteria");
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });
        $("body").delegate(".modalClick", "click", function (e) {
            $('#PDIControlDefinitionModelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("details") == true) {
                link = "@Url.Action("PDIControlDefinitionDetails", "PDIControlDefinition", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("edit")) {
                link = "@Url.Action("PDIControlDefinitionUpdate", "PDIControlDefinition", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("createNew")) {
                link = "@Url.Action("PDIControlDefinitionCreate", "PDIControlDefinition")";
            }
            $("#PDIControlDefinitionModelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#PDIControlDefinitionModelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();

        });
    }

</script>

<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.PDIControlDefinition.PDIControlDefinitionListModel>()
          .Name("PDIControlDefinitionGrid")

          .Columns(columns =>
              {
                  columns.Bound(p => p.IdPDIControlDefinition).ClientTemplate("<center><a class='details modalClick' id='#=IdPDIControlDefinition#' frameTitle='" + CommonUtility.GetResourceValue("PDIControlDefinition_PageTitle_Details") + "' href='/PDIControlDefinition/PDIControlDefinitionDetails/#=IdPDIControlDefinition#'><img class=iconLink src='" + @Url.Content("~/Images/view.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(40).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PDIControlDefinition.PDIControlDefinitionDetails));
                  columns.Bound(p => p.IdPDIControlDefinition).ClientTemplate("<center><a class='edit modalClick' id='#=IdPDIControlDefinition#' frameTitle='" + MessageResource.PDIControlDefinition_PageTitle_Update + "' href='/PDIControlDefinition/PDIControlDefinitionUpdate/#=IdPDIControlDefinition#'><img class=iconLink src='" + @Url.Content("~/Images/edit.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(40).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PDIControlDefinition.PDIControlDefinitionUpdate));
                  columns.Bound(o => o.IdPDIControlDefinition).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + MessageResource.PDIControlDefinition_PageTitle_Delete + "' onclick='DeletePDIControlDefinition(#=IdPDIControlDefinition#,#=HasActiveControlPartMatch#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(40).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PDIControlDefinition.PDIControlDefinitionDelete));
                  columns.Bound(p => p.PDIControlCode).Width(50).Sortable(true);
                  columns.Bound(p => p.PDIControlName).Width(180).Sortable(true);
                  columns.Bound(p => p.ModelKod).Width(50).Sortable(true);
                  columns.Bound(p => p.RowNo).Width(50).Sortable(true);
                  columns.Bound(p => p.IsActiveName).Width(50).Sortable(true);
                  columns.Bound(p => p.IsGroupCodeName).Width(50).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListPDIControlDefinition", "PDIControlDefinition", Model).Data("GetParameters"))
                                        .Model(model => model.Field(o => o.IdPDIControlDefinition).DefaultValue(-1)))

    )
</div>
<br />
<div id="excelVisibility">
    <h4>@Html.Raw(MessageResource.Global_Display_UploadFromExcel) </h4>
    <div class="labelDiv" style="width: 80px">@MessageResource.Global_Display_SampleFile </div>
    <div>
        <a class="k-link2" href="@Url.Action("ExcelSample")">
            <img class=iconLink src='@Url.Content("~/Images/excelSample.png")' title='@MessageResource.Global_Display_SampleFile'>
        </a>
        <br />
        @using (Html.BeginForm("PDIControlDefinitionIndex", "PDIControlDefinition", FormMethod.Post))
        {
            @Html.Kendo().Upload().Name("excelFile").Events(e => e.Select("onSelect")).TemplateId("fileTemplate").Multiple(false).Messages(m => m.Select(MessageResource.Global_Display_SelectFile))
            <div id="divExcepUpload">
                @ODMSHelpers.Button("Upload", CommonUtility.GetResourceValue("Global_Display_UploadFromExcel"), "", "UploadExcel")
            </div>
        }
    </div>
</div>
