@model GuaranteeAuthorityLimitationsViewModel
@using ODMSCommon.Resources
@using ODMSModel.GuaranteeAuthorityLimitations
@{
    ViewBag.Title = MessageResource.GuaranteeAuthorityLimitations_PageTitle_Index;
}
@Html.AntiForgeryToken()
@*search start*@
<div id="showSearch">@MessageResource.Global_Display_Search_Criteria</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(c=>c.ModelKod)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c=>c.ModelKod).BindTo(ViewBag.ModelKodList as List<SelectListItem>).DataValueField("Value").DataTextField("Text").Placeholder(MessageResource.Global_Display_All) </div>
        <div class="labelDiv">@Html.LabelFor(c => c.CurrencyCode)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(c=>c.CurrencyCode).BindTo(ViewBag.CurrencyList as List<SelectListItem>).DataTextField("Text").DataValueField("Value").Placeholder(MessageResource.Global_Display_All)  </div>
        <div class="clearDiv">&nbsp;</div>
    </div>
</div>
@*serach end*@
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "",CommonValues.PermissionCodes.GuaranteeAuthorityLimitations.GuaranteeAuthorityLimitationsIndex)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClick createNew", CommonUtility.GetResourceValue("GuaranteeAuthorityLimitations_PageTitle_Create"),CommonValues.PermissionCodes.GuaranteeAuthorityLimitations.GuaranteeAuthorityLimitationsCreate)

@*grid start*@
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<GuaranteeAuthorityLimitationsListModel>()
          .Name("grid")

          .Columns(columns =>
              {

                  columns.Bound(p => p.CurrencyCode).ClientTemplate("<center><a class='edit modalClick' id='#=CurrencyCode#' frameTitle='" + CommonUtility.GetResourceValue("GuaranteeAuthorityLimitations_PageTitle_Update") + "' href='" + Url.Action("GuaranteeAuthorityLimitationsUpdate", "GuaranteeAuthorityLimitations") + "/?currencyCode=#=CurrencyCode#&modelKod=#=ModelKod#'><img class='iconLink' src='" + Url.Content("~/Images/edit.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(60).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.GuaranteeAuthorityLimitations.GuaranteeAuthorityLimitationsUpdate));
                  columns.Bound(o => o.CurrencyCode).ClientTemplate("<center><a  frameTitle='" + CommonUtility.GetResourceValue("GuaranteeAuthorityLimitations_PageTitle_Delete") + "' onclick='DeleteGuaranteeAuthorityLimitations(\"#=CurrencyCode#\",\"#=ModelKod#\");' href='javascript:void(0);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(50).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.GuaranteeAuthorityLimitations.GuaranteeAuthorityLimitationsDelete));
                  columns.Bound(p => p.ModelName).Width(120).Sortable(true);
                  columns.Bound(p => p.CurrencyName).Width(100).Sortable(true);
                  columns.Bound(p => p.Amount).Width(100).Sortable(true);
                  columns.Bound(p => p.CumulativeAmount).Width(100).Sortable(true);
              })
          .Pageable()
          .Sortable()
          .Scrollable()
           

          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListGuaranteeAuthorityLimitations", "GuaranteeAuthorityLimitations").Data("GuaranteeAuthorityLimitationsSearch")))
                                       

          )
</div>
@*grid end*@

@*modelWindow start*@
    <div id="modelWindowDiv">
        @(Html.Kendo().Window()
              .Name("modelWindow")
              .Title("Customer")
              .Draggable()
              .Resizable()
              .Width(950)
              .Height(400)
              .Visible(false)
              .Modal(true)
              .Iframe(true)
              .Events(ev => ev.Close(@"function(e){
         var grid = $('#grid').data('kendoGrid');      
        grid.dataSource.read();
    }"))
              )
    </div>
@*modelWindow end*@

@*scripts start*@
@section Scripts{
    <script type="text/javascript">
        var GroupId = 0;
        function GuaranteeAuthorityLimitationsSearch() {
            return {
                CurrencyCode: $('#CurrencyCode').val(),
                ModelKod: $('#ModelKod').val()
            };
        }
        $(document).ready(init);
        function init() {
            $("body").delegate("#btnSearch", "click", function (e) {
                var grid = $('#grid').data('kendoGrid');
                grid.dataSource.page(1);

            });
            $("body").delegate("#showSearch", "click", function (e) {
                var IsVisible = Boolean($(this).hasClass("searchVisible"));

                if (!IsVisible) {
                    $(this).html('@MessageResource.Global_Display_Hide_Search_Criteria');
                    $(this).addClass("searchVisible");
                    $("#searchDiv").show("slow");
                }
                else {
                    $(this).html("@MessageResource.Global_Display_Search_Criteria");
                    $(this).removeClass("searchVisible");
                    $("#searchDiv").hide("slow");
                }
            });
            $("body").delegate(".modalClick", "click", function (e) {
                $('#modelWindow').html('');
                e.preventDefault();

                var link;
                var clickedId = $(this).attr("id");
                var frameTitle = $(this).attr("frameTitle");
                 if ($(this).hasClass("edit")) {
                     link = $(this).attr("href");
                 }
                else if ($(this).hasClass("createNew")) {
                    link = "@Url.Action("GuaranteeAuthorityLimitationsCreate", "GuaranteeAuthorityLimitations")";
                }
                $("#modelWindow_wnd_title").html(frameTitle);

                var windowWidget = $("#modelWindow").data("kendoWindow");
                var closeOrigin = windowWidget.close;

                windowWidget.refresh({
                    url: link
                }).center();
                windowWidget.center();
                windowWidget.open();
               
            });
        }
    

        function DeleteGuaranteeAuthorityLimitations(currencyCode, modelKod) {
            var token = $('input[name="__RequestVerificationToken"]').val();
            
            DeleteConfirm(function () {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("GuaranteeAuthorityLimitationsDelete","GuaranteeAuthorityLimitations")",
                    data: { currencyCode: currencyCode, modelKod: modelKod, "__RequestVerificationToken": token },
                    traditional: true,
                    success: function (result) {
                        if (result.Status == 0)
                            SetErrorMessage(result.Message);
                        else {
                            var grid = $('#grid').data('kendoGrid');
                            grid.dataSource.read();
                            SetSuccessMessage(result.Message);
                        }
                    },
                    dataType: "json"
                });
            });
        }
    </script>
}
@*scripts end*@
