@using ODMSCommon.Resources
@using ODMSCommon.Security
@using ODMSModel.Customer
@model ODMSModel.Customer.CustomerIndexViewModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("Customer_PageTitle_Index");
}

@Html.AntiForgeryToken()
<div id="showSearch">@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(v => v.CustomerName)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.CustomerName) </div>

        <div class="labelDiv">@Html.LabelFor(v => v.DealerName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.DealerId).Name("ListDealer").DataTextField("Text").DataValueField("Value").BindTo(ViewBag.DealerList as List<SelectListItem>).Placeholder(ODMSCommon.Resources.MessageResource.Global_Display_Choose).Enable(UserManager.UserInfo.GetUserDealerId() == 0)</div>
        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.MobileNo)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.MobileNo)</div>

        <div class="labelDiv">@Html.LabelFor(v => v.CountryName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.CountryId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.CountryList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) </div>

        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.CustomerTypeName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.CustomerTypeId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.CustomerTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")) </div>
        <div class="labelDiv">@Html.LabelFor(v => v.WitholdingStatusName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.WitholdingStatus).DataTextField("Text").DataValueField("Value").BindTo((ViewBag.YesNoList as List<SelectListItem>).OrderByDescending(c => c.Value)).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>

        <div class="clearDiv">&nbsp;</div>

        <div class="labelDiv">@Html.LabelFor(v => v.TcIdentityNo)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.TcIdentityNo)</div>

        <div class="labelDiv">@Html.LabelFor(v => v.TaxNo)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.TaxNo)</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.PassportNo)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.PassportNo)</div>
        <div class="clearDiv">&nbsp;</div>
    </div>
</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.Customer.CustomerIndex)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClickCustomer createNewCustomer", CommonUtility.GetResourceValue("Customer_PageTitle_Create"), CommonValues.PermissionCodes.Customer.CustomerCreate)


@if (ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Customer.CustomerExcelExport))
{
  @Html.Partial("_ExcelExport",new ODMS.Model.ExportModel())
}

<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
          .Name("modelWindow")
          .Draggable()
          .Resizable()
          .Width(950)
          .Height(440)
          .Visible(false)
          .Modal(true)
          .Iframe(true)
          .Events(ev => ev.Close(@"function(e){
         var grid = $('#CustomerGrid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
    )
</div>

<script src="~/Scripts/custom.js"></script>
<script src="~/Scripts/jquery.maskedinput.js"></script>
<script>
    function GetParameters() {
        return {
            CustomerName: $("#CustomerName").val(),
            CustomerLastName: $("#CustomerLastName").val(),
            CustomerTypeId: $("#CustomerTypeId").val(),
            MobileNo: $("#MobileNo").val(),
            TcIdentityNo: $("#TcIdentityNo").val(),
            PassportNo: $("#PassportNo").val(),
            TaxOffice: $("#TaxOffice").val(),
            TaxNo: $("#TaxNo").val(),
            CompanyTypeName: $("#CompanyTypeName").val(),
            GovernmentTypeName: $("#GovernmentTypeName").val(),
            WitholdingStatus: $("#WitholdingStatus").val(),
            IsActive: $("#IsActive").val(),
            ReportType: 25,
            Columns: "CustomerName,CustomerLastName,TcIdentityNo,PassportNo,TaxOffice,TaxNo,CustomerTypeName,CompanyTypeName,GovernmentTypeName,WitholdingStatusName,IsActiveName"
        };
    }
    $(document).ready(function () {
        $("#MobileNo").mask("(999) 999 99 99", { placeholder: "_" });
        $('#divDetails').hide();

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#CustomerGrid').data('kendoGrid');
            grid.dataSource.page(1);
            $('#divDetails').hide();
        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Hide_Search_Criteria")');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });
        $("body").delegate(".modalClickCustomer", "click", function (e) {
            $('#modelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("details") == true) {
                link = "@Url.Action("CustomerDetails", "Customer", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("edit")) {
                link = "@Url.Action("CustomerUpdate", "Customer", new { id = -1 })";
                link = link.replace("-1", clickedId);
            }
            else if ($(this).hasClass("createNewCustomer")) {
                link = "@Url.Action("CustomerCreate", "Customer")";
            }
            $("#modelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();

        });

    });
    function DeleteCustomer(cId) {
        var token = $('input[name="__RequestVerificationToken"]').val();

        DeleteConfirm(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeleteCustomer", "Customer")",
                data: { customerId: cId, "__RequestVerificationToken": token },
                traditional: true,
                success: function (result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#CustomerGrid').data('kendoGrid');
                        grid.dataSource.read();
                        SetSuccessMessage(result.Message);
                    }
                },
                dataType: "json"
            });
        });
    }
    function loadTabs(customerID) {

        var tabStrip = $('#CustomerDetails').kendoTabStrip().data("kendoTabStrip");

        var addressTab = tabStrip.contentElements[0];

        $.ajax({
            type: "GET",
            url: "@Url.Action("CustomerAddressIndex", "CustomerAddress")",
            data: { customerId: customerID },
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $(addressTab).html(result);
                tabStrip.select(tabStrip.tabGroup.children("li").eq(0));
            },
            error: function (request, status, err) {
                //////console.log(arguments);
                alert(status);
                alert(err);
            },
            dataType: "html"
        });

        var contactTab = tabStrip.contentElements[1];
        $.ajax({
            type: "GET",
            url: "@Url.Action("CustomerContactIndex", "CustomerContact")",
            data: { customerId: customerID },
            contentType: 'application/json; charset=utf-8',
            success: function (result) {
                $(contactTab).html(result);
            },
            error: function (request, status, err) {
                //////console.log(arguments);
                alert(status);
                alert(err);
            },
            dataType: "html"
        });
        $('#divDetails').show();
    }
</script>
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.Customer.CustomerListModel>()
          .Name("CustomerGrid")

          .Columns(columns =>
    {
        columns.Bound(p => p.CustomerId).ClientTemplate("<center><a class='loadTab' onclick='loadTabs(#=CustomerId#)' id='#=CustomerId#'><img class=iconLink src='" + Url.Content("~/Images/tabs.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Details")).Width(30).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Customer.CustomerDetails));
        columns.Bound(p => p.CustomerId).ClientTemplate("<center><a class='details modalClickCustomer' id='#=CustomerId#' frameTitle='" + @CommonUtility.GetResourceValue("Customer_PageTitle_Details") + "' href='/Customer/CustomerDetails/#=CustomerId#'><img class=iconLink src='" + Url.Content("~/Images/view.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_View")).Width(30).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Customer.CustomerDetails));
        columns.Bound(p => p.CustomerId).ClientTemplate("<center><a class='edit modalClickCustomer' id='#=CustomerId#' frameTitle='" + @CommonUtility.GetResourceValue("Customer_PageTitle_Update") + "' href='/Customer/CustomerUpdate/#=CustomerId#'><img class=iconLink src='" + Url.Content("~/Images/edit.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Update")).Width(30).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Customer.CustomerUpdate));
        columns.Bound(o => o.CustomerId).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + CommonUtility.GetResourceValue("Customer_PageTitle_Delete") + "' onclick='DeleteCustomer(#=CustomerId#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(30).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.Customer.CustomerDelete));
        columns.Bound(p => p.CustomerName).Width(150).Sortable(true);
        columns.Bound(p => p.CustomerLastName).Width(80).Sortable(true);
        columns.Bound(p => p.TcIdentityNo).Width(80).Sortable(true);
        columns.Bound(p => p.PassportNo).Width(80).Sortable(true);
        columns.Bound(p => p.TaxOffice).Width(60).Sortable(true);
        columns.Bound(p => p.TaxNo).Width(60).Sortable(true);
        columns.Bound(p => p.CustomerTypeName).Width(50).Sortable(true);
        columns.Bound(p => p.CompanyTypeName).Width(50).Sortable(true);
        columns.Bound(p => p.GovernmentTypeName).Width(60).Sortable(true);
        columns.Bound(p => p.WitholdingStatusName).Width(60).Sortable(true);
        columns.Bound(p => p.IsActiveName).Width(30).Sortable(true);

    })
          .Pageable()
          .Sortable()
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListCustomer", "Customer", Model).Data("GetParameters"))
                                        .Model(model => model.Field(o => o.CustomerId).DefaultValue(-1)))

    )
</div>
<div id="divDetails">
    @(Html.Kendo().TabStrip()
          .Name("CustomerDetails")
          .Items(tabstrip => tabstrip.Add().Text(MessageResource.CustomerAddress_PageTitle_Index).LoadContentFrom(Url.Action("CustomerAddressIndex", "CustomerAddress")))
          .Items(tabstrip => tabstrip.Add().Text(MessageResource.CustomerContact_PageTitle_Index).LoadContentFrom(Url.Action("CustomerContactIndex", "CustomerContact"))))

</div>
@Html.HiddenFor(m => m.CustomerId)
@Html.HiddenFor(m => m.CustomerName)

