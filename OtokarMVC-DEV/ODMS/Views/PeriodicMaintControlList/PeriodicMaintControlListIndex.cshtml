@model ODMSModel.PeriodicMaintControlList.PeriodicMaintControlListListModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("PeriodicMaintControlList_PageTitle_Index");
}
 
@Html.AntiForgeryToken()
<div id="showSearch">@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(v => v.IdType)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.IdType).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.VehicleTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")).Events(events => events.Change("function (){ if (this.value() && this.selectedIndex == -1) {" +
                                                                                                                                                                                                                                                                                    "var dt = this.dataSource._data[0];" +
                                                                                                                                                                                                                                                                                    "this.text('');" +
                                                                                                                                                                                                                                                                                    "}" +
                                                                                                                                                                                                                                                                                    "}"))</div>

        <div class="labelDiv">@Html.LabelFor(v => v.LanguageCustom)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.LanguageCustom).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.LanguageList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>

        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.EngineType)</div>
        <div class="shortTxtDiv">@Html.TextBoxFor(v => v.EngineType, null, new {maxlength = 30})</div>
    </div>
</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.PeriodicMaintControlList.PeriodicMaintControlListIndex)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClick createNew", CommonUtility.GetResourceValue("PeriodicMaintControlList_PageTitle_Create"), CommonValues.PermissionCodes.PeriodicMaintControlList.PeriodicMaintControlListCreate)

<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
        .Name("modelWindow")
     .Draggable()
    .Resizable()
    .Width(950)
    .Height(350)
    .Visible(false)
    .Modal(true)
    .Iframe(true)
    .Events(ev => ev.Close(@"function(e){
         var grid = $('#grid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
    )
</div>
<script>

    function DeletePeriodicMaintControlList(obj, PeriodicMaintCtrlListId, idType, LanguageCustom) {
        var token = $('input[name="__RequestVerificationToken"]').val();
        DeleteConfirm(function () {
            $.ajax({
                type: "POST",
                url: "@Url.Action("DeletePeriodicMaintControlList", "PeriodicMaintControlList")",
                data: { periodicMaintCtrlListId: PeriodicMaintCtrlListId, idType: idType, langCode: LanguageCustom, "__RequestVerificationToken": token },
                traditional: true,
                success: function (result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#grid').data('kendoGrid');
                        grid.dataSource.read();
                        SetSuccessMessage(result.Message);
                    }
                },
                dataType: "json"
            });
        });
    }

    function Search() {
        return {
            IdType: $('#IdType').val(),
            LanguageCustom: $('#LanguageCustom').val(),
            EngineType: $('#EngineType').val()
        };
    }

    $(document).ready(function () {

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.page(1);

        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Hide_Search_Criteria")');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });
        $("body").delegate(".modalClick", "click", function (e) {
            $('#modelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("createNew")) {
                link = "@Url.Action("PeriodicMaintControlListCreate", "PeriodicMaintControlList")";
            }
            $("#modelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();

        });

    });
    function onRowDataBound(docId) {
        if (docId != null) {
            return "<center><a href='@Url.Action("PeriodicMaintControlListDocumentDownload", "PeriodicMaintControlList")/" + docId + "'><img class=iconLink src='@Url.Content("~/Images/save.png")'></a></center>";
        }
        else {
            return "";
        }
    }
</script>
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.PeriodicMaintControlList.PeriodicMaintControlListListModel>()
          .Name("grid")
          .Columns(columns =>
          {
              columns.Bound(p => p.IdType).ClientTemplate("#= onRowDataBound(DocId)#").Width(70).Title(CommonUtility.GetResourceValue("Global_Display_Download")).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PeriodicMaintControlList.PeriodicMaintControlListIndex));
              columns.Bound(p => p.IdType).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + CommonUtility.GetResourceValue("CustomerDiscount_PageTitle_Delete") + "' onclick='DeletePeriodicMaintControlList(this, #=PeriodicMaintCtrlListId#, #=IdType#, \"#=LanguageCustom#\");'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(CommonUtility.GetResourceValue("Global_Display_Delete")).Width(70).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.PeriodicMaintControlList.PeriodicMaintControlListDelete));
              columns.Bound(p => p.ModelKod).Sortable(true);
              columns.Bound(p => p.TypeName).Sortable(true);
              columns.Bound(p => p.EngineType).Sortable(true);
              columns.Bound(p => p.DocName).Sortable(true);
              columns.Bound(p => p.LanguageName).Sortable(true);
              columns.Bound(p => p.DocumentDesc).Sortable(true);
              columns.Bound(p => p.PeriodicMaintCtrlListId).Sortable(false).Visible(false);
          })
          .Pageable()
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListPeriodicMaintControlList", "PeriodicMaintControlList", Model).Data("Search"))
                                        .Model(model => model.Field(o => o.IdType).DefaultValue(-1)))

          )
</div>
