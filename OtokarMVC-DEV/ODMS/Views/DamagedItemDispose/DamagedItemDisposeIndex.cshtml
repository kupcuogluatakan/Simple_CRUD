@using ODMSCommon.Security
@model ODMSModel.DamagedItemDispose.DamagedItemDisposeListModel
@{
    ViewBag.Title = CommonUtility.GetResourceValue("DamagedItemDispose_PageTitle_Index");
}
 

<div id="showSearch">@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")</div>
<div id="searchDiv">
    <div id="searchFields">
        <div class="labelDiv">@Html.LabelFor(v => v.DealerName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.DealerId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.DealerList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose")).Enable(UserManager.UserInfo.GetUserDealerId() == 0)</div>
        <div class="labelDiv">@Html.LabelFor(v => v.WarehouseName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.WarehouseId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.WarehouseList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.StockTypeName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.StockTypeId).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.StockTypeList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="labelDiv">@Html.LabelFor(v => v.IsOriginalName)</div>
        <div class="shortTxtDiv">@Html.Kendo().ComboBoxFor(v => v.IsOriginal).DataTextField("Text").DataValueField("Value").BindTo(ViewBag.YesNoList as List<SelectListItem>).Placeholder(CommonUtility.GetResourceValue("Global_Display_Choose"))</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.StartDate)</div>
        @*<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.StartDate).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text"})</div>*@
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.StartDate).Events(e => e.Open("OpenStartDate").Change("OpenEndDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>
        <div class="labelDiv">@Html.LabelFor(v => v.EndDate)</div>
        @*<div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.EndDate).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text"})</div>*@
        <div class="shortTxtDiv">@Html.Kendo().DatePickerFor(v => v.EndDate).Events(e => e.Open("OpenEndDate").Change("OpenStartDate")).Format("dd/MM/yyyy").ParseFormats(new[] { "dd.MM.yyyy" }).HtmlAttributes(new { type = "text", onkeypress = "return false;" })</div>
        <div class="clearDiv">&nbsp;</div>
        <div class="labelDiv">@Html.LabelFor(v => v.PartName)</div>
        <div class="shortTxtDiv">
        @{
            Html.RenderAction("AutocompleteSearch", "AutocompleteSearch", new { SearchType = "SparePart", ControlId = "PartId", Title1 = "", Title2 = "", DefaultText = "", DefaultValue = "" });
        }
        </div>
    </div>
</div>
@ODMSHelpers.LinkButton("btnSearch", CommonUtility.GetResourceValue("Global_Display_Search"), "", "", "", CommonValues.PermissionCodes.DamagedItemDispose.DamagedItemDisposeIndex)
@ODMSHelpers.LinkButton("btnCreate", CommonUtility.GetResourceValue("Global_Display_New"), "Create", "modalClick createNew", CommonUtility.GetResourceValue("DamagedItemDispose_PageTitle_Create"), CommonValues.PermissionCodes.DamagedItemDispose.DamagedItemDisposeCreate)

<br />
<div id="modelWindowDiv">
    @(Html.Kendo().Window()
          .Name("modelWindow")
          .Draggable()
          .Resizable()
          .Width(950)
          .Height(350)
          .Visible(false)
          .Modal(true)
          .Iframe(true)
          .Events(ev => ev.Close(@"function(e){
         var grid = $('#grid').data('kendoGrid');
        grid.dataSource.page(1);
    }"))
          )
</div>
<script>
    function OpenStartDate() {
        var dateStart = $("#StartDate").data("kendoDatePicker");
        var dateEnd = $("#EndDate").data("kendoDatePicker");
        if ($("#EndDate").val()) {
            dateStart.max(dateEnd.value());
        } else {
            dateStart.max(new Date(3000, 0, 1));
        }
    }

    function OpenEndDate() {
        var dateStart = $("#StartDate").data("kendoDatePicker");
        var dateEnd = $("#EndDate").data("kendoDatePicker");
        if ($("#StartDate").val()) {
            dateEnd.min(dateStart.value());
        } else {
            dateEnd.min(new Date(1900, 0, 1));
        }
    }
</script>
<script>
    function Search() {
        return {
            DealerId: $('#DealerId').val(),
            WarehouseId: $('#WarehouseId').val(),
            StockTypeId: $('#StockTypeId').val(),
            IsOriginal: $('#IsOriginal').val(),
            StartDate: $('#StartDate').val(),
            EndDate: $('#EndDate').val(),
            PartId: $('#PartId').val()
        };
    }
    $(document).ready(function () {

        $("body").delegate("#btnSearch", "click", function (e) {
            var grid = $('#grid').data('kendoGrid');
            grid.dataSource.page(1);

        });
        $("body").delegate("#showSearch", "click", function (e) {
            var IsVisible = Boolean($(this).hasClass("searchVisible"));

            if (!IsVisible) {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Hide_Search_Criteria")');
                $(this).addClass("searchVisible");
                $("#searchDiv").show("slow");
            }
            else {
                $(this).html('@CommonUtility.GetResourceValue("Global_Display_Search_Criteria")');
                $(this).removeClass("searchVisible");
                $("#searchDiv").hide("slow");
            }
        });
        $("body").delegate(".modalClick", "click", function (e) {
            $('#modelWindow').html('');
            e.preventDefault();

            var link;
            var clickedId = $(this).attr("id");
            var frameTitle = $(this).attr("frameTitle");
            if ($(this).hasClass("createNew")) {
                link = "@Url.Action("DamagedItemDisposeCreate", "DamagedItemDispose")";
            }
            $("#modelWindow_wnd_title").html(frameTitle);

            var windowWidget = $("#modelWindow").data("kendoWindow");
            var closeOrigin = windowWidget.close;

            windowWidget.refresh({
                url: link
            }).center();
            windowWidget.center();
            windowWidget.open();
            
        });

    });
    function onRowDataBound(docId) {
        if (docId != null) {
            return "<center><a href='@Url.Action("DamagedItemDisposeDocumentDownload", "DamagedItemDispose")/"+docId+"'><img class=iconLink src='@Url.Content("~/Images/save.png")'></a></center>";
        }
        else {
            return "";
        }
    }
</script>
<div class="kendoGridDiv" id="grd">
    @(Html.Kendo().Grid<ODMSModel.DamagedItemDispose.DamagedItemDisposeListModel>()
          .Name("grid")
          //.Events(events => events.DataBound("onRowDataBound"))
          .Columns(columns =>
          {
              columns.Bound(p => p.DocId).ClientTemplate("#= onRowDataBound(DocId)#").Width(50).Title(CommonUtility.GetResourceValue("Global_Display_Download")).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.DamagedItemDispose.DamagedItemDisposeDetails));
              columns.Bound(p => p.DealerName).Width(100).Sortable(true);
              columns.Bound(p => p.WarehouseName).Width(100).Sortable(true);
              columns.Bound(p => p.RackName).Width(100).Sortable(true);
              columns.Bound(p => p.PartName).Width(100).Sortable(true);
              columns.Bound(p => p.Quantity).Width(100).Sortable(true);
              columns.Bound(p => p.CreateDate).Format("{0:dd/MM/yyyy}").Width(100).Sortable(true);
              columns.Bound(p => p.Description).Width(100).Sortable(true);
              columns.Bound(p => p.IsOriginalName).Width(100).Sortable(true);
              columns.Bound(p => p.StockTypeName).Width(100).Sortable(true);
              columns.Bound(p => p.DocName).Width(100).Sortable(true);
          })
          .Pageable()
          .Sortable()
          .Scrollable()


          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListDamagedItemDispose", "DamagedItemDispose", Model).Data("Search"))
                                        .Model(model => model.Field(o => o.DamageDisposeId).DefaultValue(-1)))

          )
</div>
