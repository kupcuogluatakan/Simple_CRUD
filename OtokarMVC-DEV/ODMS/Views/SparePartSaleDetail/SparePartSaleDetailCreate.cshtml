@using ODMSCommon.Resources

@model ODMSModel.SparePartSaleDetail.SparePartSaleDetailDetailModel
@{
    ViewBag.Title = MessageResource.SparePartSaleDetail_PageTitle_Create;
    Layout = "~/Views/Shared/Popup_Layout.cshtml";
    var currencyCode = "";
    var unitName = "";
    HtmlHelper.ClientValidationEnabled = false;
}
<style>
    #popupContent {
        width: 1490px;
        height: 690px;
        padding-top: 10px;
        padding-left: 10px;
        margin: 0;
        background-color: #EDF1F4 !important;
    }

    #showExcelUpload {
        color: #428BCA;
        cursor: pointer;
        display: table;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .locked {
        margin: 0 auto;
        z-index: 100011; /*because you could set some z-indexes in your code before, so lets make sure that this will be over every elements in html*/
        height: 100%;
        top: 50%;
        position: absolute;
        left: 45%;
    }

    .lockedwrapper {
        background-color: black;
        opacity: 0.5;
        display: none;
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        z-index: 100012;
    }
</style>
<link href="~/Style/Content.css" rel="stylesheet" />
<link href="~/Style/bootstrap.css" rel="stylesheet" />
<div class="lockedwrapper">
    <div class="locked">
        <div class="conteneur_78390">
            <div class="decalage_pers_78390">
                <div class="cercle_rouge_78390"></div>
            </div>
        </div>

    </div>
</div>

@Html.AntiForgeryToken()
@using (Html.BeginForm("SparePartSaleDetailCreate", "SparePartSaleDetail", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    IFormatProvider formatProvider =
        new System.Globalization.CultureInfo("tr-TR");
    <div class="labelDiv" style="color: red">@Html.LabelFor(d => d.TotalListPrice)</div>
    <div class="shortTxtDiv" style="color: red">@String.Format("{0:N}", Model.TotalListPrice) @Html.DisplayFor(e => e.DealerCurrencyCode)</div>

    <div class="labelDiv" style="color: red">@Html.LabelFor(d => d.TotalDiscountPrice)</div>
    <div class="shortTxtDiv" style="color: red">@String.Format("{0:N}", Model.TotalDiscountPrice) @Html.DisplayFor(e => e.DealerCurrencyCode)</div>

    <div class="clearDiv">&nbsp;</div>

    <div class="labelDiv" style="color: red">@Html.LabelFor(d => d.TotalPriceWithoutVatRatio)</div>
    <div class="shortTxtDiv" style="color: red">@String.Format("{0:N}", Model.TotalPriceWithoutVatRatio) @Html.DisplayFor(e => e.DealerCurrencyCode)</div>

    <div class="labelDiv" style="color: red">@Html.LabelFor(d => d.TotalPriceWithVatRatio)</div>
    <div class="shortTxtDiv" style="color: red">@String.Format("{0:N}", Model.TotalPriceWithVatRatio) @Html.DisplayFor(e => e.DealerCurrencyCode)</div>

    <div class="clearDiv">&nbsp;</div>
    if (ViewBag.PartSaleStatus != null && int.Parse(ViewBag.PartSaleStatus) == 0)
    {
        <div id="showExcelUpload">@MessageResource.SparePartSaleDetail_Display_FileUpload</div>
        <div id="divExcelUpload">
            <div class="labelDiv" style="width: 80px">@MessageResource.Global_Display_SampleFile </div>
            <div>
                <a class="k-link2" href="@Url.Action("ExcelSample")">
                    <img class=iconLink src='@Url.Content("~/Images/excelSample.png")' title='@MessageResource.Global_Display_SampleFile'>
                </a>
                <br />
            </div>

            @Html.Kendo().Upload().Messages(m => m.Select(MessageResource.SparePartSaleDetail_Display_FileUpload)).Name("excelFile").Multiple(false).HtmlAttributes(new { title = MessageResource.SparePartSaleDetail_Display_FileUpload })
        </div>
        <div class="clearDiv">&nbsp;</div>
        <div id="divSave">
            <div class="labelDiv">@Html.LabelFor(v => v.SparePartName)</div>
            <div id="divPart">
                @if (Model.IsFirstPartOriginal.HasValue)
                {
                    if (Model.IsFirstPartOriginal.GetValue<bool>())
                    {
                        Html.RenderAction("AutocompleteSearch", "AutocompleteSearch", new { SearchType = "OrginalSparePart", ControlId = "SparePartId", Title1 = "", Title2 = "", DefaultText = Model.SparePartName, DefaultValue = Model.SparePartId, CallbackFunction = "GetValues" });
                    }
                    else
                    {
                        Html.RenderAction("AutocompleteSearch", "AutocompleteSearch", new { SearchType = "NotOrginalSparePart", ControlId = "SparePartId", Title1 = "", Title2 = "", DefaultText = Model.SparePartName, DefaultValue = Model.SparePartId, CallbackFunction = "GetValues" });
                    }
                }
                else
                {
                    Html.RenderAction("AutocompleteSearch", "AutocompleteSearch", new { SearchType = "AllSparePart", CallbackFunction = "GetValues", ControlId = "SparePartId", Title1 = "", Title2 = "", DefaultText = Model.SparePartName, DefaultValue = Model.SparePartId });
                }
            </div>
            
            @Html.ValidationMessageFor(v => v.SparePartId)
            <div class="clearDiv">&nbsp;</div>
            <div id="divPartDetails">
                <div class="labelDiv">@Html.LabelFor(d => d.ListPrice)</div>
                <div class="shortTxtDiv">
                    @Html.Kendo().NumericTextBoxFor(v => v.ListPrice).Enable(false).Events(ev => ev.Change(@"function(e){CalculateValues(1);}")).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px" })
                    @Html.ValidationMessageFor(v => v.ListPrice)
                </div>

                <div class="labelDiv">@Html.LabelFor(d => d.DealerPrice)</div>
                <div class="shortTxtDiv">
                    @Html.Kendo().NumericTextBoxFor(v => v.DealerPrice).Enable(false).Events(ev => ev.Change(@"function(e){CalculateValues(1);}")).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px" })

                @Html.ValidationMessageFor(v => v.DealerPrice)
            </div>

            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(d => d.DiscountPrice)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.DiscountPrice).Events(ev => ev.Change(@"function(e){CalculateValues(2);}")).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px" })
                @Html.ValidationMessageFor(v => v.DiscountPrice)
            </div>
            <div class="labelDiv">@Html.LabelFor(d => d.DiscountRatio)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.DiscountRatio).Events(ev => ev.Change(@"function(e){CalculateValues(1);}")).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "6", data_val_min = "0", data_val_max = "1000", style = "width:202px" })
                @Html.ValidationMessageFor(v => v.DiscountRatio)
            </div>
            <div class="clearDiv">&nbsp;</div>
            <div class="labelDiv">@Html.LabelFor(d => d.PlanQuantity)</div>
            <div class="shortTxtDiv">
                @Html.Kendo().NumericTextBoxFor(v => v.PlanQuantity).Events(ev => ev.Change(@"function(e){CalculateValues(3);}")).Spinners(false).Decimals(2).HtmlAttributes(new { type = "text", maxlength = "6", data_val_min = "0", data_val_max = "1000", style = "width:202px" })
                @Html.ValidationMessageFor(v => v.PlanQuantity)
            </div>
            <div class="labelDiv">@Html.LabelFor(v => v.VatRatio)</div>
            <div class="shortTxtDiv">@Html.Kendo().NumericTextBoxFor(v => v.VatRatio).Enable(false).Spinners(false).Decimals(2).Format("{0:N}").HtmlAttributes(new { type = "text", maxlength = "10", data_val_min = "0", data_val_max = "1000", style = "width:202px" })</div>
            <div class="clearDiv">&nbsp;</div>

                <div id="alternatePartDiv">
                    <div class="redLabelDiv">@Html.LabelFor(v => v.AlternatePart)</div>
                    <div class="redShortTxtDiv">
                        <label style="width:200px">@Html.TextBoxFor(v => v.AlternatePart, new { style = "color:red" })</label>
                    </div>
                    <div class="redLabelDiv">@Html.LabelFor(v => v.CostPrice)</div>
                    <div class="redShortTxtDiv">
                        <label style="width:200px">@Html.TextBoxFor(v => v.CostPrice, new { style = "color:red" })</label>
                    </div>
                    <div class="clearDiv">&nbsp;</div>
                </div>
        </div>
    </div>
    @Html.HiddenFor(d => d.PartSaleId)
        @Html.HiddenFor(d => d.StatusId)

        @ODMSHelpers.Button("Create", MessageResource.Global_Display_Save, CommonValues.PermissionCodes.SparePartSaleDetail.SparePartSaleDetailCreate, "SparePartSaleDetailCreate")
        @ODMSHelpers.Button("Collect", MessageResource.SparePartSaleDetail_Display_SaveAndCollect, CommonValues.PermissionCodes.SparePartSale.SparePartSaleCollect, "SparePartSaleCollect", "SparePartSaleCollect")
    }
}
<div class="kendoGridDiv" id="grd2" style="width: 1450px">
    @(Html.Kendo().Grid<ODMSModel.SparePartSaleDetail.SparePartSaleDetailListModel>()
          .Name("grid2")
          .Columns(columns =>
          {
              columns.Bound(d => d.SparePartSaleDetailId).ClientTemplate("<center><a href='javascript:void(0);' frameTitle='" + MessageResource.SparePartSaleDetail_PageTitle_Delete + "' onclick='DeleteSparePartSaleDetail(#=SparePartSaleDetailId#);'><img class='iconLink' src='" + Url.Content("~/Images/delete.png") + "'/></a></center>").Title(MessageResource.Global_Display_Delete).Width(40).Sortable(false).Visible(ODMSHelpers.UserHasPermission(CommonValues.PermissionCodes.SparePartSaleDetail.SparePartSaleDetailDelete)).Visible(ViewBag.PartSaleStatus == ((int)CommonValues.SparePartSaleStatus.NewRecord).ToString());
              columns.Bound(d => d.SparePartCode).Width(100).Sortable(true);
              columns.Bound(d => d.SparePartName).Width(100).Sortable(true);
              columns.Bound(d => d.ListPriceWithCurrency).HtmlAttributes(new { style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.DealerPriceWithCurrency).HtmlAttributes(new { style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.DiscountPriceWithCurrency).HtmlAttributes(new { style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.DiscountRatio).HtmlAttributes(new { style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.PlanQuantity).HtmlAttributes(new { title = "asd", style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.PickQuantity).HtmlAttributes(new { title = "asd", style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.PickedQuantity).HtmlAttributes(new { title = "asd", style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.ReturnedQuantity).HtmlAttributes(new { title = "asd", style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.VatRatio).HtmlAttributes(new { style = "text-align:right" }).Width(50).Sortable(true);
              columns.Bound(d => d.StatusName).HtmlAttributes(new { title = "asd", style = "text-align:right" }).Width(50).Sortable(true);
          })
          .Pageable()
          .Sortable()
          .Scrollable()
          .Events(e => e.DataBound("SetRowsColor"))
          .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .PageSize(10)
                                        .ServerOperation(true)
                                        .Read(read => read.Action("ListSparePartSaleDetails", "SparePartSaleDetail", Model)))
    )

</div>
<script id="add-confirmation" type="text/x-kendo-template">
    <p class="add-message">@Html.Raw(MessageResource.SparePartSaleDetail_Warning_ChangedPart)</p>
    <p style="text-align:right">
        <button class="add-confirm k-button">@MessageResource.Global_Display_Yes</button>
        <button class="add-cancel k-button">@MessageResource.Global_Display_No</button>
    </p>
</script>
<script type="text/javascript">
    function AddConfirm(addFunction) {
        var confirm = false;
        var token = $('input[name="__RequestVerificationToken"]').val();
        var kendoWindow = $("<div />").kendoWindow({
            title: "@MessageResource.Gloabl_Display_Approve",
            resizable: false,
            modal: true
        });

        kendoWindow.data("kendoWindow")
            .content($("#add-confirmation").html())
            .center().open();

        kendoWindow
            .find(".add-confirm, .add-cancel")
            .click(function() {
                if ($(this).hasClass("add-confirm")) {
                    confirm = true;
                    if (addFunction)
                        addFunction();
                }
                else{
                    GetPartQuantityPriceDetails();
                }
                kendoWindow.data("kendoWindow").close();
            })
            .end();
        return confirm;
    }
    $(document).ready(function() {

        if($("#AlternatePart").val() == "")            
            $("#alternatePartDiv").hide();
        else            
            $("#alternatePartDiv").show();

        $('#DiscountRatio').change(function () {
            CalculateValues(1);
        });
        $('#DiscountPrice').change(function () {
            CalculateValues(2);
        });

        if ('@ViewBag.IsExcelUpload' != 'True') {
            $("#divExcelUpload").hide();
            if('@ViewBag.IsSuccess' != 'True')
                $('#divPartDetails').show();
            else
                $('#divPartDetails').hide();
            $('#divSave').show();
        } else {
            $('#divSave').hide();
        }

        $("body").delegate("#showExcelUpload", "click", function(e) {
            var IsVisible = Boolean($(this).hasClass("excelUploadVisible"));

            if (!IsVisible) {
                $(this).html('@MessageResource.SparePartSaleDetail_Display_FileUpload');
                $(this).addClass("excelUploadVisible");
                $("#divExcelUpload").show("slow");
                $('#divSave').hide("slow");
                $('#Collect').hide("slow");
            } else {
                $(this).html('@MessageResource.SparePartSaleDetail_Display_FileUpload');
                $(this).removeClass("excelUploadVisible");
                $("#divExcelUpload").hide("slow");
                $('#divSave').show("slow");
                $('#divPartDetails').hide();
                $('#Collect').show("slow");
            }
        });
    });

    function DeleteSparePartSaleDetail(sparePartSaleDetailId) {
        var token = $('input[name="__RequestVerificationToken"]').val();

        DeleteConfirm(function() {
            $.ajax({
                type: "POST",
                url: "@Url.Action("SparePartSaleDetailDelete", "SparePartSaleDetail")",
                data: { sparePartSaleDetailId: sparePartSaleDetailId, sparePartSaleId: @Model.PartSaleId, "__RequestVerificationToken": token },
                traditional: true,
                success: function(result) {
                    if (result.Status == 0)
                        SetErrorMessage(result.Message);
                    else {
                        var grid = $('#grid2').data('kendoGrid');
                        grid.dataSource.read();
                        SetSuccessMessage(result.Message);
                    }
                },
                dataType: "json"
            });
        });
    }

    function GetValues() {
        $('.lockedwrapper').css('display', 'block');
        var token = $('input[name="__RequestVerificationToken"]').val();
        $.post("@Url.Action("GetSparePartChangeInfo", "SparePartSaleDetail")", {
            partId: $('#SparePartId').val(),
            "__RequestVerificationToken": token
        }, function(json) {
            var message = "";
            if (json.MessageSplit != "") {
                message += " ";
                message += json.MessageSplit;
            }
            if (message != "") {
                SetErrorMessage(message);
            }

            var messageChange = json.MessageChange;
            if (messageChange != "") {
                AddConfirm(function() {
                    if (json.NewPartId != $('#SparePartId').val()) {
                        $('.lockedwrapper').css('display', 'none');
                        $("#SparePartId").val(json.NewPartId);
                        SetPartDetail(json.PartName, json.NewPartId);
                    }
                });

            } else {
                SetPartDetail(json.PartName, json.NewPartId);
            }
            $('.lockedwrapper').css('display', 'none');
        }, "JSON");

    }

    function SetPartDetail(partName, partId) {
        $.ajax({
            url: '@Url.Action("AutocompleteSearch", "AutocompleteSearch")',
            dataType: 'html',
            data: { SearchType: "AllSparePart", ControlId: "SparePartId", Title1: "", Title2: "", DefaultText: partName, DefaultValue: partId },
            traditional: true,
            type: 'POST',
            success: function (content) {
                $("#divPart").html(content);
                GetPartQuantityPriceDetails();
            }
        });
    }
    function GetPartQuantityPriceDetails() {

        $('.lockedwrapper').css('display', 'block');

        var token = $('input[name="__RequestVerificationToken"]').val();

        $.post("@Url.Action("GetValues", "SparePartSaleDetail")", {
            partId: $('#SparePartId').val(), partSaleId: $('#PartSaleId').val(),
            "__RequestVerificationToken": token
        }, function(json) {
            if (json) {
                currencyCode = json.CurrencyCode;
                unitName = json.UnitName;
                $("#PlanQuantity").kendoNumericTextBox({
                    spinners: false,
                    format: "#.00 " + unitName
                });
                $("#ListPrice").kendoNumericTextBox({
                    value: json.ListPrice,
                    spinners: false,
                    format: "#.00 " + currencyCode
                });
                $("#DiscountPrice").kendoNumericTextBox({
                    spinners: false,
                    format: "#.00 " + currencyCode
                });
                $("#DiscountRatio").kendoNumericTextBox({
                    value: json.DiscountRatio,
                    spinners: false
                });
                $("#VatRatio").kendoNumericTextBox({
                    value: json.VatRatio,
                    spinners: false
                });
                $("#DealerPrice").kendoNumericTextBox({
                    value: json.DealerPrice,
                    spinners: false,
                    format: "#.00 " + currencyCode
                });
                if(json.AlternatePart != "")
                {
                    $("#AlternatePart").val(json.AlternatePart);
                    $("#AlternatePart").attr("readonly", "readonly");
                    $("#CostPrice").val(json.CostPrice);
                    $("#CostPrice").attr("readonly", "readonly");

                    $("#alternatePartDiv").show();
                }
                else
                {
                    $("#CostPrice").val("");
                    $("#AlternatePart").val("");
                    $("#alternatePartDiv").hide();
                }
                $("#PickQuantity").val(json.PickingQuantity);
                $('.lockedwrapper').css('display', 'none');
                CalculateValues(1);
            }
        }, "JSON");
        $('.lockedwrapper').css('display', 'none');
        $('#divPartDetails').show();
    }
    function SetRowsColor()
    {
        if ($('#grid2').data() != null) {
            var dataSource = $('#grid2').data().kendoGrid.dataSource;
            var count = dataSource.total();
            for (var i = 0; i < count; i++) {
                var item = dataSource.data()[i];
                if (item.DiscountPrice != null && item.DealerPrice != null) {
                    if (item.DiscountPrice < item.DealerPrice) {
                        $('tr[data-uid="' + item.uid + '"] td:nth-child(8)').css("background-color", "red");
                    }
                }
            }
        }
    }

    function CalculateValues(type) {

        var discountRatio = $("#DiscountRatio").val().replace(',', '.');
        var listPrice = $("#ListPrice").val().replace(',', '.');
        var discountPrice = $("#DiscountPrice").val().replace(',', '.');
        var dealerPrice = $("#DealerPrice").val().replace(',', '.');
        var planQuantity = $("#PlanQuantity").val().replace(',', '.');

        if (type == 2) {
            if (listPrice != '' && discountPrice != '') {
                discountRatio = ((parseFloat(listPrice) - parseFloat(discountPrice)) * 100) / parseFloat(listPrice);
                if ($("#DiscountRatio").data('kendoNumericTextBox').value() != discountRatio.toString().replace('.', ',')) {

                    $("#DiscountRatio").kendoNumericTextBox({
                        value: discountRatio,
                        spinners: false
                    });
                }
            }
        }


        if (type == 1) {
            if (discountRatio != '' && listPrice != '') {
                discountPrice = parseFloat(listPrice) * ((100 - parseFloat(discountRatio)) / 100);
                if ($("#DiscountPrice").data('kendoNumericTextBox').value() != discountPrice.toString().replace('.', ',')) {
                    $("#DiscountPrice").kendoNumericTextBox({
                        value: discountPrice,
                        format: "#.00 " + currencyCode,
                        spinners: false
                    });
                }
            }
        }
        /*
        maliyet (ort satınalma fiyatı)X1,(karmarjıyüzdesi/100) ile ekranda ki  indirimli fiyat karşılaştır.
        indirimli<yeni fiyat ise background kırmızı yaz.
        */
        if (parseFloat(discountPrice) < parseFloat(dealerPrice)) {
            document.getElementById("DiscountPrice").style.backgroundColor = "red";
        } else {
            document.getElementById("DiscountPrice").style.backgroundColor = "white";
        }

        @*if (planQuantity < (pickedQuantity + pickQuantity - returnedQuantity)) {
            SetErrorMessage("@MessageResource.SparePartSaleDetail_Warning_QuantityPickQuantity");
        }*@
    }
</script>

<script type="text/javascript">
    $(function () {
        $('.k-widget').addClass('input-validation-valid');
        $(".k-widget").removeClass("input-validation-error");
    });
</script>
